/* eslint-disable no-underscore-dangle */
import { __awaiter, __generator } from "tslib";
import { SDKBase, createSDK } from '@magic-sdk/provider';
import localForage from 'localforage';
import * as memoryDriver from 'localforage-driver-memory';
import { IframeController } from './iframe-controller';
import { WebTransport } from './web-transport';
export * from '@magic-sdk/commons';
export var Magic = createSDK(SDKBase, {
    platform: 'web',
    sdkName: 'magic-sdk',
    version: '4.1.1',
    defaultEndpoint: 'https://auth.magic.link/',
    ViewController: IframeController,
    PayloadTransport: WebTransport,
    configureStorage: /* istanbul ignore next */ function () { return __awaiter(void 0, void 0, void 0, function () {
        var lf;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    lf = localForage.createInstance({
                        name: 'MagicAuthLocalStorageDB',
                        storeName: 'MagicAuthLocalStorage',
                    });
                    return [4 /*yield*/, lf.defineDriver(memoryDriver)];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, lf.setDriver([localForage.INDEXEDDB, localForage.LOCALSTORAGE, memoryDriver._driver])];
                case 2:
                    _a.sent();
                    return [2 /*return*/, lf];
            }
        });
    }); },
});
//# sourceMappingURL=index.js.map