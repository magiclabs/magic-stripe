"use strict";
/* eslint-disable no-underscore-dangle */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
require("regenerator-runtime/runtime");
var provider_1 = require("@magic-sdk/provider");
var publicAPI = tslib_1.__importStar(require("@magic-sdk/commons"));
var localforage_1 = tslib_1.__importDefault(require("localforage"));
var localforage_driver_memory_1 = tslib_1.__importDefault(require("localforage-driver-memory"));
var iframe_controller_1 = require("./iframe-controller");
var web_transport_1 = require("./web-transport");
var Magic = provider_1.createSDK(provider_1.SDKBase, {
    platform: 'web',
    sdkName: 'magic-sdk',
    version: '4.1.1',
    defaultEndpoint: 'https://auth.magic.link/',
    ViewController: iframe_controller_1.IframeController,
    PayloadTransport: web_transport_1.WebTransport,
    configureStorage: /* istanbul ignore next */ function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var lf;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    lf = localforage_1.default.createInstance({
                        name: 'MagicAuthLocalStorageDB',
                        storeName: 'MagicAuthLocalStorage',
                    });
                    return [4 /*yield*/, lf.defineDriver(localforage_driver_memory_1.default)];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, lf.setDriver([localforage_1.default.INDEXEDDB, localforage_1.default.LOCALSTORAGE, localforage_driver_memory_1.default._driver])];
                case 2:
                    _a.sent();
                    return [2 /*return*/, lf];
            }
        });
    }); },
});
exports.default = Magic;
// NOTE: enums are emitted by TypeScript -- in the CDN bundle we attach public
// enums and error classes as static members of the `MagicSDK` class.
Object.assign(Magic, tslib_1.__assign({}, publicAPI));
//# sourceMappingURL=index.cdn.js.map