{"version":3,"file":"index.js","sources":["../src/create-hash.ts","../src/index.ts"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n\n/*\n  This code is modified from the `object-hash` NPM package. It's a great\n  package, but due to the way it's bundled for distribution, the entire `crypto`\n  module is used, even though only a small subset of APIs are required. This\n  inflates the package size by quite a lot! To reduce the size of the\n  dependency, the `crypto` module is \"tree-shaken\" by `microbundle` and only the\n  essentials of the `object-hash` API are included.\n\n  @see https://www.npmjs.com/package/object-hash\n  @see https://github.com/puleos/object-hash\n  @see https://github.com/puleos/object-hash/issues/91\n */\n\nimport { createHash as nodeCreateHash, Hash } from 'crypto';\n\n/** Check if the given function is a native function */\nfunction isNativeFunction(f: any) {\n  if (typeof f !== 'function') return false;\n  const exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\n\nexport function createHash<T>(object: T) {\n  const hashingStream = nodeCreateHash('md5');\n  const { dispatch } = typeHasher(hashingStream);\n  dispatch(object);\n\n  if (!hashingStream.update) hashingStream.end('');\n  if (hashingStream.digest) return hashingStream.digest('hex');\n\n  const buf = hashingStream.read();\n  return buf.toString('hex');\n}\n\nfunction typeHasher(writeTo: Hash) {\n  const context: any[] = [];\n\n  const write = (str: string) => {\n    if (writeTo.update) writeTo.update(str, 'utf8');\n    writeTo.write(str, 'utf8');\n  };\n\n  const dispatch = (value: any) => {\n    const type = value === null ? 'null' : typeof value;\n    (typeHandlers as any)[`_${type}`](value);\n  };\n\n  const typeHandlers = {\n    _object(object: any) {\n      const pattern = /\\[object (.*)\\]/i;\n      const objString = Object.prototype.toString.call(object);\n      const execArr = pattern.exec(objString);\n      const objType = execArr ? execArr[1].toLowerCase() : `unknown:[${objString}]`.toLowerCase();\n\n      const objectNumber = context.indexOf(object);\n      if (objectNumber >= 0) dispatch(`[CIRCULAR:${objectNumber}]`);\n      context.push(object);\n\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        write(object.toString('hex'));\n      }\n\n      if (objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if ((typeHandlers as any)[`_${objType}`]) {\n          (typeHandlers as any)[`_${objType}`](object);\n        } else {\n          write(`[${objType}]`);\n        }\n      } else {\n        const keys = Object.keys(object)\n          .sort()\n          .splice(0, 0, 'prototype', '__proto__', 'constructor');\n        write(`object:${keys.length}:`);\n\n        keys.forEach(key => {\n          dispatch(key);\n          write(':');\n          write(',');\n        });\n      }\n    },\n    _array(arr: any[]) {\n      write(`array:${arr.length}:`);\n      arr.forEach(dispatch);\n    },\n    _date(date: Date) {\n      write(`date:${date.toJSON()}`);\n    },\n    _symbol(sym: symbol) {\n      write(`symbol:${sym.toString()}`);\n    },\n    _error(err: Error) {\n      write(`error:${err.toString()}`);\n    },\n    _boolean(bool: boolean) {\n      write(`bool:${bool.toString()}`);\n    },\n    _string(string: string) {\n      write(`string:${string.length}:`);\n      write(string.toString());\n    },\n    _function(fn: Function) {\n      write('fn:');\n      if (isNativeFunction(fn)) dispatch('[native]');\n      else dispatch(fn.toString());\n      dispatch(`function-name:${String(fn.name)}`);\n      this._object(fn);\n    },\n    _number(number: number) {\n      write(`number:${number.toString()}`);\n    },\n    _xml(xml: any) {\n      write(`xml:${xml.toString()}`);\n    },\n    _null() {\n      write('Null');\n    },\n    _undefined() {\n      write('Undefined');\n    },\n    _regexp(regex: RegExp) {\n      write(`regex:${regex.toString()}`);\n    },\n    _uint8array(arr: Uint8Array) {\n      write('uint8array:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray(arr: Uint8ClampedArray) {\n      write('uint8clampedarray:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array(arr: Int8Array) {\n      write('uint8array:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array(arr: Uint16Array) {\n      write('uint16array:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array(arr: Int16Array) {\n      write('uint16array:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array(arr: Uint32Array) {\n      write('uint32array:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array(arr: Int32Array) {\n      write('uint32array:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array(arr: Float32Array) {\n      write('float32array:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array(arr: Float64Array) {\n      write('float64array:');\n      dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer(arr: ArrayBuffer) {\n      write('arraybuffer:');\n      dispatch(new Uint8Array(arr));\n    },\n    _url(url: URL) {\n      write(`url:${url.toString()}`);\n    },\n    _map(map: Map<any, any>) {\n      write('map:');\n      const arr = Array.from(map);\n      typeHandlers._array(arr);\n    },\n    _set(set: Set<any>) {\n      write('set:');\n      const arr = Array.from(set);\n      typeHandlers._array(arr);\n    },\n    _blob() {\n      write('[blob]');\n    },\n    _domwindow() {\n      write('domwindow');\n    },\n  };\n\n  return { dispatch };\n}\n","import { useEffect, useState } from 'react';\nimport { createHash } from './create-hash';\n\n/**\n * Returns a hash of the given `value`. This is useful for comparing objects\n * deeply. For example, if the contents of an array are referenced inside a\n * `useEffect`, you can pass the hashed array to the effect dependencies to\n * invoke it when the array updates.\n */\nexport function useHash<T>(value: T) {\n  const [hash, setHash] = useState<string>(createHash(typeof value === 'undefined' ? null : ''));\n  useEffect(() => {\n    if (value) setHash(createHash(value));\n  }, [value]);\n  return hash;\n}\n"],"names":["createHash","object","writeTo","context","write","dispatch","typeHandlers","hashingStream","nodeCreateHash","str","update","value","_object","objString","Object","prototype","toString","call","execArr","exec","objType","toLowerCase","objectNumber","indexOf","push","Buffer","isBuffer","keys","sort","splice","length","forEach","key","_array","arr","_date","date","toJSON","_symbol","sym","_error","err","_boolean","bool","_string","string","_function","fn","f","Function","String","name","this","_number","number","_xml","xml","_null","_undefined","_regexp","regex","_uint8array","Array","slice","_uint8clampedarray","_int8array","_uint16array","_int16array","_uint32array","_int32array","_float32array","_float64array","_arraybuffer","Uint8Array","_url","url","_map","map","from","_set","set","_blob","_domwindow","end","digest","read","useState","hash","setHash","useEffect"],"mappings":"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"}