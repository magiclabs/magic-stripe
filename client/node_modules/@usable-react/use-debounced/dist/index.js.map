{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n/**\n * Debounces the given value. If `delay` is zero, the value is updated\n * synchronously.\n */\nexport function useDebounced<T>(value: T, delay = 300) {\n  const isSynchronous = delay === 0;\n  const [debouncedValue, setDebouncedValue] = useState<T>((undefined as unknown) as T);\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => clearTimeout(id);\n  }, [delay, isSynchronous, value]);\n\n  return isSynchronous ? value : debouncedValue;\n}\n"],"names":["value","delay","isSynchronous","useState","undefined","debouncedValue","setDebouncedValue","useEffect","id","setTimeout","clearTimeout"],"mappings":"qDAMgCA,EAAUC,YAAAA,IAAAA,EAAQ,KAChD,IAAMC,EAA0B,IAAVD,IACsBE,gBAAaC,GAAlDC,OAAgBC,OAUvB,OARAC,YAAU,WACR,IAAMC,EAAKC,WAAW,WACpBH,EAAkBN,IACjBC,GAEH,yBAAaS,aAAaF,KACzB,CAACP,EAAOC,EAAeF,IAEnBE,EAAgBF,EAAQK"}