{"version":3,"file":"index.m.js","sources":["../src/index.ts","../../use-initial-render/dist/index.m.js"],"sourcesContent":["import { EffectCallback, useEffect, useRef } from 'react';\nimport { useInitialRender } from '@usable-react/use-initial-render';\n\n/**\n * Exactly like `useEffect`, except that the effect only executes on subsequent\n * updates after a component mounts.\n */\nexport function useEffectAfterMount(effect: EffectCallback, deps?: readonly any[]) {\n  const isInitialRender = useInitialRender();\n  const savedCallback = useRef(effect);\n\n  useEffect(() => {\n    savedCallback.current = effect;\n  }, [effect]);\n\n  useEffect(() => {\n    if (!isInitialRender) {\n      return savedCallback.current();\n    }\n\n    return undefined;\n  }, deps);\n}\n","import{useRef as r,useEffect as t}from\"react\";function n(){var n=r(!0);return t(function(){n.current=!1},[]),n.current}export{n as useInitialRender};\n//# sourceMappingURL=index.m.js.map\n"],"names":["useEffectAfterMount","effect","deps","isInitialRender","useRef","useEffect","current","savedCallback"],"mappings":"uDAOgBA,EAAoBC,EAAwBC,GAC1D,ICDMC,EDCAA,GCDAA,EAAkBC,GAAAA,GACxBC,EAAU,WACRF,EAAgBG,SAAAA,GACf,IACIH,EAAgBG,SDFjBC,EAAgBH,EAAOH,GAE7BI,EAAU,WACRE,EAAcD,QAAUL,GACvB,CAACA,IAEJI,EAAU,WACR,IAAKF,EACH,OAAOI,EAAcD,WAItBJ"}