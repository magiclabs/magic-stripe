{"ast":null,"code":"import { __rest } from '../../../_virtual/_tslib.js';\nimport React, { createContext, useRef, useContext } from 'react';\nimport { usePress, useHover } from '@react-aria/interactions';\nimport { useFocusRing } from '@react-aria/focus';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { classNames } from '../../../libs/class-names.js';\nimport { mergeProps } from '../../../libs/merge-props.js';\nimport 'color';\nimport 'blueimp-md5';\nimport '@artsy/fresnel';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper.js';\nimport 'usable-react';\nimport composeRefs from '@seznam/compose-react-refs';\nimport '../../theme/inverse-theme-semantics.js';\nimport '@react-aria/ssr';\nimport '../../theme/theme-provider.js';\nimport { Spacer } from '../../layout/spacer.js';\nimport { useScaleIn, useScale } from '../../../hooks/transitions.js';\nimport 'react-dom';\nimport 'watch-resize';\nimport modules_331aea95 from './radio.less.js';\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\nconst RadioGroupContext = /* @__PURE__ */createContext({});\n\nconst RadioGroup = props => {\n  const {\n    name,\n    selectedValue,\n    onChange,\n    children\n  } = props;\n  return React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name,\n      selectedValue,\n      onChange\n    }\n  }, children);\n};\n\nRadioGroup.defaultProps = {\n  onChange: () => {}\n};\nRadioGroup.displayName = 'RadioGroup';\nconst Radio = /* @__PURE__ */forwardRefWrapper('Radio', {\n  color: 'primary'\n}, (props, externalRef) => {\n  const {\n    onPress,\n    disabled,\n    checked,\n    label,\n    color,\n    value\n  } = props,\n        otherProps = __rest(props, [\"onPress\", \"disabled\", \"checked\", \"label\", \"color\", \"value\"]);\n\n  const inputRef = useRef(null);\n  const {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing();\n  const {\n    pressProps,\n    isPressed\n  } = usePress({\n    onPress,\n    isDisabled: disabled\n  });\n  const {\n    isHovered,\n    hoverProps\n  } = useHover({\n    isDisabled: disabled\n  });\n  const getScaleInProps = useScaleIn();\n  const getScaleProps = useScale();\n  const {\n    name,\n    selectedValue,\n    onChange\n  } = useContext(RadioGroupContext);\n  const isChecked = checked || (Array.isArray(value) ? value.every(i => i === selectedValue) : selectedValue === value && typeof value !== 'undefined' && value !== null);\n  return React.createElement(\"label\", {\n    className: modules_331aea95.Radio\n  }, React.createElement(\"input\", Object.assign({\n    type: \"radio\",\n    disabled: disabled,\n    \"aria-disabled\": disabled,\n    tabIndex: 0,\n    value: value,\n    checked: isChecked\n  }, mergeProps({\n    name,\n    onChange\n  }, pressProps, focusProps, hoverProps, otherProps), {\n    ref: composeRefs(inputRef, externalRef)\n  })), React.createElement(\"span\", {\n    className: classNames([modules_331aea95.radiomark, modules_331aea95[`color_${color}`], disabled && modules_331aea95.disabled, isChecked && modules_331aea95.checked, isFocusVisible && modules_331aea95.focusVisible, isPressed && modules_331aea95.active, isHovered && modules_331aea95.hover]),\n    \"aria-hidden\": \"true\"\n  }, React.createElement(AnimatePresence, null, isFocusVisible && React.createElement(motion.span, Object.assign({\n    \"aria-hidden\": \"true\",\n    className: modules_331aea95.focusRing\n  }, getScaleInProps(1.1)))), React.createElement(AnimatePresence, {\n    initial: false\n  }, isChecked && React.createElement(motion.span, Object.assign({\n    className: modules_331aea95.radiomarkIcon\n  }, getScaleProps(0.7), {\n    key: 0\n  }), React.createElement(\"span\", null)))), label && React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    size: 8,\n    inline: true\n  }), React.createElement(\"span\", null, label)));\n});\nexport { Radio, RadioGroup };","map":{"version":3,"sources":["../../../../../src/components/primitives/radio/radio.tsx"],"names":["styles"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React, { useRef, createContext, useContext } from 'react';\nimport { PressEvent } from '@react-types/shared';\nimport { usePress, useHover } from '@react-aria/interactions';\nimport composeRefs from '@seznam/compose-react-refs';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useFocusRing } from '@react-aria/focus';\nimport { mergeProps } from '../../../libs/merge-props';\nimport { classNames } from '../../../libs/class-names';\nimport { Spacer } from '../../layout';\nimport { useScale, useScaleIn } from '../../../hooks/transitions';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper';\n\nimport styles from './radio.less';\n\nconst RadioGroupContext = /* @__PURE__ */ createContext<any>({});\n\ninterface RadioGroupProps {\n  name: string;\n  selectedValue?: string | number | boolean;\n  onChange?: React.EventHandler<React.ChangeEvent<HTMLInputElement>>;\n}\n\nexport const RadioGroup: React.FC<RadioGroupProps> = (props) => {\n  const { name, selectedValue, onChange, children } = props;\n\n  return <RadioGroupContext.Provider value={{ name, selectedValue, onChange }}>{children}</RadioGroupContext.Provider>;\n};\n\nRadioGroup.defaultProps = {\n  onChange: () => {},\n};\n\nRadioGroup.displayName = 'RadioGroup';\n\ninterface RadioProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  color?: 'primary' | 'success' | 'warning' | 'error';\n  onPress?: (event: PressEvent) => void;\n}\n\nexport const Radio = /* @__PURE__ */ forwardRefWrapper<HTMLInputElement, RadioProps>(\n  'Radio',\n\n  { color: 'primary' },\n\n  (props, externalRef) => {\n    const { onPress, disabled, checked, label, color, value, ...otherProps } = props;\n\n    const inputRef = useRef<HTMLInputElement | null>(null);\n    const { isFocusVisible, focusProps } = useFocusRing();\n    const { pressProps, isPressed } = usePress({ onPress, isDisabled: disabled });\n    const { isHovered, hoverProps } = useHover({ isDisabled: disabled });\n    const getScaleInProps = useScaleIn();\n    const getScaleProps = useScale();\n\n    const { name, selectedValue, onChange } = useContext(RadioGroupContext);\n\n    const isChecked =\n      checked ||\n      (Array.isArray(value)\n        ? value.every((i) => i === selectedValue)\n        : selectedValue === value && typeof value !== 'undefined' && value !== null);\n\n    return (\n      <label className={styles.Radio}>\n        <input\n          type=\"radio\"\n          disabled={disabled}\n          aria-disabled={disabled}\n          tabIndex={0}\n          value={value}\n          checked={isChecked}\n          {...mergeProps({ name, onChange }, pressProps, focusProps, hoverProps, otherProps)}\n          ref={composeRefs(inputRef, externalRef)}\n        />\n\n        <span\n          className={classNames([\n            styles.radiomark,\n            styles[`color_${color}`],\n            disabled && styles.disabled,\n            isChecked && styles.checked,\n            isFocusVisible && styles.focusVisible,\n            isPressed && styles.active,\n            isHovered && styles.hover,\n          ])}\n          aria-hidden=\"true\"\n        >\n          <AnimatePresence>\n            {isFocusVisible && (\n              <motion.span aria-hidden=\"true\" className={styles.focusRing} {...getScaleInProps(1.1)} />\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence initial={false}>\n            {isChecked && (\n              <motion.span className={styles.radiomarkIcon} {...getScaleProps(0.7)} key={0}>\n                <span />\n              </motion.span>\n            )}\n          </AnimatePresence>\n        </span>\n\n        {label && (\n          <>\n            <Spacer size={8} inline />\n            <span>{label}</span>\n          </>\n        )}\n      </label>\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}