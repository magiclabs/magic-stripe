{"ast":null,"code":"import React from 'react';\nimport '@react-aria/interactions';\nimport 'framer-motion';\nimport { classNames } from '../../../libs/class-names.js';\nimport 'color';\nimport 'blueimp-md5';\nimport '@artsy/fresnel';\nimport { Icon } from '../../icons/icon-base.js';\nimport { Exclaim } from '../../icons/monochrome/exclaim.js';\nimport { Info } from '../../icons/monochrome/info.js';\nimport { SuccessFilled } from '../../icons/monochrome/success-filled.js';\nimport { Warning } from '../../icons/monochrome/warning.js';\nimport { FlexRow } from '../../layout/flexbox/flexbox.js';\nimport { Inset } from '../../layout/inset/inset.js';\nimport 'usable-react';\nimport '@seznam/compose-react-refs';\nimport '../../theme/inverse-theme-semantics.js';\nimport '@react-aria/ssr';\nimport '../../theme/theme-provider.js';\nimport 'react-dom';\nimport 'watch-resize';\nimport modules_8404409d from './alert.less.js';\n\nconst Alert = props => {\n  const {\n    label,\n    type,\n    children\n  } = props;\n  let iconType;\n\n  switch (type) {\n    case 'success':\n      iconType = SuccessFilled;\n      break;\n\n    case 'warning':\n      iconType = Warning;\n      break;\n\n    case 'error':\n      iconType = Exclaim;\n      break;\n\n    case 'info':\n    default:\n      iconType = Info;\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    className: classNames([modules_8404409d.Alert, modules_8404409d[type]])\n  }, React.createElement(FlexRow, {\n    vertical: \"flex-start\"\n  }, React.createElement(Inset, {\n    top: 2\n  }, React.createElement(Icon, {\n    size: 20,\n    type: iconType\n  })), React.createElement(\"div\", {\n    role: \"status\",\n    className: modules_8404409d.message\n  }, label && React.createElement(\"div\", {\n    className: modules_8404409d.label\n  }, label), children)));\n};\n\nAlert.defaultProps = {\n  type: 'info'\n};\nexport { Alert };","map":{"version":3,"sources":["../../../../../src/components/feedback/alert/alert.tsx"],"names":["MonochromeIcons.SuccessFilled","MonochromeIcons.Warning","MonochromeIcons.Exclaim","MonochromeIcons.Info","styles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;MAYa,KAAK,GAA0B,KAAD,IAAM;AAC/C,QAAM;AAAE,IAAA,KAAF;AAAS,IAAA,IAAT;AAAe,IAAA;AAAf,MAA4B,KAAlC;AAEA,MAAI,QAAJ;;AACA,UAAQ,IAAR;AACE,SAAK,SAAL;AACE,MAAA,QAAQ,GAAGA,aAAX;AACA;;AAEF,SAAK,SAAL;AACE,MAAA,QAAQ,GAAGC,OAAX;AACA;;AAEF,SAAK,OAAL;AACE,MAAA,QAAQ,GAAGC,OAAX;AACA;;AAEF,SAAK,MAAL;AACA;AACE,MAAA,QAAQ,GAAGC,IAAX;AACA;AAhBJ;;AAmBA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,UAAU,CAAC,CAACC,gBAAM,CAAC,KAAR,EAAeA,gBAAM,CAAC,IAAD,CAArB,CAAD;AAA1B,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,IAAA,QAAQ,EAAC;AAAV,GAAR,EACE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,GAAG,EAAE;AAAN,GAAN,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,IAAI,EAAE,EAAP;AAAW,IAAA,IAAI,EAAE;AAAjB,GAAL,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,IAAI,EAAC,QAAV;AAAmB,IAAA,SAAS,EAAEA,gBAAM,CAAC;AAArC,GAAA,EACG,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEA,gBAAM,CAAC;AAAvB,GAAA,EAA+B,KAA/B,CADZ,EAEG,QAFH,CAJF,CADF,CADF;AAaF,C;;AAEA,KAAK,CAAC,YAAN,GAAqB;AACnB,EAAA,IAAI,EAAE;AADa,CAArB","sourcesContent":["import React from 'react';\nimport { Inset, FlexRow } from '../../layout';\nimport { classNames } from '../../../libs/class-names';\nimport { Icon, MonochromeIcons } from '../../icons';\n\nimport styles from './alert.less';\n\ninterface AlertProps {\n  label?: string;\n  type?: 'info' | 'success' | 'error' | 'warning';\n}\n\nexport const Alert: React.FC<AlertProps> = (props) => {\n  const { label, type, children } = props;\n\n  let iconType;\n  switch (type) {\n    case 'success':\n      iconType = MonochromeIcons.SuccessFilled;\n      break;\n\n    case 'warning':\n      iconType = MonochromeIcons.Warning;\n      break;\n\n    case 'error':\n      iconType = MonochromeIcons.Exclaim;\n      break;\n\n    case 'info':\n    default:\n      iconType = MonochromeIcons.Info;\n      break;\n  }\n\n  return (\n    <div className={classNames([styles.Alert, styles[type as any]])}>\n      <FlexRow vertical=\"flex-start\">\n        <Inset top={2}>\n          <Icon size={20} type={iconType} />\n        </Inset>\n        <div role=\"status\" className={styles.message}>\n          {label && <div className={styles.label}>{label}</div>}\n          {children}\n        </div>\n      </FlexRow>\n    </div>\n  );\n};\n\nAlert.defaultProps = {\n  type: 'info',\n};\n"]},"metadata":{},"sourceType":"module"}