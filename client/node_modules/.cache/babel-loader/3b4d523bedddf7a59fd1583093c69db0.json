{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Interactions = exports.InteractionKey = void 0;\n\nvar _Utils = require(\"./Utils\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar InteractionKey;\n/**\n * Encapsulates all interaction data needed by the Media component. The data is\n * generated on initialization so no further runtime work is necessary.\n */\n\nexports.InteractionKey = InteractionKey;\n\n(function (InteractionKey) {\n  InteractionKey[\"interaction\"] = \"interaction\";\n})(InteractionKey || (exports.InteractionKey = InteractionKey = {}));\n\nvar Interactions = /*#__PURE__*/function () {\n  _createClass(Interactions, null, [{\n    key: \"validKeys\",\n    value: function validKeys() {\n      return [InteractionKey.interaction];\n    }\n  }]);\n\n  function Interactions(interactions) {\n    _classCallCheck(this, Interactions);\n\n    _defineProperty(this, \"_interactions\", void 0);\n\n    this._interactions = interactions;\n  }\n\n  _createClass(Interactions, [{\n    key: \"toRuleSets\",\n    value: function toRuleSets() {\n      return Object.entries(this._interactions).reduce(function (acc, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            query = _ref2[1];\n\n        return _toConsumableArray(acc).concat([(0, _Utils.createRuleSet)((0, _Utils.createClassName)(InteractionKey.interaction, name), query)]);\n      }, []);\n    }\n  }, {\n    key: \"shouldRenderMediaQuery\",\n    value: function shouldRenderMediaQuery(interaction, onlyMatch) {\n      return !!(onlyMatch && onlyMatch.includes(interaction));\n    }\n  }, {\n    key: \"interactions\",\n    get: function get() {\n      return Object.keys(this._interactions);\n    }\n  }, {\n    key: \"dynamicResponsiveMediaQueries\",\n    get: function get() {\n      return Object.entries(this._interactions).reduce(function (acc, _ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            name = _ref4[0],\n            query = _ref4[1];\n\n        return _objectSpread({}, acc, _defineProperty({}, name, query));\n      }, {});\n    }\n  }]);\n\n  return Interactions;\n}();\n\nexports.Interactions = Interactions;","map":{"version":3,"sources":["../src/Interactions.ts"],"names":["InteractionKey","Interactions","name","query","Object","interaction","onlyMatch"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEYA,c;AAIZ;;;;;;;WAJYA,c;AAAAA,EAAAA,c,eAAAA,G,aAAAA;GAAAA,c,8BAAAA,c;;IAQCC,Y;;;gCACQ;AACjB,aAAO,CAACD,cAAc,CAAtB,WAAO,CAAP;AACD;;;AAID,WAAA,YAAA,CAAA,YAAA,EAAsD;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA;;AACpD,SAAA,aAAA,GAAA,YAAA;AACD;;;;iCAEmB;AAClB,aAAO,MAAM,CAAN,OAAA,CAAe,KAAf,aAAA,EAAA,MAAA,CACL,UAAA,GAAA,EAAA,IAAA,EAAkC;AAAA,YAAA,KAAA,GAAA,cAAA,CAAA,IAAA,EAAA,CAAA,CAAA;AAAA,YAAjBE,IAAiB,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,YAAXC,KAAW,GAAA,KAAA,CAAA,CAAA,CAAA;;AAChC,eAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,CAEE,CAAA,GAAA,MAAA,CAAA,aAAA,EACE,CAAA,GAAA,MAAA,CAAA,eAAA,EAAgBH,cAAc,CAA9B,WAAA,EADF,IACE,CADF,EAFF,KAEE,CAFF,CAAA,CAAA;AAFG,OAAA,EAAP,EAAO,CAAP;AAYD;;;2CAcCK,W,EACAC,S,EACS;AACT,aAAO,CAAC,EAAEA,SAAS,IAAIA,SAAS,CAATA,QAAAA,CAAvB,WAAuBA,CAAf,CAAR;AACD;;;wBAhByB;AACxB,aAAOF,MAAM,CAANA,IAAAA,CAAY,KAAnB,aAAOA,CAAP;AACD;;;wBAE0C;AACzC,aAAO,MAAM,CAAN,OAAA,CAAe,KAAf,aAAA,EAAA,MAAA,CACL,UAAA,GAAA,EAAA,KAAA,EAAA;AAAA,YAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,YAAOF,IAAP,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,YAAaC,KAAb,GAAA,KAAA,CAAA,CAAA,CAAA;;AAAA,eAAA,aAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAAA,IAAA,EAAA,KAAA,CAAA,CAAA;AADK,OAAA,EAAP,EAAO,CAAP;AAID","sourcesContent":["import { createClassName, createRuleSet } from \"./Utils\"\n\nexport enum InteractionKey {\n  interaction = \"interaction\",\n}\n\n/**\n * Encapsulates all interaction data needed by the Media component. The data is\n * generated on initialization so no further runtime work is necessary.\n */\nexport class Interactions {\n  static validKeys() {\n    return [InteractionKey.interaction]\n  }\n\n  private _interactions: { [key: string]: string }\n\n  constructor(interactions: { [name: string]: string }) {\n    this._interactions = interactions\n  }\n\n  public toRuleSets() {\n    return Object.entries(this._interactions).reduce(\n      (acc: string[], [name, query]) => {\n        return [\n          ...acc,\n          createRuleSet(\n            createClassName(InteractionKey.interaction, name),\n            query\n          ),\n        ]\n      },\n      []\n    )\n  }\n\n  public get interactions() {\n    return Object.keys(this._interactions)\n  }\n\n  public get dynamicResponsiveMediaQueries() {\n    return Object.entries(this._interactions).reduce(\n      (acc, [name, query]) => ({ ...acc, [name]: query }),\n      {}\n    )\n  }\n\n  public shouldRenderMediaQuery(\n    interaction: string,\n    onlyMatch: string[]\n  ): boolean {\n    return !!(onlyMatch && onlyMatch.includes(interaction))\n  }\n}\n"]},"metadata":{},"sourceType":"script"}