{"ast":null,"code":"import { __generator } from \"tslib\";\n\nfunction createIntGenerator() {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = 0;\n        _a.label = 1;\n\n      case 1:\n        if (!true) return [3\n        /*break*/\n        , 5];\n        if (!(index < Number.MAX_SAFE_INTEGER)) return [3\n        /*break*/\n        , 3];\n        return [4\n        /*yield*/\n        , ++index];\n\n      case 2:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 4];\n\n      case 3:\n        index = 0;\n        _a.label = 4;\n\n      case 4:\n        return [3\n        /*break*/\n        , 1];\n\n      case 5:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n\nvar intGenerator = createIntGenerator();\n/**\n * Get an integer ID for attaching to a JSON RPC request payload.\n */\n\nexport function getPayloadId() {\n  return intGenerator.next().value;\n}","map":{"version":3,"sources":["../../../src/util/get-payload-id.ts"],"names":[],"mappings":";;AAAA,SAAU,kBAAV,GAA4B;;;;;AACtB,QAAA,KAAK,GAAG,CAAR;;;;aAEG,I,EAAI,OAAA,CAAA;AAAA;AAAA,UAAA,CAAA,CAAA;YAEL,EAAA,KAAK,GAAG,MAAM,CAAC,gBAAf,C,EAAA,OAAA,CAAA;AAAA;AAAA,UAAA,CAAA,CAAA;AAAiC,eAAA,CAAA;AAAA;AAAA,UAAM,EAAE,KAAR,CAAA;;;AAAA,QAAA,EAAA,CAAA,IAAA;;;;;;;AAChC,QAAA,KAAK,GAAG,CAAR;;;;;;;;;;;;;;AAER;;AAED,IAAM,YAAY,GAAG,kBAAkB,EAAvC;AAEA;;AAEG;;AACH,OAAM,SAAU,YAAV,GAAsB;AAC1B,SAAO,YAAY,CAAC,IAAb,GAAoB,KAA3B;AACD","sourceRoot":"","sourcesContent":["import { __generator } from \"tslib\";\nfunction createIntGenerator() {\n    var index;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                index = 0;\n                _a.label = 1;\n            case 1:\n                if (!true) return [3 /*break*/, 5];\n                if (!(index < Number.MAX_SAFE_INTEGER)) return [3 /*break*/, 3];\n                return [4 /*yield*/, ++index];\n            case 2:\n                _a.sent();\n                return [3 /*break*/, 4];\n            case 3:\n                index = 0;\n                _a.label = 4;\n            case 4: return [3 /*break*/, 1];\n            case 5: return [2 /*return*/];\n        }\n    });\n}\nvar intGenerator = createIntGenerator();\n/**\n * Get an integer ID for attaching to a JSON RPC request payload.\n */\nexport function getPayloadId() {\n    return intGenerator.next().value;\n}\n//# sourceMappingURL=get-payload-id.js.map"]},"metadata":{},"sourceType":"module"}