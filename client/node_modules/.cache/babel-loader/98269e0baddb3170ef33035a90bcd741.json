{"ast":null,"code":"/**\r\n * Flattens an array recursively.\r\n */\nfunction flatten(array, destination = []) {\n  for (const entry of array) {\n    if (Array.isArray(entry)) {\n      flatten(entry, destination);\n    } else {\n      destination.push(entry);\n    }\n  }\n\n  return destination;\n}\n\nexport { flatten };","map":{"version":3,"sources":["../../../src/libs/flatten.ts"],"names":[],"mappings":"AAAA;;;SAGgB,O,CAAyB,K,EAAU,WAAA,GAAqB,E,EAAE;AACxE,OAAK,MAAM,KAAX,IAAoB,KAApB,EAA2B;AACzB,QAAI,KAAK,CAAC,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACxB,MAAA,OAAO,CAAC,KAAD,EAAQ,WAAR,CAAP;AACD,KAFD,MAEO;AACL,MAAA,WAAW,CAAC,IAAZ,CAAiB,KAAjB;AACD;AACF;;AAED,SAAO,WAAP;AACF","sourcesContent":["/**\n * Flattens an array recursively.\n */\nexport function flatten<T extends any[]>(array: T, destination: any[] = []) {\n  for (const entry of array) {\n    if (Array.isArray(entry)) {\n      flatten(entry, destination);\n    } else {\n      destination.push(entry);\n    }\n  }\n\n  return destination;\n}\n"]},"metadata":{},"sourceType":"module"}