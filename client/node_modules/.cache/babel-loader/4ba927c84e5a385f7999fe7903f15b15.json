{"ast":null,"code":"'use strict';\n\nvar colorString = require('color-string');\n\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\nvar skippedModels = [// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n'keyword', // gray conflicts with some method names, and has its own method defined.\n'gray', // shouldn't really be in color-convert either...\n'hex'];\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n  hashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\nvar limiters = {};\n\nfunction Color(obj, model) {\n  if (!(this instanceof Color)) {\n    return new Color(obj, model);\n  }\n\n  if (model && model in skippedModels) {\n    model = null;\n  }\n\n  if (model && !(model in convert)) {\n    throw new Error('Unknown model: ' + model);\n  }\n\n  var i;\n  var channels;\n\n  if (obj == null) {\n    // eslint-disable-line no-eq-null,eqeqeq\n    this.model = 'rgb';\n    this.color = [0, 0, 0];\n    this.valpha = 1;\n  } else if (obj instanceof Color) {\n    this.model = obj.model;\n    this.color = obj.color.slice();\n    this.valpha = obj.valpha;\n  } else if (typeof obj === 'string') {\n    var result = colorString.get(obj);\n\n    if (result === null) {\n      throw new Error('Unable to parse color from string: ' + obj);\n    }\n\n    this.model = result.model;\n    channels = convert[this.model].channels;\n    this.color = result.value.slice(0, channels);\n    this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n  } else if (obj.length) {\n    this.model = model || 'rgb';\n    channels = convert[this.model].channels;\n\n    var newArr = _slice.call(obj, 0, channels);\n\n    this.color = zeroArray(newArr, channels);\n    this.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n  } else if (typeof obj === 'number') {\n    // this is always RGB - can be converted later on.\n    obj &= 0xFFFFFF;\n    this.model = 'rgb';\n    this.color = [obj >> 16 & 0xFF, obj >> 8 & 0xFF, obj & 0xFF];\n    this.valpha = 1;\n  } else {\n    this.valpha = 1;\n    var keys = Object.keys(obj);\n\n    if ('alpha' in obj) {\n      keys.splice(keys.indexOf('alpha'), 1);\n      this.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n    }\n\n    var hashedKeys = keys.sort().join('');\n\n    if (!(hashedKeys in hashedModelKeys)) {\n      throw new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n    }\n\n    this.model = hashedModelKeys[hashedKeys];\n    var labels = convert[this.model].labels;\n    var color = [];\n\n    for (i = 0; i < labels.length; i++) {\n      color.push(obj[labels[i]]);\n    }\n\n    this.color = zeroArray(color);\n  } // perform limitations (clamping, etc.)\n\n\n  if (limiters[this.model]) {\n    channels = convert[this.model].channels;\n\n    for (i = 0; i < channels; i++) {\n      var limit = limiters[this.model][i];\n\n      if (limit) {\n        this.color[i] = limit(this.color[i]);\n      }\n    }\n  }\n\n  this.valpha = Math.max(0, Math.min(1, this.valpha));\n\n  if (Object.freeze) {\n    Object.freeze(this);\n  }\n}\n\nColor.prototype = {\n  toString: function () {\n    return this.string();\n  },\n  toJSON: function () {\n    return this[this.model]();\n  },\n  string: function (places) {\n    var self = this.model in colorString.to ? this : this.rgb();\n    self = self.round(typeof places === 'number' ? places : 1);\n    var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n    return colorString.to[self.model](args);\n  },\n  percentString: function (places) {\n    var self = this.rgb().round(typeof places === 'number' ? places : 1);\n    var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n    return colorString.to.rgb.percent(args);\n  },\n  array: function () {\n    return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n  },\n  object: function () {\n    var result = {};\n    var channels = convert[this.model].channels;\n    var labels = convert[this.model].labels;\n\n    for (var i = 0; i < channels; i++) {\n      result[labels[i]] = this.color[i];\n    }\n\n    if (this.valpha !== 1) {\n      result.alpha = this.valpha;\n    }\n\n    return result;\n  },\n  unitArray: function () {\n    var rgb = this.rgb().color;\n    rgb[0] /= 255;\n    rgb[1] /= 255;\n    rgb[2] /= 255;\n\n    if (this.valpha !== 1) {\n      rgb.push(this.valpha);\n    }\n\n    return rgb;\n  },\n  unitObject: function () {\n    var rgb = this.rgb().object();\n    rgb.r /= 255;\n    rgb.g /= 255;\n    rgb.b /= 255;\n\n    if (this.valpha !== 1) {\n      rgb.alpha = this.valpha;\n    }\n\n    return rgb;\n  },\n  round: function (places) {\n    places = Math.max(places || 0, 0);\n    return new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n  },\n  alpha: function (val) {\n    if (arguments.length) {\n      return new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n    }\n\n    return this.valpha;\n  },\n  // rgb\n  red: getset('rgb', 0, maxfn(255)),\n  green: getset('rgb', 1, maxfn(255)),\n  blue: getset('rgb', 2, maxfn(255)),\n  hue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) {\n    return (val % 360 + 360) % 360;\n  }),\n  // eslint-disable-line brace-style\n  saturationl: getset('hsl', 1, maxfn(100)),\n  lightness: getset('hsl', 2, maxfn(100)),\n  saturationv: getset('hsv', 1, maxfn(100)),\n  value: getset('hsv', 2, maxfn(100)),\n  chroma: getset('hcg', 1, maxfn(100)),\n  gray: getset('hcg', 2, maxfn(100)),\n  white: getset('hwb', 1, maxfn(100)),\n  wblack: getset('hwb', 2, maxfn(100)),\n  cyan: getset('cmyk', 0, maxfn(100)),\n  magenta: getset('cmyk', 1, maxfn(100)),\n  yellow: getset('cmyk', 2, maxfn(100)),\n  black: getset('cmyk', 3, maxfn(100)),\n  x: getset('xyz', 0, maxfn(100)),\n  y: getset('xyz', 1, maxfn(100)),\n  z: getset('xyz', 2, maxfn(100)),\n  l: getset('lab', 0, maxfn(100)),\n  a: getset('lab', 1),\n  b: getset('lab', 2),\n  keyword: function (val) {\n    if (arguments.length) {\n      return new Color(val);\n    }\n\n    return convert[this.model].keyword(this.color);\n  },\n  hex: function (val) {\n    if (arguments.length) {\n      return new Color(val);\n    }\n\n    return colorString.to.hex(this.rgb().round().color);\n  },\n  rgbNumber: function () {\n    var rgb = this.rgb().color;\n    return (rgb[0] & 0xFF) << 16 | (rgb[1] & 0xFF) << 8 | rgb[2] & 0xFF;\n  },\n  luminosity: function () {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.rgb().color;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function (color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function (color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  isDark: function () {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.rgb().color;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  isLight: function () {\n    return !this.isDark();\n  },\n  negate: function () {\n    var rgb = this.rgb();\n\n    for (var i = 0; i < 3; i++) {\n      rgb.color[i] = 255 - rgb.color[i];\n    }\n\n    return rgb;\n  },\n  lighten: function (ratio) {\n    var hsl = this.hsl();\n    hsl.color[2] += hsl.color[2] * ratio;\n    return hsl;\n  },\n  darken: function (ratio) {\n    var hsl = this.hsl();\n    hsl.color[2] -= hsl.color[2] * ratio;\n    return hsl;\n  },\n  saturate: function (ratio) {\n    var hsl = this.hsl();\n    hsl.color[1] += hsl.color[1] * ratio;\n    return hsl;\n  },\n  desaturate: function (ratio) {\n    var hsl = this.hsl();\n    hsl.color[1] -= hsl.color[1] * ratio;\n    return hsl;\n  },\n  whiten: function (ratio) {\n    var hwb = this.hwb();\n    hwb.color[1] += hwb.color[1] * ratio;\n    return hwb;\n  },\n  blacken: function (ratio) {\n    var hwb = this.hwb();\n    hwb.color[2] += hwb.color[2] * ratio;\n    return hwb;\n  },\n  grayscale: function () {\n    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n    var rgb = this.rgb().color;\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    return Color.rgb(val, val, val);\n  },\n  fade: function (ratio) {\n    return this.alpha(this.valpha - this.valpha * ratio);\n  },\n  opaquer: function (ratio) {\n    return this.alpha(this.valpha + this.valpha * ratio);\n  },\n  rotate: function (degrees) {\n    var hsl = this.hsl();\n    var hue = hsl.color[0];\n    hue = (hue + degrees) % 360;\n    hue = hue < 0 ? 360 + hue : hue;\n    hsl.color[0] = hue;\n    return hsl;\n  },\n  mix: function (mixinColor, weight) {\n    // ported from sass implementation in C\n    // https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n    if (!mixinColor || !mixinColor.rgb) {\n      throw new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n    }\n\n    var color1 = mixinColor.rgb();\n    var color2 = this.rgb();\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return Color.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue(), color1.alpha() * p + color2.alpha() * (1 - p));\n  }\n}; // model conversion methods and static constructors\n\nObject.keys(convert).forEach(function (model) {\n  if (skippedModels.indexOf(model) !== -1) {\n    return;\n  }\n\n  var channels = convert[model].channels; // conversion methods\n\n  Color.prototype[model] = function () {\n    if (this.model === model) {\n      return new Color(this);\n    }\n\n    if (arguments.length) {\n      return new Color(arguments, model);\n    }\n\n    var newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n    return new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n  }; // 'static' construction methods\n\n\n  Color[model] = function (color) {\n    if (typeof color === 'number') {\n      color = zeroArray(_slice.call(arguments), channels);\n    }\n\n    return new Color(color, model);\n  };\n});\n\nfunction roundTo(num, places) {\n  return Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n  return function (num) {\n    return roundTo(num, places);\n  };\n}\n\nfunction getset(model, channel, modifier) {\n  model = Array.isArray(model) ? model : [model];\n  model.forEach(function (m) {\n    (limiters[m] || (limiters[m] = []))[channel] = modifier;\n  });\n  model = model[0];\n  return function (val) {\n    var result;\n\n    if (arguments.length) {\n      if (modifier) {\n        val = modifier(val);\n      }\n\n      result = this[model]();\n      result.color[channel] = val;\n      return result;\n    }\n\n    result = this[model]().color[channel];\n\n    if (modifier) {\n      result = modifier(result);\n    }\n\n    return result;\n  };\n}\n\nfunction maxfn(max) {\n  return function (v) {\n    return Math.max(0, Math.min(max, v));\n  };\n}\n\nfunction assertArray(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n  for (var i = 0; i < length; i++) {\n    if (typeof arr[i] !== 'number') {\n      arr[i] = 0;\n    }\n  }\n\n  return arr;\n}\n\nmodule.exports = Color;","map":{"version":3,"sources":["/Users/maricrisbonzo/Desktop/magic-apps/membership-site/client/node_modules/color/index.js"],"names":["colorString","require","convert","_slice","slice","skippedModels","hashedModelKeys","Object","keys","forEach","model","call","labels","sort","join","limiters","Color","obj","Error","i","channels","color","valpha","result","get","value","length","newArr","zeroArray","splice","indexOf","alpha","hashedKeys","JSON","stringify","push","limit","Math","max","min","freeze","prototype","toString","string","toJSON","places","self","to","rgb","round","args","concat","percentString","percent","array","object","unitArray","unitObject","r","g","b","map","roundToPlace","val","arguments","red","getset","maxfn","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","l","a","keyword","hex","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","isDark","yiq","isLight","negate","lighten","ratio","hsl","darken","saturate","desaturate","whiten","hwb","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","undefined","w","w1","w2","newAlpha","assertArray","raw","roundTo","num","Number","toFixed","channel","modifier","Array","isArray","m","v","arr","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n"]},"metadata":{},"sourceType":"script"}