{"ast":null,"code":"import hash from './libs/hash';\n\nvar Cache =\n/** @class */\nfunction () {\n  function Cache(initialData) {\n    if (initialData === void 0) {\n      initialData = {};\n    }\n\n    this.__cache = new Map(Object.entries(initialData));\n    this.__listeners = [];\n  }\n\n  Cache.prototype.get = function (key) {\n    var _key = this.serializeKey(key)[0];\n    return this.__cache.get(_key);\n  };\n\n  Cache.prototype.set = function (key, value) {\n    var _key = this.serializeKey(key)[0];\n\n    this.__cache.set(_key, value);\n\n    this.notify();\n  };\n\n  Cache.prototype.keys = function () {\n    return Array.from(this.__cache.keys());\n  };\n\n  Cache.prototype.has = function (key) {\n    var _key = this.serializeKey(key)[0];\n    return this.__cache.has(_key);\n  };\n\n  Cache.prototype.clear = function () {\n    this.__cache.clear();\n\n    this.notify();\n  };\n\n  Cache.prototype.delete = function (key) {\n    var _key = this.serializeKey(key)[0];\n\n    this.__cache.delete(_key);\n\n    this.notify();\n  }; // TODO: introduce namespace for the cache\n\n\n  Cache.prototype.serializeKey = function (key) {\n    var args = null;\n\n    if (typeof key === 'function') {\n      try {\n        key = key();\n      } catch (err) {\n        // dependencies not ready\n        key = '';\n      }\n    }\n\n    if (Array.isArray(key)) {\n      // args array\n      args = key;\n      key = hash(key);\n    } else {\n      // convert null to ''\n      key = String(key || '');\n    }\n\n    var errorKey = key ? 'err@' + key : '';\n    var isValidatingKey = key ? 'validating@' + key : '';\n    return [key, args, errorKey, isValidatingKey];\n  };\n\n  Cache.prototype.subscribe = function (listener) {\n    var _this = this;\n\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    this.__listeners.push(listener);\n\n    return function () {\n      if (!isSubscribed) return;\n      isSubscribed = false;\n\n      var index = _this.__listeners.indexOf(listener);\n\n      if (index > -1) {\n        _this.__listeners[index] = _this.__listeners[_this.__listeners.length - 1];\n        _this.__listeners.length--;\n      }\n    };\n  }; // Notify Cache subscribers about a change in the cache\n\n\n  Cache.prototype.notify = function () {\n    for (var _i = 0, _a = this.__listeners; _i < _a.length; _i++) {\n      var listener = _a[_i];\n      listener();\n    }\n  };\n\n  return Cache;\n}();\n\nexport default Cache;","map":{"version":3,"sources":["/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/node_modules/swr/esm/cache.js"],"names":["hash","Cache","initialData","__cache","Map","Object","entries","__listeners","prototype","get","key","_key","serializeKey","set","value","notify","keys","Array","from","has","clear","delete","args","err","isArray","String","errorKey","isValidatingKey","subscribe","listener","_this","Error","isSubscribed","push","index","indexOf","length","_i","_a"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;;AACA,IAAIC,KAAK;AAAG;AAAe,YAAY;AACnC,WAASA,KAAT,CAAeC,WAAf,EAA4B;AACxB,QAAIA,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAAEA,MAAAA,WAAW,GAAG,EAAd;AAAmB;;AACjD,SAAKC,OAAL,GAAe,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeJ,WAAf,CAAR,CAAf;AACA,SAAKK,WAAL,GAAmB,EAAnB;AACH;;AACDN,EAAAA,KAAK,CAACO,SAAN,CAAgBC,GAAhB,GAAsB,UAAUC,GAAV,EAAe;AACjC,QAAIC,IAAI,GAAG,KAAKC,YAAL,CAAkBF,GAAlB,EAAuB,CAAvB,CAAX;AACA,WAAO,KAAKP,OAAL,CAAaM,GAAb,CAAiBE,IAAjB,CAAP;AACH,GAHD;;AAIAV,EAAAA,KAAK,CAACO,SAAN,CAAgBK,GAAhB,GAAsB,UAAUH,GAAV,EAAeI,KAAf,EAAsB;AACxC,QAAIH,IAAI,GAAG,KAAKC,YAAL,CAAkBF,GAAlB,EAAuB,CAAvB,CAAX;;AACA,SAAKP,OAAL,CAAaU,GAAb,CAAiBF,IAAjB,EAAuBG,KAAvB;;AACA,SAAKC,MAAL;AACH,GAJD;;AAKAd,EAAAA,KAAK,CAACO,SAAN,CAAgBQ,IAAhB,GAAuB,YAAY;AAC/B,WAAOC,KAAK,CAACC,IAAN,CAAW,KAAKf,OAAL,CAAaa,IAAb,EAAX,CAAP;AACH,GAFD;;AAGAf,EAAAA,KAAK,CAACO,SAAN,CAAgBW,GAAhB,GAAsB,UAAUT,GAAV,EAAe;AACjC,QAAIC,IAAI,GAAG,KAAKC,YAAL,CAAkBF,GAAlB,EAAuB,CAAvB,CAAX;AACA,WAAO,KAAKP,OAAL,CAAagB,GAAb,CAAiBR,IAAjB,CAAP;AACH,GAHD;;AAIAV,EAAAA,KAAK,CAACO,SAAN,CAAgBY,KAAhB,GAAwB,YAAY;AAChC,SAAKjB,OAAL,CAAaiB,KAAb;;AACA,SAAKL,MAAL;AACH,GAHD;;AAIAd,EAAAA,KAAK,CAACO,SAAN,CAAgBa,MAAhB,GAAyB,UAAUX,GAAV,EAAe;AACpC,QAAIC,IAAI,GAAG,KAAKC,YAAL,CAAkBF,GAAlB,EAAuB,CAAvB,CAAX;;AACA,SAAKP,OAAL,CAAakB,MAAb,CAAoBV,IAApB;;AACA,SAAKI,MAAL;AACH,GAJD,CA1BmC,CA+BnC;;;AACAd,EAAAA,KAAK,CAACO,SAAN,CAAgBI,YAAhB,GAA+B,UAAUF,GAAV,EAAe;AAC1C,QAAIY,IAAI,GAAG,IAAX;;AACA,QAAI,OAAOZ,GAAP,KAAe,UAAnB,EAA+B;AAC3B,UAAI;AACAA,QAAAA,GAAG,GAAGA,GAAG,EAAT;AACH,OAFD,CAGA,OAAOa,GAAP,EAAY;AACR;AACAb,QAAAA,GAAG,GAAG,EAAN;AACH;AACJ;;AACD,QAAIO,KAAK,CAACO,OAAN,CAAcd,GAAd,CAAJ,EAAwB;AACpB;AACAY,MAAAA,IAAI,GAAGZ,GAAP;AACAA,MAAAA,GAAG,GAAGV,IAAI,CAACU,GAAD,CAAV;AACH,KAJD,MAKK;AACD;AACAA,MAAAA,GAAG,GAAGe,MAAM,CAACf,GAAG,IAAI,EAAR,CAAZ;AACH;;AACD,QAAIgB,QAAQ,GAAGhB,GAAG,GAAG,SAASA,GAAZ,GAAkB,EAApC;AACA,QAAIiB,eAAe,GAAGjB,GAAG,GAAG,gBAAgBA,GAAnB,GAAyB,EAAlD;AACA,WAAO,CAACA,GAAD,EAAMY,IAAN,EAAYI,QAAZ,EAAsBC,eAAtB,CAAP;AACH,GAvBD;;AAwBA1B,EAAAA,KAAK,CAACO,SAAN,CAAgBoB,SAAhB,GAA4B,UAAUC,QAAV,EAAoB;AAC5C,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAChC,YAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACH;;AACD,QAAIC,YAAY,GAAG,IAAnB;;AACA,SAAKzB,WAAL,CAAiB0B,IAAjB,CAAsBJ,QAAtB;;AACA,WAAO,YAAY;AACf,UAAI,CAACG,YAAL,EACI;AACJA,MAAAA,YAAY,GAAG,KAAf;;AACA,UAAIE,KAAK,GAAGJ,KAAK,CAACvB,WAAN,CAAkB4B,OAAlB,CAA0BN,QAA1B,CAAZ;;AACA,UAAIK,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZJ,QAAAA,KAAK,CAACvB,WAAN,CAAkB2B,KAAlB,IAA2BJ,KAAK,CAACvB,WAAN,CAAkBuB,KAAK,CAACvB,WAAN,CAAkB6B,MAAlB,GAA2B,CAA7C,CAA3B;AACAN,QAAAA,KAAK,CAACvB,WAAN,CAAkB6B,MAAlB;AACH;AACJ,KATD;AAUH,GAjBD,CAxDmC,CA0EnC;;;AACAnC,EAAAA,KAAK,CAACO,SAAN,CAAgBO,MAAhB,GAAyB,YAAY;AACjC,SAAK,IAAIsB,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAK/B,WAA3B,EAAwC8B,EAAE,GAAGC,EAAE,CAACF,MAAhD,EAAwDC,EAAE,EAA1D,EAA8D;AAC1D,UAAIR,QAAQ,GAAGS,EAAE,CAACD,EAAD,CAAjB;AACAR,MAAAA,QAAQ;AACX;AACJ,GALD;;AAMA,SAAO5B,KAAP;AACH,CAlF0B,EAA3B;;AAmFA,eAAeA,KAAf","sourcesContent":["import hash from './libs/hash';\nvar Cache = /** @class */ (function () {\n    function Cache(initialData) {\n        if (initialData === void 0) { initialData = {}; }\n        this.__cache = new Map(Object.entries(initialData));\n        this.__listeners = [];\n    }\n    Cache.prototype.get = function (key) {\n        var _key = this.serializeKey(key)[0];\n        return this.__cache.get(_key);\n    };\n    Cache.prototype.set = function (key, value) {\n        var _key = this.serializeKey(key)[0];\n        this.__cache.set(_key, value);\n        this.notify();\n    };\n    Cache.prototype.keys = function () {\n        return Array.from(this.__cache.keys());\n    };\n    Cache.prototype.has = function (key) {\n        var _key = this.serializeKey(key)[0];\n        return this.__cache.has(_key);\n    };\n    Cache.prototype.clear = function () {\n        this.__cache.clear();\n        this.notify();\n    };\n    Cache.prototype.delete = function (key) {\n        var _key = this.serializeKey(key)[0];\n        this.__cache.delete(_key);\n        this.notify();\n    };\n    // TODO: introduce namespace for the cache\n    Cache.prototype.serializeKey = function (key) {\n        var args = null;\n        if (typeof key === 'function') {\n            try {\n                key = key();\n            }\n            catch (err) {\n                // dependencies not ready\n                key = '';\n            }\n        }\n        if (Array.isArray(key)) {\n            // args array\n            args = key;\n            key = hash(key);\n        }\n        else {\n            // convert null to ''\n            key = String(key || '');\n        }\n        var errorKey = key ? 'err@' + key : '';\n        var isValidatingKey = key ? 'validating@' + key : '';\n        return [key, args, errorKey, isValidatingKey];\n    };\n    Cache.prototype.subscribe = function (listener) {\n        var _this = this;\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        var isSubscribed = true;\n        this.__listeners.push(listener);\n        return function () {\n            if (!isSubscribed)\n                return;\n            isSubscribed = false;\n            var index = _this.__listeners.indexOf(listener);\n            if (index > -1) {\n                _this.__listeners[index] = _this.__listeners[_this.__listeners.length - 1];\n                _this.__listeners.length--;\n            }\n        };\n    };\n    // Notify Cache subscribers about a change in the cache\n    Cache.prototype.notify = function () {\n        for (var _i = 0, _a = this.__listeners; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener();\n        }\n    };\n    return Cache;\n}());\nexport default Cache;\n"]},"metadata":{},"sourceType":"module"}