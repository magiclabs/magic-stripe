{"ast":null,"code":"import { __rest } from '../../_virtual/_tslib.js';\nimport React from 'react';\nimport { forwardRefWrapper } from '../../libs/forward-ref-wrapper.js';\nconst Spacer = /* @__PURE__ */forwardRefWrapper('Spacer', {\n  size: 0\n}, (props, externalRef) => {\n  const {\n    size,\n    vertical,\n    inline\n  } = props,\n        otherProps = __rest(props, [\"size\", \"vertical\", \"inline\"]);\n\n  const horizontalStyle = {\n    display: inline ? 'inline-block' : 'block',\n    height: '100%',\n    width: size\n  };\n  const verticalStyle = {\n    display: inline ? 'inline-block' : 'block',\n    width: '100%',\n    height: size\n  };\n  const style = vertical ? verticalStyle : horizontalStyle;\n  return React.createElement(\"div\", Object.assign({\n    \"aria-hidden\": \"true\",\n    style: style\n  }, otherProps, {\n    ref: externalRef\n  }));\n});\nexport { Spacer };","map":{"version":3,"sources":["../../../../src/components/layout/spacer.tsx"],"names":[],"mappings":";;;MASa,MAAM,GAAA,eAAmB,iBAAiB,CACrD,QADqD,EAGrD;AAAE,EAAA,IAAI,EAAE;AAAR,CAHqD,EAKrD,CAAC,KAAD,EAAQ,WAAR,KAAmB;AACjB,QAAM;AAAE,IAAA,IAAF;AAAQ,IAAA,QAAR;AAAkB,IAAA;AAAlB,MAA4C,KAAlD;AAAA,QAAmC,UAAU,GAAA,MAAA,CAAK,KAAL,EAAvC,CAAA,MAAA,EAAA,UAAA,EAAA,QAAA,CAAuC,CAA7C;;AAEA,QAAM,eAAe,GAAG;AAAE,IAAA,OAAO,EAAE,MAAM,GAAG,cAAH,GAAoB,OAArC;AAA8C,IAAA,MAAM,EAAE,MAAtD;AAA8D,IAAA,KAAK,EAAE;AAArE,GAAxB;AACA,QAAM,aAAa,GAAG;AAAE,IAAA,OAAO,EAAE,MAAM,GAAG,cAAH,GAAoB,OAArC;AAA8C,IAAA,KAAK,EAAE,MAArD;AAA6D,IAAA,MAAM,EAAE;AAArE,GAAtB;AACA,QAAM,KAAK,GAAG,QAAQ,GAAG,aAAH,GAAmB,eAAzC;AAEA,SAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAA,mBAAiB,MAAjB;AAAwB,IAAA,KAAK,EAAE;AAA/B,GAAA,EAA0C,UAA1C,EAAoD;AAAE,IAAA,GAAG,EAAE;AAAP,GAApD,CAAA,CAAP;AACD,CAboD,C","sourcesContent":["import React from 'react';\nimport { forwardRefWrapper } from '../../libs/forward-ref-wrapper';\n\ninterface SpacerProps extends React.HTMLAttributes<HTMLDivElement> {\n  size?: string | number;\n  vertical?: boolean;\n  inline?: boolean;\n}\n\nexport const Spacer = /* @__PURE__ */ forwardRefWrapper<HTMLDivElement, SpacerProps>(\n  'Spacer',\n\n  { size: 0 },\n\n  (props, externalRef) => {\n    const { size, vertical, inline, ...otherProps } = props;\n\n    const horizontalStyle = { display: inline ? 'inline-block' : 'block', height: '100%', width: size };\n    const verticalStyle = { display: inline ? 'inline-block' : 'block', width: '100%', height: size };\n    const style = vertical ? verticalStyle : horizontalStyle;\n\n    return <div aria-hidden=\"true\" style={style} {...otherProps} ref={externalRef} />;\n  },\n);\n"]},"metadata":{},"sourceType":"module"}