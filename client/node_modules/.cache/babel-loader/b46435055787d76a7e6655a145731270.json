{"ast":null,"code":"'use strict';\n\nconst utils = require('./utils');\n\nconst makeRequest = require('./makeRequest');\n\nconst makeAutoPaginationMethods = require('./autoPagination').makeAutoPaginationMethods;\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n */\n\n\nfunction stripeMethod(spec) {\n  return function (...args) {\n    const callback = typeof args[args.length - 1] == 'function' && args.pop();\n    spec.urlParams = utils.extractUrlParams(this.createResourcePathWithSymbols(spec.path || ''));\n    const requestPromise = utils.callbackifyPromiseWithTimeout(makeRequest(this, args, spec, {}), callback);\n\n    if (spec.methodType === 'list') {\n      const autoPaginationMethods = makeAutoPaginationMethods(this, args, spec, requestPromise);\n      Object.assign(requestPromise, autoPaginationMethods);\n    }\n\n    return requestPromise;\n  };\n}\n\nmodule.exports = stripeMethod;","map":{"version":3,"sources":["/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/node_modules/stripe/lib/StripeMethod.js"],"names":["utils","require","makeRequest","makeAutoPaginationMethods","stripeMethod","spec","args","callback","length","pop","urlParams","extractUrlParams","createResourcePathWithSymbols","path","requestPromise","callbackifyPromiseWithTimeout","methodType","autoPaginationMethods","Object","assign","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAA3B;;AACA,MAAME,yBAAyB,GAAGF,OAAO,CAAC,kBAAD,CAAP,CAC/BE,yBADH;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAO,UAAS,GAAGC,IAAZ,EAAkB;AACvB,UAAMC,QAAQ,GAAG,OAAOD,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,CAAX,IAAgC,UAAhC,IAA8CF,IAAI,CAACG,GAAL,EAA/D;AAEAJ,IAAAA,IAAI,CAACK,SAAL,GAAiBV,KAAK,CAACW,gBAAN,CACf,KAAKC,6BAAL,CAAmCP,IAAI,CAACQ,IAAL,IAAa,EAAhD,CADe,CAAjB;AAIA,UAAMC,cAAc,GAAGd,KAAK,CAACe,6BAAN,CACrBb,WAAW,CAAC,IAAD,EAAOI,IAAP,EAAaD,IAAb,EAAmB,EAAnB,CADU,EAErBE,QAFqB,CAAvB;;AAKA,QAAIF,IAAI,CAACW,UAAL,KAAoB,MAAxB,EAAgC;AAC9B,YAAMC,qBAAqB,GAAGd,yBAAyB,CACrD,IADqD,EAErDG,IAFqD,EAGrDD,IAHqD,EAIrDS,cAJqD,CAAvD;AAMAI,MAAAA,MAAM,CAACC,MAAP,CAAcL,cAAd,EAA8BG,qBAA9B;AACD;;AAED,WAAOH,cAAP;AACD,GAvBD;AAwBD;;AAEDM,MAAM,CAACC,OAAP,GAAiBjB,YAAjB","sourcesContent":["'use strict';\n\nconst utils = require('./utils');\nconst makeRequest = require('./makeRequest');\nconst makeAutoPaginationMethods = require('./autoPagination')\n  .makeAutoPaginationMethods;\n\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n */\nfunction stripeMethod(spec) {\n  return function(...args) {\n    const callback = typeof args[args.length - 1] == 'function' && args.pop();\n\n    spec.urlParams = utils.extractUrlParams(\n      this.createResourcePathWithSymbols(spec.path || '')\n    );\n\n    const requestPromise = utils.callbackifyPromiseWithTimeout(\n      makeRequest(this, args, spec, {}),\n      callback\n    );\n\n    if (spec.methodType === 'list') {\n      const autoPaginationMethods = makeAutoPaginationMethods(\n        this,\n        args,\n        spec,\n        requestPromise\n      );\n      Object.assign(requestPromise, autoPaginationMethods);\n    }\n\n    return requestPromise;\n  };\n}\n\nmodule.exports = stripeMethod;\n"]},"metadata":{},"sourceType":"script"}