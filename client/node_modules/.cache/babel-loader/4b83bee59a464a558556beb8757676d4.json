{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/client/src/components/callback.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Magic } from 'magic-sdk';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport Layout from './layout';\n\nconst Callback = props => {\n  _s();\n\n  const [magic, setMagic] = useState(null);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [showValidatingToken, setShowValidatingToken] = useState(false);\n  useEffect(() => {\n    !magic && setMagic(new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY, {\n      extensions: [new OAuthExtension()]\n    }));\n    /* if `provider` is in our query params, the user is logging in with a social provider */\n\n    let provider = new URLSearchParams(props.location.search).get('provider'); // can delete later\n\n    if (magic) {\n      provider ? finishSocialLogin() : finishEmailRedirectLogin(); // can remove social login\n    }\n  }, [magic, props.location.search]);\n\n  const finishEmailRedirectLogin = async () => {\n    let magicCredential = new URLSearchParams(props.location.search).get('magic_credential');\n\n    if (magicCredential) {\n      try {\n        let didToken = await magic.auth.loginWithCredential();\n        setShowValidatingToken(true);\n        await authenticateWithServer(didToken);\n      } catch (error) {\n        console.log(error);\n        setErrorMsg('Error logging in. Please try again.');\n      }\n    }\n  }; // Trace your code and figure out where to store the user's info so that\n  // could access it globally\n\n\n  const finishSocialLogin = async () => {\n    try {\n      let {\n        magic: {\n          idToken\n        }\n      } = await magic.oauth.getRedirectResult();\n      setShowValidatingToken(true);\n      await authenticateWithServer(idToken);\n    } catch (error) {\n      console.log(error);\n      setErrorMsg('Error logging in. Please try again.');\n    }\n  };\n\n  const authenticateWithServer = async didToken => {\n    let res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + didToken\n      },\n      credentials: 'include'\n    });\n    res.status === 200 && props.history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [errorMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"callback-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-step\",\n        children: \"Retrieving auth token...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), showValidatingToken && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-step\",\n        children: \"Validating token...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .callback-container {\n          width: 100%;\n          text-align: center;\n        }\n        .auth-step {\n          margin: 30px 0;\n          font-size: 17px;\n        }\n        .error {\n          color: red;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Callback, \"8P10uwicEWdHaaTfHjYCA85OxNs=\");\n\n_c = Callback;\nexport default Callback;\n\nvar _c;\n\n$RefreshReg$(_c, \"Callback\");","map":{"version":3,"sources":["/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/client/src/components/callback.js"],"names":["useState","useEffect","Magic","OAuthExtension","Layout","Callback","props","magic","setMagic","errorMsg","setErrorMsg","showValidatingToken","setShowValidatingToken","process","env","REACT_APP_MAGIC_PUBLISHABLE_KEY","extensions","provider","URLSearchParams","location","search","get","finishSocialLogin","finishEmailRedirectLogin","magicCredential","didToken","auth","loginWithCredential","authenticateWithServer","error","console","log","idToken","oauth","getRedirectResult","res","fetch","REACT_APP_SERVER_URL","method","headers","Authorization","credentials","status","history","push"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Magic } from 'magic-sdk';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport Layout from './layout';\n\nconst Callback = (props) => {\n  const [magic, setMagic] = useState(null);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [showValidatingToken, setShowValidatingToken] = useState(false);\n\n  useEffect(() => {\n    !magic &&\n      setMagic(\n        new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY, {\n          extensions: [new OAuthExtension()],\n        })\n      );\n    /* if `provider` is in our query params, the user is logging in with a social provider */\n    let provider = new URLSearchParams(props.location.search).get('provider'); // can delete later\n    if (magic) {\n      provider ? finishSocialLogin() : finishEmailRedirectLogin(); // can remove social login\n    }\n  }, [magic, props.location.search]);\n\n  const finishEmailRedirectLogin = async () => {\n    let magicCredential = new URLSearchParams(props.location.search).get('magic_credential');\n    if (magicCredential) {\n      try {\n        let didToken = await magic.auth.loginWithCredential();\n        setShowValidatingToken(true);\n        await authenticateWithServer(didToken);\n      } catch (error) {\n        console.log(error);\n        setErrorMsg('Error logging in. Please try again.');\n      }\n    }\n  };\n\n  // Trace your code and figure out where to store the user's info so that\n  // could access it globally\n\n  const finishSocialLogin = async () => {\n    try {\n      let {\n        magic: { idToken },\n      } = await magic.oauth.getRedirectResult();\n      setShowValidatingToken(true);\n      await authenticateWithServer(idToken);\n    } catch (error) {\n      console.log(error);\n      setErrorMsg('Error logging in. Please try again.');\n    }\n  };\n\n  const authenticateWithServer = async (didToken) => {\n    let res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + didToken,\n      },\n      credentials: 'include',\n    });\n    res.status === 200 && props.history.push('/');\n  };\n\n  return (\n    <Layout>\n      {errorMsg ? (\n        <div className='error'>{errorMsg}</div>\n      ) : (\n        <div className='callback-container'>\n          <div className='auth-step'>Retrieving auth token...</div>\n          {showValidatingToken && <div className='auth-step'>Validating token...</div>}\n        </div>\n      )}\n\n      <style>{`\n        .callback-container {\n          width: 100%;\n          text-align: center;\n        }\n        .auth-step {\n          margin: 30px 0;\n          font-size: 17px;\n        }\n        .error {\n          color: red;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default Callback;\n"]},"metadata":{},"sourceType":"module"}