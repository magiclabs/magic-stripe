{"ast":null,"code":"import { __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { SDKEnvironment } from '../core/sdk-environment';\nvar lf;\n/**\n * Proxies `localforage` methods with strong-typing.\n */\n\nfunction proxyLocalForageMethod(method) {\n  var _this = this;\n\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(_this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!lf) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , SDKEnvironment.configureStorage()];\n\n          case 1:\n            lf = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , lf.ready()];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , lf[method].apply(lf, __spread(args))];\n        }\n      });\n    });\n  };\n}\n\nexport var getItem = proxyLocalForageMethod('getItem');\nexport var setItem = proxyLocalForageMethod('setItem');\nexport var removeItem = proxyLocalForageMethod('removeItem');\nexport var clear = proxyLocalForageMethod('clear');\nexport var length = proxyLocalForageMethod('length');\nexport var key = proxyLocalForageMethod('key');\nexport var keys = proxyLocalForageMethod('keys');\nexport var iterate = proxyLocalForageMethod('iterate');","map":{"version":3,"sources":["../../../src/util/storage.ts"],"names":[],"mappings":";AAAA,SAAS,cAAT,QAA+B,yBAA/B;AAEA,IAAI,EAAJ;AAEA;;AAEG;;AACH,SAAS,sBAAT,CAA4E,MAA5E,EAA2F;AAA3F,MAAA,KAAA,GAAA,IAAA;;AACE,SAAO,YAAA;AAAO,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;AAAd,MAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;;;;;iBAER,CAAC,E,EAAD,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AAAU,mBAAA,CAAA;AAAA;AAAA,cAAM,cAAc,CAAC,gBAAf,EAAN,CAAA;;;AAAL,YAAA,EAAE,GAAG,EAAA,CAAA,IAAA,EAAL;;;;AACT,mBAAA,CAAA;AAAA;AAAA,cAAM,EAAE,CAAC,KAAH,EAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;AACA,mBAAA,CAAA;AAAA;AAAA,cAAQ,EAAE,CAAC,MAAD,CAAF,CAAU,KAAV,CAAA,EAAA,EAAE,QAAA,CAAoB,IAApB,CAAF,CAAR,CAAA;;;;AACD,GALD;AAMD;;AAED,OAAO,IAAM,OAAO,GAAG,sBAAsB,CAAC,SAAD,CAAtC;AACP,OAAO,IAAM,OAAO,GAAG,sBAAsB,CAAC,SAAD,CAAtC;AACP,OAAO,IAAM,UAAU,GAAG,sBAAsB,CAAC,YAAD,CAAzC;AACP,OAAO,IAAM,KAAK,GAAG,sBAAsB,CAAC,OAAD,CAApC;AACP,OAAO,IAAM,MAAM,GAAG,sBAAsB,CAAC,QAAD,CAArC;AACP,OAAO,IAAM,GAAG,GAAG,sBAAsB,CAAC,KAAD,CAAlC;AACP,OAAO,IAAM,IAAI,GAAG,sBAAsB,CAAC,MAAD,CAAnC;AACP,OAAO,IAAM,OAAO,GAAG,sBAAsB,CAAC,SAAD,CAAtC","sourceRoot":"","sourcesContent":["import { __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { SDKEnvironment } from '../core/sdk-environment';\nvar lf;\n/**\n * Proxies `localforage` methods with strong-typing.\n */\nfunction proxyLocalForageMethod(method) {\n    var _this = this;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!lf) return [3 /*break*/, 2];\n                        return [4 /*yield*/, SDKEnvironment.configureStorage()];\n                    case 1:\n                        lf = _a.sent();\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, lf.ready()];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/, lf[method].apply(lf, __spread(args))];\n                }\n            });\n        });\n    };\n}\nexport var getItem = proxyLocalForageMethod('getItem');\nexport var setItem = proxyLocalForageMethod('setItem');\nexport var removeItem = proxyLocalForageMethod('removeItem');\nexport var clear = proxyLocalForageMethod('clear');\nexport var length = proxyLocalForageMethod('length');\nexport var key = proxyLocalForageMethod('key');\nexport var keys = proxyLocalForageMethod('keys');\nexport var iterate = proxyLocalForageMethod('iterate');\n//# sourceMappingURL=storage.js.map"]},"metadata":{},"sourceType":"module"}