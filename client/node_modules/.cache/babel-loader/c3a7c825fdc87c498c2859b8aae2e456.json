{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/client/src/components/checkout-form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport Form from \"./form\"; // MAGIC\n\nimport { Magic } from 'magic-sdk';\nimport { useHistory } from 'react-router-dom';\nuseUser({\n  redirectTo: '/',\n  redirectIfFound: true\n});\nconst history = useHistory();\nconst [magic, setMagic] = useState(null);\nexport default function CheckoutForm() {\n  _s();\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window.fetch(\"http://localhost:8080/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: [{\n          id: \"xl-tshirt\"\n        }]\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(\"data.clientSecret: \", clientSecret);\n      setClientSecret(data.clientSecret);\n    });\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleChange = async event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  };\n\n  console.log(\"succeeded: \", succeeded); // MAGIC\n\n  async function handleLoginWithEmail(email) {\n    try {\n      setDisabled(true); // disable login button to prevent multiple emails from being triggered\n\n      let didToken = await magic.auth.loginWithMagicLink({\n        email,\n        redirectURI: `${process.env.REACT_APP_CLIENT_URL}/callback`\n      });\n      authenticateWithServer(didToken);\n    } catch (error) {\n      setDisabled(false); // re-enable login button - user may have requested to edit their email\n\n      console.log(error);\n    }\n  }\n\n  async function authenticateWithServer(didToken) {\n    const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + didToken\n      },\n      credentials: 'include'\n    });\n    res.status === 200 && history.push('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"payment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        options: cardStyle,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        disabled: disabled,\n        onEmailSubmit: handleLoginWithEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: processing || disabled || succeeded,\n        id: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"button-text\",\n          children: processing ? \"Pay\" : \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-error\",\n        role: \"alert\",\n        children: [error, \"confirmCardPayment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), succeeded ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Payment succeeded, see the result in your\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://dashboard.stripe.com/test/payments`,\n          children: [\" \", \"Stripe dashboard.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), \" \", \"Refresh the page to pay again.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n      #root {\n        align-items: center;\n      }\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n        font-size: 16px;\n        -webkit-font-smoothing: antialiased;\n        display: flex;\n        justify-content: center;\n        align-content: center;\n        height: 100vh;\n        width: 100vw;\n      }\n      form {\n        width: 30vw;\n        align-self: center;\n        box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n          0px 2px 5px 0px rgba(50, 50, 93, 0.1), 0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n        border-radius: 7px;\n        padding: 40px;\n      }\n      input {\n        border-radius: 6px;\n        margin-bottom: 6px;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        font-size: 16px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      .result-message {\n        line-height: 22px;\n        font-size: 16px;\n      }\n      .result-message a {\n        color: rgb(89, 111, 214);\n        font-weight: 600;\n        text-decoration: none;\n      }\n      .hidden {\n        display: none;\n      }\n      #card-error {\n        color: rgb(105, 115, 134);\n        font-size: 16px;\n        line-height: 20px;\n        margin-top: 12px;\n        text-align: center;\n      }\n      #card-element {\n        border-radius: 4px 4px 0 0;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      #payment-request-button {\n        margin-bottom: 32px;\n      }\n      /* Buttons and links */\n      button {\n        background: #5469d4;\n        font-family: Arial, sans-serif;\n        color: #ffffff;\n        border-radius: 0 0 4px 4px;\n        border: 0;\n        padding: 12px 16px;\n        font-size: 16px;\n        font-weight: 600;\n        cursor: pointer;\n        display: block;\n        transition: all 0.2s ease;\n        width: 100%;\n      }\n      button:hover {\n        filter: contrast(115%);\n      }\n      button:disabled {\n        opacity: 0.5;\n        cursor: default;\n      }\n      /* spinner/processing state, errors */\n      .spinner,\n      .spinner:before,\n      .spinner:after {\n        border-radius: 50%;\n      }\n      .spinner {\n        color: #ffffff;\n        font-size: 22px;\n        text-indent: -99999px;\n        margin: 0px auto;\n        position: relative;\n        width: 20px;\n        height: 20px;\n        box-shadow: inset 0 0 0 2px;\n        -webkit-transform: translateZ(0);\n        -ms-transform: translateZ(0);\n        transform: translateZ(0);\n      }\n      .spinner:before,\n      .spinner:after {\n        position: absolute;\n        content: \"\";\n      }\n      .spinner:before {\n        width: 10.4px;\n        height: 20.4px;\n        background: #5469d4;\n        border-radius: 20.4px 0 0 20.4px;\n        top: -0.2px;\n        left: -0.2px;\n        -webkit-transform-origin: 10.4px 10.2px;\n        transform-origin: 10.4px 10.2px;\n        -webkit-animation: loading 2s infinite ease 1.5s;\n        animation: loading 2s infinite ease 1.5s;\n      }\n      .spinner:after {\n        width: 10.4px;\n        height: 10.2px;\n        background: #5469d4;\n        border-radius: 0 10.2px 10.2px 0;\n        top: -0.1px;\n        left: 10.2px;\n        -webkit-transform-origin: 0px 10.2px;\n        transform-origin: 0px 10.2px;\n        -webkit-animation: loading 2s infinite ease;\n        animation: loading 2s infinite ease;\n      }\n      @keyframes loading {\n        0% {\n          -webkit-transform: rotate(0deg);\n          transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      @media only screen and (max-width: 600px) {\n        form {\n          width: 80vw;\n        }\n      }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CheckoutForm, \"Wd579yRKFCrXy4woT4czkDtxOrM=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/client/src/components/checkout-form.js"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","Form","Magic","useHistory","useUser","redirectTo","redirectIfFound","history","magic","setMagic","CheckoutForm","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","window","fetch","method","headers","body","JSON","stringify","items","id","then","res","json","data","console","log","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","event","empty","message","handleSubmit","ev","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","handleLoginWithEmail","email","didToken","auth","loginWithMagicLink","redirectURI","process","env","REACT_APP_CLIENT_URL","authenticateWithServer","REACT_APP_SERVER_URL","Authorization","credentials","status","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport Form from \"./form\";\n\n// MAGIC\nimport { Magic } from 'magic-sdk';\nimport { useHistory } from 'react-router-dom';\nuseUser({ redirectTo: '/', redirectIfFound: true });\nconst history = useHistory();\nconst [magic, setMagic] = useState(null);\n\nexport default function CheckoutForm() {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(\"http://localhost:8080/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ items: [{ id: \"xl-tshirt\" }] }),\n      })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log(\"data.clientSecret: \", clientSecret);\n        setClientSecret(data.clientSecret);\n      });\n  }, []);\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n      },\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  };\n\n  console.log(\"succeeded: \", succeeded);\n\n  // MAGIC\n  async function handleLoginWithEmail(email) {\n    try {\n      setDisabled(true); // disable login button to prevent multiple emails from being triggered\n      let didToken = await magic.auth.loginWithMagicLink({\n        email,\n        redirectURI: `${process.env.REACT_APP_CLIENT_URL}/callback`,\n      });\n      authenticateWithServer(didToken);\n    } catch (error) {\n      setDisabled(false); // re-enable login button - user may have requested to edit their email\n      console.log(error);\n    }\n  }\n\n  async function authenticateWithServer(didToken) {\n    const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + didToken,\n      },\n      credentials: 'include',\n    });\n    res.status === 200 && history.push('/');\n  }\n\n  return (\n    <>\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\n        <CardElement\n          id=\"card-element\"\n          options={cardStyle}\n          onChange={handleChange}\n        />\n        <Form\n          disabled={disabled}\n          onEmailSubmit={handleLoginWithEmail}\n        />\n        <button disabled={processing || disabled || succeeded} id=\"submit\">\n          <span id=\"button-text\">{processing ? \"Pay\" : \"Pay\"}</span>\n        </button>\n        {/* Show any error that happens when processing the payment */}\n        {error && (\n          <div className=\"card-error\" role=\"alert\">\n            {error}confirmCardPayment\n          </div>\n        )}\n        {/* Show a success message upon completion */}\n        {succeeded ? (\n          <p>\n            Payment succeeded, see the result in your\n            <a href={`https://dashboard.stripe.com/test/payments`}>\n              {\" \"}\n              Stripe dashboard.\n            </a>{\" \"}\n            Refresh the page to pay again.\n          </p>\n        ) : (\n          \"\"\n        )}\n      </form>\n      <style>{`\n      #root {\n        align-items: center;\n      }\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n        font-size: 16px;\n        -webkit-font-smoothing: antialiased;\n        display: flex;\n        justify-content: center;\n        align-content: center;\n        height: 100vh;\n        width: 100vw;\n      }\n      form {\n        width: 30vw;\n        align-self: center;\n        box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n          0px 2px 5px 0px rgba(50, 50, 93, 0.1), 0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n        border-radius: 7px;\n        padding: 40px;\n      }\n      input {\n        border-radius: 6px;\n        margin-bottom: 6px;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        font-size: 16px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      .result-message {\n        line-height: 22px;\n        font-size: 16px;\n      }\n      .result-message a {\n        color: rgb(89, 111, 214);\n        font-weight: 600;\n        text-decoration: none;\n      }\n      .hidden {\n        display: none;\n      }\n      #card-error {\n        color: rgb(105, 115, 134);\n        font-size: 16px;\n        line-height: 20px;\n        margin-top: 12px;\n        text-align: center;\n      }\n      #card-element {\n        border-radius: 4px 4px 0 0;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      #payment-request-button {\n        margin-bottom: 32px;\n      }\n      /* Buttons and links */\n      button {\n        background: #5469d4;\n        font-family: Arial, sans-serif;\n        color: #ffffff;\n        border-radius: 0 0 4px 4px;\n        border: 0;\n        padding: 12px 16px;\n        font-size: 16px;\n        font-weight: 600;\n        cursor: pointer;\n        display: block;\n        transition: all 0.2s ease;\n        width: 100%;\n      }\n      button:hover {\n        filter: contrast(115%);\n      }\n      button:disabled {\n        opacity: 0.5;\n        cursor: default;\n      }\n      /* spinner/processing state, errors */\n      .spinner,\n      .spinner:before,\n      .spinner:after {\n        border-radius: 50%;\n      }\n      .spinner {\n        color: #ffffff;\n        font-size: 22px;\n        text-indent: -99999px;\n        margin: 0px auto;\n        position: relative;\n        width: 20px;\n        height: 20px;\n        box-shadow: inset 0 0 0 2px;\n        -webkit-transform: translateZ(0);\n        -ms-transform: translateZ(0);\n        transform: translateZ(0);\n      }\n      .spinner:before,\n      .spinner:after {\n        position: absolute;\n        content: \"\";\n      }\n      .spinner:before {\n        width: 10.4px;\n        height: 20.4px;\n        background: #5469d4;\n        border-radius: 20.4px 0 0 20.4px;\n        top: -0.2px;\n        left: -0.2px;\n        -webkit-transform-origin: 10.4px 10.2px;\n        transform-origin: 10.4px 10.2px;\n        -webkit-animation: loading 2s infinite ease 1.5s;\n        animation: loading 2s infinite ease 1.5s;\n      }\n      .spinner:after {\n        width: 10.4px;\n        height: 10.2px;\n        background: #5469d4;\n        border-radius: 0 10.2px 10.2px 0;\n        top: -0.1px;\n        left: 10.2px;\n        -webkit-transform-origin: 0px 10.2px;\n        transform-origin: 0px 10.2px;\n        -webkit-animation: loading 2s infinite ease;\n        animation: loading 2s infinite ease;\n      }\n      @keyframes loading {\n        0% {\n          -webkit-transform: rotate(0deg);\n          transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      @media only screen and (max-width: 600px) {\n        form {\n          width: 80vw;\n        }\n      }\n      `}</style>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}