{"ast":null,"code":"function percentToByte(p) {\n  return String.fromCharCode(parseInt(p.slice(1), 16));\n}\n\nfunction byteToPercent(b) {\n  return \"%\" + (\"00\" + b.charCodeAt(0).toString(16)).slice(-2);\n}\n/**\n * Encodes a Base64 string. Safe for UTF-8 characters.\n * Original source is from the `universal-base64` NPM package.\n *\n * @source https://github.com/blakeembrey/universal-base64/blob/master/src/browser.ts\n */\n\n\nfunction btoaUTF8(str) {\n  return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g, percentToByte));\n}\n/**\n * Decodes a Base64 string. Safe for UTF-8 characters.\n * Original source is from the `universal-base64` NPM package.\n *\n * @source https://github.com/blakeembrey/universal-base64/blob/master/src/browser.ts\n */\n\n\nfunction atobUTF8(str) {\n  return decodeURIComponent(Array.from(atob(str), byteToPercent).join(''));\n}\n/**\n * Given a JSON-serializable object, encode as a Base64 string.\n */\n\n\nexport function encodeJSON(options) {\n  return btoaUTF8(JSON.stringify(options));\n}\n/**\n * Given a Base64 JSON string, decode a JavaScript object.\n */\n\nexport function decodeJSON(queryString) {\n  return JSON.parse(atobUTF8(queryString));\n}","map":{"version":3,"sources":["../../../src/util/base64-json.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,CAAuB,CAAvB,EAAgC;AAC9B,SAAO,MAAM,CAAC,YAAP,CAAoB,QAAQ,CAAC,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAD,EAAa,EAAb,CAA5B,CAAP;AACD;;AAED,SAAS,aAAT,CAAuB,CAAvB,EAAgC;AAC9B,SAAO,MAAI,CAAA,OAAK,CAAC,CAAC,UAAF,CAAa,CAAb,EAAgB,QAAhB,CAAyB,EAAzB,CAAL,EAAoC,KAApC,CAA0C,CAAC,CAA3C,CAAX;AACD;AAED;;;;;AAKG;;;AACH,SAAS,QAAT,CAAkB,GAAlB,EAA6B;AAC3B,SAAO,IAAI,CAAC,kBAAkB,CAAC,GAAD,CAAlB,CAAwB,OAAxB,CAAgC,eAAhC,EAAiD,aAAjD,CAAD,CAAX;AACD;AAED;;;;;AAKG;;;AACH,SAAS,QAAT,CAAkB,GAAlB,EAA6B;AAC3B,SAAO,kBAAkB,CAAC,KAAK,CAAC,IAAN,CAAW,IAAI,CAAC,GAAD,CAAf,EAAsB,aAAtB,EAAqC,IAArC,CAA0C,EAA1C,CAAD,CAAzB;AACD;AAED;;AAEG;;;AACH,OAAM,SAAU,UAAV,CAAwB,OAAxB,EAAkC;AACtC,SAAO,QAAQ,CAAC,IAAI,CAAC,SAAL,CAAe,OAAf,CAAD,CAAf;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,UAAV,CAAwB,WAAxB,EAA2C;AAC/C,SAAO,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,WAAD,CAAnB,CAAP;AACD","sourceRoot":"","sourcesContent":["function percentToByte(p) {\n    return String.fromCharCode(parseInt(p.slice(1), 16));\n}\nfunction byteToPercent(b) {\n    return \"%\" + (\"00\" + b.charCodeAt(0).toString(16)).slice(-2);\n}\n/**\n * Encodes a Base64 string. Safe for UTF-8 characters.\n * Original source is from the `universal-base64` NPM package.\n *\n * @source https://github.com/blakeembrey/universal-base64/blob/master/src/browser.ts\n */\nfunction btoaUTF8(str) {\n    return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g, percentToByte));\n}\n/**\n * Decodes a Base64 string. Safe for UTF-8 characters.\n * Original source is from the `universal-base64` NPM package.\n *\n * @source https://github.com/blakeembrey/universal-base64/blob/master/src/browser.ts\n */\nfunction atobUTF8(str) {\n    return decodeURIComponent(Array.from(atob(str), byteToPercent).join(''));\n}\n/**\n * Given a JSON-serializable object, encode as a Base64 string.\n */\nexport function encodeJSON(options) {\n    return btoaUTF8(JSON.stringify(options));\n}\n/**\n * Given a Base64 JSON string, decode a JavaScript object.\n */\nexport function decodeJSON(queryString) {\n    return JSON.parse(atobUTF8(queryString));\n}\n//# sourceMappingURL=base64-json.js.map"]},"metadata":{},"sourceType":"module"}