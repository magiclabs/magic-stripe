{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/client/src/components/payment-form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useLocation } from \"react-router-dom\";\nexport default function PaymentForm() {\n  _s();\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const [customerID, setCustomerID] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  const location = useLocation();\n  useEffect(() => {\n    const email = location.email; // Create PaymentIntent as soon as the page loads\n\n    window.fetch(\"http://localhost:8080/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: [{\n          id: \"xl-tshirt\"\n        }],\n        email\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log('data: ', data);\n      console.log('data.clientSecret: ', clientSecret);\n      setClientSecret(data.clientSecret);\n      setCustomerID(data.customer);\n    });\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleChange = async event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true); // Update Stripe customer info to include metadata\n\n      fetch(\"http://localhost:8080/update-customer\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          items: [{\n            id: \"xl-tshirt\"\n          }],\n          email\n        })\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log('data.clientSecret: ', clientSecret);\n        setClientSecret(data.clientSecret);\n      });\n    }\n  };\n\n  console.log(\"succeeded: \", succeeded);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"payment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        options: cardStyle,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: processing || disabled || succeeded,\n        id: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"button-text\",\n          children: processing ? \"Pay\" : \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-error\",\n        role: \"alert\",\n        children: [error, \"confirmCardPayment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), succeeded ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Congrats! You now have access to our PREMIUM content. (remove later) Payment succeeded, see the result in your\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://dashboard.stripe.com/test/payments`,\n          children: [\" \", \"Stripe dashboard.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), \" \", \"Refresh the page to pay again.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n      #root {\n        align-items: center;\n      }\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n        font-size: 16px;\n        -webkit-font-smoothing: antialiased;\n        display: flex;\n        justify-content: center;\n        align-content: center;\n        height: 100vh;\n        width: 100vw;\n      }\n      form {\n        width: 30vw;\n        align-self: center;\n        box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n          0px 2px 5px 0px rgba(50, 50, 93, 0.1), 0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n        border-radius: 7px;\n        padding: 40px;\n      }\n      input {\n        border-radius: 6px;\n        margin-bottom: 6px;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        font-size: 16px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      .result-message {\n        line-height: 22px;\n        font-size: 16px;\n      }\n      .result-message a {\n        color: rgb(89, 111, 214);\n        font-weight: 600;\n        text-decoration: none;\n      }\n      .hidden {\n        display: none;\n      }\n      #card-error {\n        color: rgb(105, 115, 134);\n        font-size: 16px;\n        line-height: 20px;\n        margin-top: 12px;\n        text-align: center;\n      }\n      #card-element {\n        border-radius: 4px 4px 0 0;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      #payment-request-button {\n        margin-bottom: 32px;\n      }\n      /* Buttons and links */\n      button {\n        background: #5469d4;\n        font-family: Arial, sans-serif;\n        color: #ffffff;\n        border-radius: 0 0 4px 4px;\n        border: 0;\n        padding: 12px 16px;\n        font-size: 16px;\n        font-weight: 600;\n        cursor: pointer;\n        display: block;\n        transition: all 0.2s ease;\n        width: 100%;\n      }\n      button:hover {\n        filter: contrast(115%);\n      }\n      button:disabled {\n        opacity: 0.5;\n        cursor: default;\n      }\n      /* spinner/processing state, errors */\n      .spinner,\n      .spinner:before,\n      .spinner:after {\n        border-radius: 50%;\n      }\n      .spinner {\n        color: #ffffff;\n        font-size: 22px;\n        text-indent: -99999px;\n        margin: 0px auto;\n        position: relative;\n        width: 20px;\n        height: 20px;\n        box-shadow: inset 0 0 0 2px;\n        -webkit-transform: translateZ(0);\n        -ms-transform: translateZ(0);\n        transform: translateZ(0);\n      }\n      .spinner:before,\n      .spinner:after {\n        position: absolute;\n        content: \"\";\n      }\n      .spinner:before {\n        width: 10.4px;\n        height: 20.4px;\n        background: #5469d4;\n        border-radius: 20.4px 0 0 20.4px;\n        top: -0.2px;\n        left: -0.2px;\n        -webkit-transform-origin: 10.4px 10.2px;\n        transform-origin: 10.4px 10.2px;\n        -webkit-animation: loading 2s infinite ease 1.5s;\n        animation: loading 2s infinite ease 1.5s;\n      }\n      .spinner:after {\n        width: 10.4px;\n        height: 10.2px;\n        background: #5469d4;\n        border-radius: 0 10.2px 10.2px 0;\n        top: -0.1px;\n        left: 10.2px;\n        -webkit-transform-origin: 0px 10.2px;\n        transform-origin: 0px 10.2px;\n        -webkit-animation: loading 2s infinite ease;\n        animation: loading 2s infinite ease;\n      }\n      @keyframes loading {\n        0% {\n          -webkit-transform: rotate(0deg);\n          transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      @media only screen and (max-width: 600px) {\n        form {\n          width: 80vw;\n        }\n      }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaymentForm, \"ieemlFBCTlp3aoORlyXgRzPZbE0=\", false, function () {\n  return [useStripe, useElements, useLocation];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/client/src/components/payment-form.js"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","useLocation","PaymentForm","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","customerID","setCustomerID","stripe","elements","location","email","window","fetch","method","headers","body","JSON","stringify","items","id","then","res","json","data","console","log","customer","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","event","empty","message","handleSubmit","ev","preventDefault","payload","confirmCardPayment","payment_method","card","getElement"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function PaymentForm() {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const [customerID, setCustomerID] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  const location = useLocation();\n\n  useEffect(() => {\n    const email = location.email;\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(\"http://localhost:8080/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ items: [{ id: \"xl-tshirt\" }], email }),\n      })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log('data: ', data)\n        console.log('data.clientSecret: ', clientSecret)\n        setClientSecret(data.clientSecret);\n        setCustomerID(data.customer)\n      });\n  }, []);\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n      },\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      // Update Stripe customer info to include metadata\n      fetch(\"http://localhost:8080/update-customer\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ items: [{ id: \"xl-tshirt\" }], email }),\n      })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log('data.clientSecret: ', clientSecret)\n        setClientSecret(data.clientSecret);\n      });\n    }\n  };\n\n  console.log(\"succeeded: \", succeeded);\n\n  return (\n    <>\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <CardElement\n        id=\"card-element\"\n        options={cardStyle}\n        onChange={handleChange}\n      />\n      <button disabled={processing || disabled || succeeded} id=\"submit\">\n        <span id=\"button-text\">\n          {processing ? \"Pay\" : \"Pay\"}\n        </span>\n      </button>\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className=\"card-error\" role=\"alert\">\n          {error}confirmCardPayment\n\n        </div>\n      )}\n      {/* Show a success message upon completion */}\n      {succeeded ? (\n        <p>\n          Congrats! You now have access to our PREMIUM content. \n          \n          (remove later)\n          Payment succeeded, see the result in your\n          <a href={`https://dashboard.stripe.com/test/payments`}>\n            {\" \"}\n            Stripe dashboard.\n          </a>{\" \"}\n          Refresh the page to pay again.\n        </p>\n      ) : (\n        \"\"\n      )}\n    </form>\n    <style>{`\n      #root {\n        align-items: center;\n      }\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n        font-size: 16px;\n        -webkit-font-smoothing: antialiased;\n        display: flex;\n        justify-content: center;\n        align-content: center;\n        height: 100vh;\n        width: 100vw;\n      }\n      form {\n        width: 30vw;\n        align-self: center;\n        box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n          0px 2px 5px 0px rgba(50, 50, 93, 0.1), 0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n        border-radius: 7px;\n        padding: 40px;\n      }\n      input {\n        border-radius: 6px;\n        margin-bottom: 6px;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        font-size: 16px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      .result-message {\n        line-height: 22px;\n        font-size: 16px;\n      }\n      .result-message a {\n        color: rgb(89, 111, 214);\n        font-weight: 600;\n        text-decoration: none;\n      }\n      .hidden {\n        display: none;\n      }\n      #card-error {\n        color: rgb(105, 115, 134);\n        font-size: 16px;\n        line-height: 20px;\n        margin-top: 12px;\n        text-align: center;\n      }\n      #card-element {\n        border-radius: 4px 4px 0 0;\n        padding: 12px;\n        border: 1px solid rgba(50, 50, 93, 0.1);\n        max-height: 44px;\n        width: 100%;\n        background: white;\n        box-sizing: border-box;\n      }\n      #payment-request-button {\n        margin-bottom: 32px;\n      }\n      /* Buttons and links */\n      button {\n        background: #5469d4;\n        font-family: Arial, sans-serif;\n        color: #ffffff;\n        border-radius: 0 0 4px 4px;\n        border: 0;\n        padding: 12px 16px;\n        font-size: 16px;\n        font-weight: 600;\n        cursor: pointer;\n        display: block;\n        transition: all 0.2s ease;\n        width: 100%;\n      }\n      button:hover {\n        filter: contrast(115%);\n      }\n      button:disabled {\n        opacity: 0.5;\n        cursor: default;\n      }\n      /* spinner/processing state, errors */\n      .spinner,\n      .spinner:before,\n      .spinner:after {\n        border-radius: 50%;\n      }\n      .spinner {\n        color: #ffffff;\n        font-size: 22px;\n        text-indent: -99999px;\n        margin: 0px auto;\n        position: relative;\n        width: 20px;\n        height: 20px;\n        box-shadow: inset 0 0 0 2px;\n        -webkit-transform: translateZ(0);\n        -ms-transform: translateZ(0);\n        transform: translateZ(0);\n      }\n      .spinner:before,\n      .spinner:after {\n        position: absolute;\n        content: \"\";\n      }\n      .spinner:before {\n        width: 10.4px;\n        height: 20.4px;\n        background: #5469d4;\n        border-radius: 20.4px 0 0 20.4px;\n        top: -0.2px;\n        left: -0.2px;\n        -webkit-transform-origin: 10.4px 10.2px;\n        transform-origin: 10.4px 10.2px;\n        -webkit-animation: loading 2s infinite ease 1.5s;\n        animation: loading 2s infinite ease 1.5s;\n      }\n      .spinner:after {\n        width: 10.4px;\n        height: 10.2px;\n        background: #5469d4;\n        border-radius: 0 10.2px 10.2px 0;\n        top: -0.1px;\n        left: 10.2px;\n        -webkit-transform-origin: 0px 10.2px;\n        transform-origin: 0px 10.2px;\n        -webkit-animation: loading 2s infinite ease;\n        animation: loading 2s infinite ease;\n      }\n      @keyframes loading {\n        0% {\n          -webkit-transform: rotate(0deg);\n          transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      @media only screen and (max-width: 600px) {\n        form {\n          width: 80vw;\n        }\n      }\n      `}</style>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}