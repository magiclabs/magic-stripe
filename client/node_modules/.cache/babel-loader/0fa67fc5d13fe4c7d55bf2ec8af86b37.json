{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResponsiveComponents = createResponsiveComponents;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  for (var _key in a) {\n    if (a[_key] !== b[_key]) return false;\n  }\n\n  return true;\n};\n/** TODO */\n\n\nfunction createResponsiveComponents() {\n  var ResponsiveContext = _react.default.createContext({});\n\n  ResponsiveContext.displayName = \"Media.DynamicContext\";\n  var ResponsiveConsumer = ResponsiveContext.Consumer;\n  return {\n    Consumer: ResponsiveConsumer,\n    Provider: /*#__PURE__*/function (_React$Component) {\n      _inherits(ResponsiveProvider, _React$Component);\n\n      function ResponsiveProvider(props) {\n        var _this;\n\n        _classCallCheck(this, ResponsiveProvider);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ResponsiveProvider).call(this, props));\n\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isSupportedEnvironment\", function () {\n          return typeof window !== \"undefined\" && typeof window.matchMedia !== \"undefined\";\n        });\n\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setupMatchers\", function (mediaQueries) {\n          return Object.keys(mediaQueries).reduce(function (matchers, key) {\n            return _objectSpread({}, matchers, _defineProperty({}, key, window.matchMedia(mediaQueries[key])));\n          }, {});\n        });\n\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"checkMatchers\", function (mediaQueryMatchers) {\n          return Object.keys(mediaQueryMatchers).reduce(function (matches, key) {\n            return _objectSpread({}, matches, _defineProperty({}, key, mediaQueryMatchers[key].matches));\n          }, {});\n        });\n\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"mediaQueryStatusChangedCallback\", function () {\n          var mediaQueryMatches = _this.checkMatchers(_this.state.mediaQueryMatchers);\n\n          _this.setState({\n            mediaQueryMatches: mediaQueryMatches\n          });\n        });\n\n        var _mediaQueryMatchers = undefined;\n\n        var _mediaQueryMatches;\n\n        if (_this.isSupportedEnvironment()) {\n          _mediaQueryMatchers = _this.setupMatchers(props.mediaQueries);\n          _mediaQueryMatches = _this.checkMatchers(_mediaQueryMatchers);\n        } else {\n          _mediaQueryMatches = Object.keys(props.mediaQueries).reduce(function (matches, key) {\n            return _objectSpread({}, matches, _defineProperty({}, key, !!props.initialMatchingMediaQueries && props.initialMatchingMediaQueries.includes(key)));\n          }, {});\n        }\n\n        _this.state = {\n          mediaQueryMatchers: _mediaQueryMatchers,\n          mediaQueryMatches: _mediaQueryMatches\n        };\n        return _this;\n      }\n\n      _createClass(ResponsiveProvider, [{\n        key: \"componentDidMount\",\n        // Lifecycle methods\n        value: function componentDidMount() {\n          if (this.state.mediaQueryMatchers) {\n            var mediaQueryStatusChangedCallback = this.mediaQueryStatusChangedCallback;\n            Object.values(this.state.mediaQueryMatchers).forEach(function (matcher) {\n              matcher.addListener(mediaQueryStatusChangedCallback);\n            });\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this.state.mediaQueryMatchers) {\n            var mediaQueryStatusChangedCallback = this.mediaQueryStatusChangedCallback;\n            Object.values(this.state.mediaQueryMatchers).forEach(function (matcher) {\n              return matcher.removeListener(mediaQueryStatusChangedCallback);\n            });\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (!this.state.mediaQueryMatchers) return false;\n          if (nextProps.children !== this.props.children) return true;\n\n          if (shallowEqual(this.state.mediaQueryMatches, nextState.mediaQueryMatches)) {\n            return false;\n          }\n\n          return true;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return _react.default.createElement(ResponsiveContext.Provider, {\n            value: this.state.mediaQueryMatches\n          }, this.props.children);\n        }\n      }]);\n\n      return ResponsiveProvider;\n    }(_react.default.Component)\n  };\n}","map":{"version":3,"sources":["../src/DynamicResponsive.tsx"],"names":["shallowEqual","a","b","ResponsiveContext","React","ResponsiveConsumer","Consumer","Provider","mediaQueryMatchers","props","mediaQueryMatches","window","mediaQueries","mediaQueryStatusChangedCallback","Object","matcher","nextProps","nextState"],"mappings":";;;;;;;AAMA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,CAAA,EAAA,CAAA,EAAgD;AACnE,OAAK,IAAL,IAAA,IAAA,CAAA,EAAqB;AACnB,QAAIC,CAAC,CAADA,IAAC,CAADA,KAAWC,CAAC,CAAhB,IAAgB,CAAhB,EAAuB,OAAA,KAAA;AACxB;;AACD,SAAA,IAAA;AAJF,CAAA;AAOA;;;AACO,SAAA,0BAAA,GAAwD;AAC7D,MAAMC,iBAAiB,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAA1B,EAA0BA,CAA1B;;AACAD,EAAAA,iBAAiB,CAAjBA,WAAAA,GAAAA,sBAAAA;AAEA,MAAME,kBAEL,GAAGF,iBAAiB,CAFrB,QAAA;AAIA,SAAO;AACLG,IAAAA,QAAQ,EADH,kBAAA;AAELC,IAAAA,QAAQ,EAAA,aAAA,UAAA,gBAAA,EAAA;AAAA,MAAA,SAAA,CAAA,kBAAA,EAAA,gBAAA,CAAA;;AAIN,eAAA,kBAAA,CAAA,KAAA,EAA+C;AAAA,YAAA,KAAA;;AAAA,QAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,CAAA;;AAC7C,QAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,kBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AAD6C,QAAA,eAAA,CAAA,sBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAA,EAAA,wBAAA,EA0BtB,YAAM;AAC7B,iBACE,OAAA,MAAA,KAAA,WAAA,IACA,OAAOI,MAAM,CAAb,UAAA,KAFF,WAAA;AA3B6C,SAAA,CAAA;;AAAA,QAAA,eAAA,CAAA,sBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAA,EAAA,eAAA,EAoC/B,UAAA,YAAA,EAAoD;AAClE,iBAAO,MAAM,CAAN,IAAA,CAAA,YAAA,EAAA,MAAA,CACL,UAAA,QAAA,EAAA,GAAA,EAAA;AAAA,mBAAA,aAAA,CAAA,EAAA,EAAA,QAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,EAESA,MAAM,CAANA,UAAAA,CAAkBC,YAAY,CAFvC,GAEuC,CAA9BD,CAFT,CAAA,CAAA;AADK,WAAA,EAAP,EAAO,CAAP;AArC6C,SAAA,CAAA;;AAAA,QAAA,eAAA,CAAA,sBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAA,EAAA,eAAA,EAiD/B,UAAA,kBAAA,EAEQ;AACtB,iBAAO,MAAM,CAAN,IAAA,CAAA,kBAAA,EAAA,MAAA,CACL,UAAA,OAAA,EAAA,GAAA,EAAA;AAAA,mBAAA,aAAA,CAAA,EAAA,EAAA,OAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,EAESH,kBAAkB,CAAlBA,GAAkB,CAAlBA,CAFT,OAAA,CAAA,CAAA;AADK,WAAA,EAAP,EAAO,CAAP;AApD6C,SAAA,CAAA;;AAAA,QAAA,eAAA,CAAA,sBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iCAAA,EAgEb,YAAM;AACtC,cAAME,iBAAiB,GAAG,KAAA,CAAA,aAAA,CACxB,KAAA,CAAA,KAAA,CADF,kBAA0B,CAA1B;;AAGA,UAAA,KAAA,CAAA,QAAA,CAAc;AACZA,YAAAA,iBAAiB,EAAjBA;AADY,WAAd;AApE6C,SAAA,CAAA;;AAE7C,YAAIF,mBAAkD,GAAtD,SAAA;;AACA,YAAA,kBAAA;;AAEA,YAAI,KAAA,CAAJ,sBAAI,EAAJ,EAAmC;AACjCA,UAAAA,mBAAkB,GAAG,KAAA,CAAA,aAAA,CAAmBC,KAAK,CAA7CD,YAAqB,CAArBA;AACAE,UAAAA,kBAAiB,GAAG,KAAA,CAAA,aAAA,CAApBA,mBAAoB,CAApBA;AAFF,SAAA,MAGO;AACLA,UAAAA,kBAAiB,GAAG,MAAM,CAAN,IAAA,CAAYD,KAAK,CAAjB,YAAA,EAAA,MAAA,CAClB,UAAA,OAAA,EAAA,GAAA,EAAA;AAAA,mBAAA,aAAA,CAAA,EAAA,EAAA,OAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,EAGI,CAAC,CAACA,KAAK,CAAP,2BAAA,IACAA,KAAK,CAALA,2BAAAA,CAAAA,QAAAA,CAJJ,GAIIA,CAJJ,CAAA,CAAA;AADkB,WAAA,EAApBC,EAAoB,CAApBA;AASD;;AAED,QAAA,KAAA,CAAA,KAAA,GAAa;AACXF,UAAAA,kBAAkB,EADP,mBAAA;AAEXE,UAAAA,iBAAiB,EAAjBA;AAFW,SAAb;AApB6C,eAAA,KAAA;AAwB9C;;AA5BK,MAAA,YAAA,CAAA,kBAAA,EAAA,CAAA;AAAA,QAAA,GAAA,EAAA,mBAAA;AA6EN;AA7EM,QAAA,KAAA,EAAA,SAAA,iBAAA,GA+Ec;AAClB,cAAI,KAAA,KAAA,CAAJ,kBAAA,EAAmC;AAAA,gBACzBG,+BADyB,GAAA,KAAA,+BAAA;AAEjCC,YAAAA,MAAM,CAANA,MAAAA,CAAc,KAAA,KAAA,CAAdA,kBAAAA,EAAAA,OAAAA,CAAqD,UAAA,OAAA,EAAW;AAC9DC,cAAAA,OAAO,CAAPA,WAAAA,CAAAA,+BAAAA;AADFD,aAAAA;AAGD;AACF;AAtFK,OAAA,EAAA;AAAA,QAAA,GAAA,EAAA,sBAAA;AAAA,QAAA,KAAA,EAAA,SAAA,oBAAA,GAwFiB;AACrB,cAAI,KAAA,KAAA,CAAJ,kBAAA,EAAmC;AAAA,gBACzBD,+BADyB,GAAA,KAAA,+BAAA;AAEjCC,YAAAA,MAAM,CAANA,MAAAA,CAAc,KAAA,KAAA,CAAdA,kBAAAA,EAAAA,OAAAA,CAAqD,UAAA,OAAA,EAAO;AAAA,qBAC1DC,OAAO,CAAPA,cAAAA,CAD0D,+BAC1DA,CAD0D;AAA5DD,aAAAA;AAGD;AACF;AA/FK,OAAA,EAAA;AAAA,QAAA,GAAA,EAAA,uBAAA;AAAA,QAAA,KAAA,EAAA,SAAA,qBAAA,CAAA,SAAA,EAAA,SAAA,EAoGJ;AACA,cAAI,CAAC,KAAA,KAAA,CAAL,kBAAA,EAAoC,OAAA,KAAA;AACpC,cAAIE,SAAS,CAATA,QAAAA,KAAuB,KAAA,KAAA,CAA3B,QAAA,EAAgD,OAAA,IAAA;;AAChD,cACEhB,YAAY,CACV,KAAA,KAAA,CADU,iBAAA,EAEViB,SAAS,CAHb,iBACc,CADd,EAKE;AACA,mBAAA,KAAA;AACD;;AACD,iBAAA,IAAA;AACD;AAhHK,OAAA,EAAA;AAAA,QAAA,GAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,SAAA,MAAA,GAkHG;AACP,iBACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,iBAAD,CAAA,QAAA,EAAA;AAA4B,YAAA,KAAK,EAAE,KAAA,KAAA,CAAWP;AAA9C,WAAA,EACG,KAAA,KAAA,CAFL,QACE,CADF;AAKD;AAxHK,OAAA,CAAA,CAAA;;AAAA,aAAA,kBAAA;AAAA,KAAA,CAAmCN,MAAAA,CAAAA,OAAAA,CAAnC,SAAA;AAFH,GAAP;AA6HD","sourcesContent":["/**\n * TODO: This is the deprecated runtime media-query component from Reaction.\n *       It can probably be simplified somewhat if we’re not going to be using\n *       it directly any longer.\n */\n\nimport React from \"react\"\n\n/** TODO */\nexport type MediaQueries<M extends string = string> = { [K in M]: string }\n\n/** TODO */\nexport interface MediaQueryMatchers {\n  [key: string]: MediaQueryList\n}\n\n/** TODO */\nexport type MediaQueryMatches<M extends string = string> = { [K in M]: boolean }\n\n/** TODO */\nexport interface ResponsiveProviderProps<M extends string> {\n  mediaQueries: MediaQueries<M>\n  initialMatchingMediaQueries?: M[]\n  children: React.ReactNode\n}\n\n/** TODO */\nexport interface ResponsiveProviderState {\n  mediaQueryMatchers?: MediaQueryMatchers\n  mediaQueryMatches: MediaQueryMatches\n}\n\nconst shallowEqual = (a: MediaQueryMatches, b: MediaQueryMatches) => {\n  for (const key in a) {\n    if (a[key] !== b[key]) return false\n  }\n  return true\n}\n\n/** TODO */\nexport function createResponsiveComponents<M extends string>() {\n  const ResponsiveContext = React.createContext({})\n  ResponsiveContext.displayName = \"Media.DynamicContext\"\n\n  const ResponsiveConsumer: React.SFC<\n    React.ConsumerProps<MediaQueryMatches<M>>\n  > = ResponsiveContext.Consumer as React.SFC<React.ConsumerProps<any>>\n\n  return {\n    Consumer: ResponsiveConsumer,\n    Provider: class ResponsiveProvider extends React.Component<\n      ResponsiveProviderProps<M>,\n      ResponsiveProviderState\n    > {\n      constructor(props: ResponsiveProviderProps<M>) {\n        super(props)\n        let mediaQueryMatchers: MediaQueryMatchers | undefined = undefined\n        let mediaQueryMatches: MediaQueryMatches\n\n        if (this.isSupportedEnvironment()) {\n          mediaQueryMatchers = this.setupMatchers(props.mediaQueries)\n          mediaQueryMatches = this.checkMatchers(mediaQueryMatchers)\n        } else {\n          mediaQueryMatches = Object.keys(props.mediaQueries).reduce(\n            (matches, key) => ({\n              ...matches,\n              [key]:\n                !!props.initialMatchingMediaQueries &&\n                props.initialMatchingMediaQueries.includes(key as M),\n            }),\n            {}\n          )\n        }\n\n        this.state = {\n          mediaQueryMatchers,\n          mediaQueryMatches,\n        }\n      }\n\n      isSupportedEnvironment = () => {\n        return (\n          typeof window !== \"undefined\" &&\n          typeof window.matchMedia !== \"undefined\"\n        )\n      }\n\n      /**\n       * Create an array of media matchers that can validate each media query\n       */\n      setupMatchers = (mediaQueries: MediaQueries): MediaQueryMatchers => {\n        return Object.keys(mediaQueries).reduce(\n          (matchers, key) => ({\n            ...matchers,\n            [key]: window.matchMedia(mediaQueries[key]),\n          }),\n          {}\n        )\n      }\n\n      /**\n       * Uses the matchers to build a map of the states of each media query\n       */\n      checkMatchers = (\n        mediaQueryMatchers: MediaQueryMatchers\n      ): MediaQueryMatches => {\n        return Object.keys(mediaQueryMatchers).reduce(\n          (matches, key) => ({\n            ...matches,\n            [key]: mediaQueryMatchers[key].matches,\n          }),\n          {}\n        )\n      }\n\n      /**\n       * The function that will be called any time a media query status changes\n       */\n      mediaQueryStatusChangedCallback = () => {\n        const mediaQueryMatches = this.checkMatchers(\n          this.state.mediaQueryMatchers!\n        )\n        this.setState({\n          mediaQueryMatches,\n        })\n      }\n\n      // Lifecycle methods\n\n      componentDidMount() {\n        if (this.state.mediaQueryMatchers) {\n          const { mediaQueryStatusChangedCallback } = this\n          Object.values(this.state.mediaQueryMatchers).forEach(matcher => {\n            matcher.addListener(mediaQueryStatusChangedCallback)\n          })\n        }\n      }\n\n      componentWillUnmount() {\n        if (this.state.mediaQueryMatchers) {\n          const { mediaQueryStatusChangedCallback } = this\n          Object.values(this.state.mediaQueryMatchers).forEach(matcher =>\n            matcher.removeListener(mediaQueryStatusChangedCallback)\n          )\n        }\n      }\n\n      shouldComponentUpdate(\n        nextProps: Readonly<ResponsiveProviderProps<M>>,\n        nextState: Readonly<ResponsiveProviderState>\n      ) {\n        if (!this.state.mediaQueryMatchers) return false\n        if (nextProps.children !== this.props.children) return true\n        if (\n          shallowEqual(\n            this.state.mediaQueryMatches,\n            nextState.mediaQueryMatches\n          )\n        ) {\n          return false\n        }\n        return true\n      }\n\n      render() {\n        return (\n          <ResponsiveContext.Provider value={this.state.mediaQueryMatches}>\n            {this.props.children}\n          </ResponsiveContext.Provider>\n        )\n      }\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}