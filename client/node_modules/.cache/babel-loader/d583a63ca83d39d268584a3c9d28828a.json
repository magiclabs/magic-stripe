{"ast":null,"code":"import { __rest } from '../../../_virtual/_tslib.js';\nimport React from 'react';\nimport { usePress } from '@react-aria/interactions';\nimport { useFocusRing } from '@react-aria/focus';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { classNames } from '../../../libs/class-names.js';\nimport { mergeProps } from '../../../libs/merge-props.js';\nimport 'color';\nimport 'blueimp-md5';\nimport '@artsy/fresnel';\nimport { useTheme } from '../../theme/use-theme.js';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper.js';\nimport { IconColorProvider, Icon } from '../../icons/icon-base.js';\nimport 'usable-react';\nimport '@seznam/compose-react-refs';\nimport { InverseThemeSemantics } from '../../theme/inverse-theme-semantics.js';\nimport '@react-aria/ssr';\nimport '../../theme/theme-provider.js';\nimport { Spacer } from '../../layout/spacer.js';\nimport { useScaleIn } from '../../../hooks/transitions.js';\nimport 'react-dom';\nimport 'watch-resize';\nimport modules_7956c93f from './call-to-action.less.js';\n/**\r\n * Determines a _default_ color for icons nested in a `<CallToAction>`.\r\n */\n\nfunction useIconColor(baseColor, inverseSemantics, outline) {\n  const theme = useTheme({\n    inverseSemantics\n  });\n  let iconBaseColor;\n\n  switch (baseColor) {\n    case 'primary':\n      iconBaseColor = outline ? 'tertiary' : 'secondary';\n      break;\n\n    case 'secondary':\n      iconBaseColor = outline ? 'secondary' : 'tertiary';\n      break;\n\n    case 'tertiary':\n      iconBaseColor = outline ? 'tertiary' : 'secondary';\n      break;\n\n    case 'error':\n      iconBaseColor = outline ? 'error' : 'secondary';\n      break;\n\n    case 'warning':\n      iconBaseColor = outline ? 'warning' : 'secondary';\n      break;\n\n    case 'success':\n      iconBaseColor = outline ? 'success' : 'secondary';\n      break;\n\n    default:\n      iconBaseColor = undefined;\n  }\n\n  return iconBaseColor ? theme.hex[iconBaseColor].base : undefined;\n}\n\nconst CallToAction = /* @__PURE__ */forwardRefWrapper('CallToAction', {\n  color: 'primary',\n  size: 'md'\n}, (props, externalRef) => {\n  const {\n    children,\n    onPress,\n    className,\n    disabled,\n    outline,\n    color,\n    size,\n    leadingIcon,\n    trailingIcon\n  } = props,\n        otherProps = __rest(props, [\"children\", \"onPress\", \"className\", \"disabled\", \"outline\", \"color\", \"size\", \"leadingIcon\", \"trailingIcon\"]);\n\n  const {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing();\n  const {\n    pressProps,\n    isPressed\n  } = usePress({\n    onPress,\n    isDisabled: disabled\n  });\n  const getScaleProps = useScaleIn();\n  const inverseSemantics = color === 'secondary' && outline || color === 'tertiary' && !outline;\n  const iconColor = useIconColor(color, inverseSemantics, outline);\n  return React.createElement(IconColorProvider, {\n    colorA: iconColor\n  }, React.createElement(InverseThemeSemantics, {\n    active: inverseSemantics\n  }, React.createElement(\"button\", Object.assign({\n    className: classNames([className, modules_7956c93f.CallToAction, modules_7956c93f[`size_${size}`], modules_7956c93f[`color_${color}`], disabled && modules_7956c93f.disabled, outline && modules_7956c93f.outline, isPressed && modules_7956c93f.active]),\n    type: \"button\",\n    disabled: disabled,\n    \"aria-disabled\": disabled\n  }, mergeProps(pressProps, focusProps, otherProps), {\n    ref: externalRef\n  }), React.createElement(AnimatePresence, null, isFocusVisible && React.createElement(motion.span, Object.assign({\n    \"aria-hidden\": \"true\",\n    className: modules_7956c93f.focusRing\n  }, getScaleProps(1.05)))), leadingIcon && React.createElement(React.Fragment, null, React.createElement(Icon, {\n    size: size === 'sm' ? 20 : 24,\n    type: leadingIcon\n  }), React.createElement(Spacer, {\n    size: 8\n  })), React.createElement(\"span\", {\n    className: modules_7956c93f.buttonLabel\n  }, children), trailingIcon && React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    size: 8\n  }), React.createElement(Icon, {\n    size: size === 'sm' ? 20 : 24,\n    type: trailingIcon\n  })))));\n});\nexport { CallToAction };","map":{"version":3,"sources":["../../../../../src/components/primitives/call-to-action/call-to-action.tsx"],"names":["styles"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PressEvent } from '@react-types/shared';\nimport { usePress } from '@react-aria/interactions';\nimport { useFocusRing } from '@react-aria/focus';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { mergeProps } from '../../../libs/merge-props';\nimport { classNames } from '../../../libs/class-names';\nimport { Icon, MonochromeIconDefinition, IconColorProvider } from '../../icons';\nimport { Spacer } from '../../layout';\nimport { useScaleIn } from '../../../hooks/transitions';\nimport { InverseThemeSemantics } from '../../theme/inverse-theme-semantics';\nimport { BaseColorName } from '../../../libs/theme';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper';\nimport { useTheme } from '../../theme';\n\nimport styles from './call-to-action.less';\n\ninterface CallToActionProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  outline?: boolean;\n  disabled?: boolean;\n  onPress?: (event: PressEvent) => void;\n  size?: 'sm' | 'md' | 'lg';\n  color?: 'primary' | 'secondary' | 'tertiary' | 'success' | 'warning' | 'error';\n  leadingIcon?: MonochromeIconDefinition;\n  trailingIcon?: MonochromeIconDefinition;\n}\n\n/**\n * Determines a _default_ color for icons nested in a `<CallToAction>`.\n */\nfunction useIconColor(baseColor: CallToActionProps['color'], inverseSemantics?: boolean, outline?: boolean) {\n  const theme = useTheme({ inverseSemantics });\n\n  let iconBaseColor: BaseColorName | undefined;\n\n  switch (baseColor) {\n    case 'primary':\n      iconBaseColor = outline ? 'tertiary' : 'secondary';\n      break;\n\n    case 'secondary':\n      iconBaseColor = outline ? 'secondary' : 'tertiary';\n      break;\n\n    case 'tertiary':\n      iconBaseColor = outline ? 'tertiary' : 'secondary';\n      break;\n\n    case 'error':\n      iconBaseColor = outline ? 'error' : 'secondary';\n      break;\n\n    case 'warning':\n      iconBaseColor = outline ? 'warning' : 'secondary';\n      break;\n\n    case 'success':\n      iconBaseColor = outline ? 'success' : 'secondary';\n      break;\n\n    default:\n      iconBaseColor = undefined;\n  }\n\n  return iconBaseColor ? theme.hex[iconBaseColor].base : undefined;\n}\n\nexport const CallToAction = /* @__PURE__ */ forwardRefWrapper<HTMLButtonElement, CallToActionProps>(\n  'CallToAction',\n\n  { color: 'primary', size: 'md' },\n\n  (props, externalRef) => {\n    const {\n      children,\n      onPress,\n      className,\n      disabled,\n      outline,\n      color,\n      size,\n      leadingIcon,\n      trailingIcon,\n      ...otherProps\n    } = props;\n\n    const { isFocusVisible, focusProps } = useFocusRing();\n    const { pressProps, isPressed } = usePress({ onPress, isDisabled: disabled });\n    const getScaleProps = useScaleIn();\n\n    const inverseSemantics = (color === 'secondary' && outline) || (color === 'tertiary' && !outline);\n    const iconColor = useIconColor(color, inverseSemantics, outline);\n\n    return (\n      <IconColorProvider colorA={iconColor}>\n        <InverseThemeSemantics active={inverseSemantics}>\n          <button\n            className={classNames([\n              className,\n              styles.CallToAction,\n              styles[`size_${size}`],\n              styles[`color_${color}`],\n              disabled && styles.disabled,\n              outline && styles.outline,\n              isPressed && styles.active,\n            ])}\n            type=\"button\"\n            disabled={disabled}\n            aria-disabled={disabled}\n            {...mergeProps(pressProps, focusProps, otherProps)}\n            ref={externalRef}\n          >\n            <AnimatePresence>\n              {isFocusVisible && (\n                <motion.span aria-hidden=\"true\" className={styles.focusRing} {...getScaleProps(1.05)} />\n              )}\n            </AnimatePresence>\n\n            {leadingIcon && (\n              <>\n                <Icon size={size === 'sm' ? 20 : 24} type={leadingIcon} />\n                <Spacer size={8} />\n              </>\n            )}\n\n            <span className={styles.buttonLabel}>{children}</span>\n\n            {trailingIcon && (\n              <>\n                <Spacer size={8} />\n                <Icon size={size === 'sm' ? 20 : 24} type={trailingIcon} />\n              </>\n            )}\n          </button>\n        </InverseThemeSemantics>\n      </IconColorProvider>\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}