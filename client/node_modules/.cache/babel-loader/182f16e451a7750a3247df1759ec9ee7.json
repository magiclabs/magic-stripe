{"ast":null,"code":"import { forwardRef } from 'react';\n\nfunction forwardRefWrapper(name, defaultPropsOrRender, definitelyRender) {\n  const render = typeof defaultPropsOrRender === 'object' ? definitelyRender : defaultPropsOrRender;\n  const defaultProps = typeof defaultPropsOrRender === 'function' ? {} : defaultPropsOrRender;\n  const comp = forwardRef(render);\n  comp.displayName = name;\n  comp.defaultProps = defaultProps;\n  return comp;\n}\n\nexport { forwardRefWrapper };","map":{"version":3,"sources":["../../../src/libs/forward-ref-wrapper.ts"],"names":[],"mappings":";;SAqBgB,iB,CACd,I,EACA,oB,EACA,gB,EAAiD;AAEjD,QAAM,MAAM,GAAG,OAAO,oBAAP,KAAgC,QAAhC,GAA2C,gBAA3C,GAA8D,oBAA7E;AACA,QAAM,YAAY,GAAG,OAAO,oBAAP,KAAgC,UAAhC,GAA6C,EAA7C,GAAkD,oBAAvE;AAEA,QAAM,IAAI,GAAG,UAAU,CAAC,MAAD,CAAvB;AACA,EAAA,IAAI,CAAC,WAAL,GAAmB,IAAnB;AACA,EAAA,IAAI,CAAC,YAAL,GAAoB,YAApB;AACA,SAAO,IAAP;AACF","sourcesContent":["import { forwardRef, ForwardRefExoticComponent, ForwardRefRenderFunction, PropsWithoutRef, RefAttributes } from 'react';\n\n/**\n * Wraps `React.forwardRef` and applies a semantic `displayName` and\n * `defaultProps` without side effects.\n *\n * This wrapper is required to properly tree-shake `React.forwardRef`\n * components, otherwise the minifier can't understand that `defaultProps` and\n * `displayName` are pure.\n */\nexport function forwardRefWrapper<T, P = {}>(\n  name: string,\n  render: ForwardRefRenderFunction<T, P>,\n): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;\n\nexport function forwardRefWrapper<T, P = {}>(\n  name: string,\n  defaultProps: Partial<PropsWithoutRef<P> & RefAttributes<T>> | undefined,\n  render: ForwardRefRenderFunction<T, P>,\n): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;\n\nexport function forwardRefWrapper<T, P = {}>(\n  name: string,\n  defaultPropsOrRender: Partial<PropsWithoutRef<P> & RefAttributes<T>> | undefined | ForwardRefRenderFunction<T, P>,\n  definitelyRender?: ForwardRefRenderFunction<T, P>,\n): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\n  const render = typeof defaultPropsOrRender === 'object' ? definitelyRender : defaultPropsOrRender;\n  const defaultProps = typeof defaultPropsOrRender === 'function' ? {} : defaultPropsOrRender;\n\n  const comp = forwardRef(render!);\n  comp.displayName = name;\n  comp.defaultProps = defaultProps;\n  return comp;\n}\n"]},"metadata":{},"sourceType":"module"}