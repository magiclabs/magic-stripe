{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/client/src/components/signup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Magic } from \"magic-sdk\";\nimport { WebAuthnExtension } from \"@magic-ext/webauthn\";\nimport Layout from \"./layout\";\nimport SignUpForm from \"./signup-form\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = () => {\n  _s();\n\n  const history = useHistory();\n  const [magic, setMagic] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  useEffect(() => {\n    !magic && setMagic(new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY, {\n      extensions: [new WebAuthnExtension()]\n    }));\n    magic === null || magic === void 0 ? void 0 : magic.preload();\n  }, [magic]);\n\n  async function handleRegisterWithEmail(email) {\n    try {\n      setDisabled(true); // Disable login button to prevent multiple emails from being triggered\n\n      let didToken = await magic.auth.loginWithMagicLink({\n        email\n      });\n      authenticateWithServer(didToken);\n    } catch (error) {\n      setDisabled(false); // Re-enable login button - user may have requested to edit their email\n\n      console.log(error);\n    }\n  } // Try to login with webauthn\n  // If that fails, revert to registering with WebAuthn\n\n\n  async function handleRegisterWithWebauthn(email) {\n    try {\n      let didToken = await magic.webauthn.login({\n        username: email\n      });\n      authenticateWithServer(didToken);\n    } catch (error) {\n      try {\n        let didToken = await magic.webauthn.registerNewUser({\n          username: email\n        });\n        authenticateWithServer(didToken);\n      } catch (err) {\n        alert(\"Failed to authenticate. Must be using a supported device and a username not already taken.\");\n        console.log(err);\n      }\n    }\n  }\n\n  async function authenticateWithServer(didToken) {\n    const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + didToken\n      },\n      credentials: \"include\"\n    });\n    res.status === 200 && history.push(\"/payment\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(SignUpForm, {\n        disabled: disabled,\n        onEmailSubmit: handleRegisterWithEmail,\n        onWebauthnSubmit: handleRegisterWithWebauthn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .login {\n          max-width: 20rem;\n          margin: 40px auto 0;\n          padding: 1rem;\n          border: 1px solid #dfe1e5;\n          border-radius: 4px;\n          text-align: center;\n          box-shadow: 0px 0px 6px 6px #f7f7f7;\n          box-sizing: border-box;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"s5hUKWn4llRVyfwDqSiFCMb27uE=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/maricrisbonzo/Desktop/magic-apps/magic-stripe/client/src/components/signup.js"],"names":["useState","useEffect","Magic","WebAuthnExtension","Layout","SignUpForm","useHistory","SignUp","history","magic","setMagic","disabled","setDisabled","process","env","REACT_APP_MAGIC_PUBLISHABLE_KEY","extensions","preload","handleRegisterWithEmail","email","didToken","auth","loginWithMagicLink","authenticateWithServer","error","console","log","handleRegisterWithWebauthn","webauthn","login","username","registerNewUser","err","alert","res","fetch","REACT_APP_SERVER_URL","method","headers","Authorization","credentials","status","push"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Magic } from \"magic-sdk\";\nimport { WebAuthnExtension } from \"@magic-ext/webauthn\";\nimport Layout from \"./layout\";\nimport SignUpForm from \"./signup-form\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = () => {\n  const history = useHistory();\n  const [magic, setMagic] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  useEffect(() => {\n    !magic &&\n      setMagic(\n        new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY, {\n          extensions: [new WebAuthnExtension()],\n        })\n      );\n    magic?.preload();\n  }, [magic]);\n\n  async function handleRegisterWithEmail(email) {\n    try {\n      setDisabled(true); // Disable login button to prevent multiple emails from being triggered\n      let didToken = await magic.auth.loginWithMagicLink({\n        email,\n      });\n      authenticateWithServer(didToken);\n    } catch (error) {\n      setDisabled(false); // Re-enable login button - user may have requested to edit their email\n      console.log(error);\n    }\n  }\n\n  // Try to login with webauthn\n  // If that fails, revert to registering with WebAuthn\n  async function handleRegisterWithWebauthn(email) {\n    try {\n      let didToken = await magic.webauthn.login({ username: email });\n      authenticateWithServer(didToken);\n    } catch (error) {\n      try {\n        let didToken = await magic.webauthn.registerNewUser({\n          username: email,\n        });\n        authenticateWithServer(didToken);\n      } catch (err) {\n        alert(\n          \"Failed to authenticate. Must be using a supported device and a username not already taken.\"\n        );\n        console.log(err);\n      }\n    }\n  }\n\n  async function authenticateWithServer(didToken) {\n    const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + didToken,\n      },\n      credentials: \"include\",\n    });\n    res.status === 200 && history.push(\"/payment\");\n  }\n\n  return (\n    <Layout>\n      <div className=\"login\">\n        <SignUpForm\n          disabled={disabled}\n          onEmailSubmit={handleRegisterWithEmail}\n          onWebauthnSubmit={handleRegisterWithWebauthn}\n        />\n      </div>\n      <style>{`\n        .login {\n          max-width: 20rem;\n          margin: 40px auto 0;\n          padding: 1rem;\n          border: 1px solid #dfe1e5;\n          border-radius: 4px;\n          text-align: center;\n          box-shadow: 0px 0px 6px 6px #f7f7f7;\n          box-sizing: border-box;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}