{"ast":null,"code":"/* eslint-disable consistent-return, prefer-spread */\nimport { __assign, __extends } from \"tslib\";\nimport { MagicOutgoingWindowMessage } from '@magic-sdk/types';\nimport { BaseModule } from './base-module';\nimport { createInvalidArgumentError, MagicRPCError, createSynchronousWeb3MethodWarning } from '../core/sdk-exceptions';\nimport { createJsonRpcRequestPayload, standardizeJsonRpcRequestPayload, JsonRpcResponse } from '../core/json-rpc';\nimport { createTypedEmitter } from '../util/events';\n\nvar _a = createTypedEmitter(),\n    createBoundEmitterMethod = _a.createBoundEmitterMethod,\n    createChainingEmitterMethod = _a.createChainingEmitterMethod;\n/** */\n\n\nvar RPCProviderModule =\n/** @class */\nfunction (_super) {\n  __extends(RPCProviderModule, _super);\n\n  function RPCProviderModule() {\n    // Implements EIP 1193:\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isMagic = true;\n    _this.on = createChainingEmitterMethod('on', _this);\n    _this.once = createChainingEmitterMethod('once', _this);\n    _this.addListener = createChainingEmitterMethod('addListener', _this);\n    _this.off = createChainingEmitterMethod('off', _this);\n    _this.removeListener = createChainingEmitterMethod('removeListener', _this);\n    _this.removeAllListeners = createChainingEmitterMethod('removeAllListeners', _this);\n    _this.emit = createBoundEmitterMethod('emit');\n    _this.eventNames = createBoundEmitterMethod('eventNames');\n    _this.listeners = createBoundEmitterMethod('listeners');\n    _this.listenerCount = createBoundEmitterMethod('listenerCount');\n    return _this;\n  }\n  /* eslint-enable prettier/prettier */\n\n\n  RPCProviderModule.prototype.sendAsync = function (payload, onRequestComplete) {\n    if (!onRequestComplete) {\n      throw createInvalidArgumentError({\n        procedure: 'Magic.rpcProvider.sendAsync',\n        argument: 1,\n        expected: 'function',\n        received: onRequestComplete === null ? 'null' : typeof onRequestComplete\n      });\n    }\n\n    if (Array.isArray(payload)) {\n      this.transport.post(this.overlay, MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, payload.map(function (p) {\n        return standardizeJsonRpcRequestPayload(p);\n      })).then(function (batchResponse) {\n        onRequestComplete(null, batchResponse.map(function (response) {\n          return __assign(__assign({}, response.payload), {\n            error: response.hasError ? new MagicRPCError(response.payload.error) : null\n          });\n        }));\n      });\n    } else {\n      var finalPayload = standardizeJsonRpcRequestPayload(payload);\n      this.transport.post(this.overlay, MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, finalPayload).then(function (response) {\n        onRequestComplete(response.hasError ? new MagicRPCError(response.payload.error) : null, response.payload);\n      });\n    }\n  };\n  /* eslint-enable prettier/prettier */\n\n\n  RPCProviderModule.prototype.send = function (payloadOrMethod, onRequestCompleteOrParams) {\n    // Case #1\n    // Web3 >= 1.0.0-beta.38 calls `send` with method and parameters.\n    if (typeof payloadOrMethod === 'string') {\n      var payload = createJsonRpcRequestPayload(payloadOrMethod, Array.isArray(onRequestCompleteOrParams) ? onRequestCompleteOrParams : []);\n      return this.request(payload);\n    } // Case #2\n    // Web3 <= 1.0.0-beta.37 uses `send` with a callback for async queries.\n\n\n    if (Array.isArray(payloadOrMethod) || !!onRequestCompleteOrParams) {\n      /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n      this.sendAsync(payloadOrMethod, onRequestCompleteOrParams);\n      return;\n    } // Case #3\n    // Legacy synchronous methods (unsupported).\n\n\n    var warning = createSynchronousWeb3MethodWarning();\n    warning.log();\n    return new JsonRpcResponse(payloadOrMethod).applyError({\n      code: -32603,\n      message: warning.rawMessage\n    }).payload;\n  };\n\n  RPCProviderModule.prototype.enable = function () {\n    var requestPayload = createJsonRpcRequestPayload('eth_accounts');\n    return this.request(requestPayload);\n  };\n\n  return RPCProviderModule;\n}(BaseModule);\n\nexport { RPCProviderModule };","map":{"version":3,"sources":["../../../src/modules/rpc-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable consistent-return, prefer-spread */\nimport { __assign, __extends } from \"tslib\";\nimport { MagicOutgoingWindowMessage, } from '@magic-sdk/types';\nimport { BaseModule } from './base-module';\nimport { createInvalidArgumentError, MagicRPCError, createSynchronousWeb3MethodWarning } from '../core/sdk-exceptions';\nimport { createJsonRpcRequestPayload, standardizeJsonRpcRequestPayload, JsonRpcResponse } from '../core/json-rpc';\nimport { createTypedEmitter } from '../util/events';\nvar _a = createTypedEmitter(), createBoundEmitterMethod = _a.createBoundEmitterMethod, createChainingEmitterMethod = _a.createChainingEmitterMethod;\n/** */\nvar RPCProviderModule = /** @class */ (function (_super) {\n    __extends(RPCProviderModule, _super);\n    function RPCProviderModule() {\n        // Implements EIP 1193:\n        // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isMagic = true;\n        _this.on = createChainingEmitterMethod('on', _this);\n        _this.once = createChainingEmitterMethod('once', _this);\n        _this.addListener = createChainingEmitterMethod('addListener', _this);\n        _this.off = createChainingEmitterMethod('off', _this);\n        _this.removeListener = createChainingEmitterMethod('removeListener', _this);\n        _this.removeAllListeners = createChainingEmitterMethod('removeAllListeners', _this);\n        _this.emit = createBoundEmitterMethod('emit');\n        _this.eventNames = createBoundEmitterMethod('eventNames');\n        _this.listeners = createBoundEmitterMethod('listeners');\n        _this.listenerCount = createBoundEmitterMethod('listenerCount');\n        return _this;\n    }\n    /* eslint-enable prettier/prettier */\n    RPCProviderModule.prototype.sendAsync = function (payload, onRequestComplete) {\n        if (!onRequestComplete) {\n            throw createInvalidArgumentError({\n                procedure: 'Magic.rpcProvider.sendAsync',\n                argument: 1,\n                expected: 'function',\n                received: onRequestComplete === null ? 'null' : typeof onRequestComplete,\n            });\n        }\n        if (Array.isArray(payload)) {\n            this.transport\n                .post(this.overlay, MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, payload.map(function (p) { return standardizeJsonRpcRequestPayload(p); }))\n                .then(function (batchResponse) {\n                onRequestComplete(null, batchResponse.map(function (response) { return (__assign(__assign({}, response.payload), { error: response.hasError ? new MagicRPCError(response.payload.error) : null })); }));\n            });\n        }\n        else {\n            var finalPayload = standardizeJsonRpcRequestPayload(payload);\n            this.transport\n                .post(this.overlay, MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, finalPayload)\n                .then(function (response) {\n                onRequestComplete(response.hasError ? new MagicRPCError(response.payload.error) : null, response.payload);\n            });\n        }\n    };\n    /* eslint-enable prettier/prettier */\n    RPCProviderModule.prototype.send = function (payloadOrMethod, onRequestCompleteOrParams) {\n        // Case #1\n        // Web3 >= 1.0.0-beta.38 calls `send` with method and parameters.\n        if (typeof payloadOrMethod === 'string') {\n            var payload = createJsonRpcRequestPayload(payloadOrMethod, Array.isArray(onRequestCompleteOrParams) ? onRequestCompleteOrParams : []);\n            return this.request(payload);\n        }\n        // Case #2\n        // Web3 <= 1.0.0-beta.37 uses `send` with a callback for async queries.\n        if (Array.isArray(payloadOrMethod) || !!onRequestCompleteOrParams) {\n            /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n            this.sendAsync(payloadOrMethod, onRequestCompleteOrParams);\n            return;\n        }\n        // Case #3\n        // Legacy synchronous methods (unsupported).\n        var warning = createSynchronousWeb3MethodWarning();\n        warning.log();\n        return new JsonRpcResponse(payloadOrMethod).applyError({\n            code: -32603,\n            message: warning.rawMessage,\n        }).payload;\n    };\n    RPCProviderModule.prototype.enable = function () {\n        var requestPayload = createJsonRpcRequestPayload('eth_accounts');\n        return this.request(requestPayload);\n    };\n    return RPCProviderModule;\n}(BaseModule));\nexport { RPCProviderModule };\n//# sourceMappingURL=rpc-provider.js.map"]},"metadata":{},"sourceType":"module"}