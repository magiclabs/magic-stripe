{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MediaQueries = void 0;\n\nvar _Breakpoints = require(\"./Breakpoints\");\n\nvar _Interactions = require(\"./Interactions\");\n\nvar _Utils = require(\"./Utils\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Encapsulates all interaction data (and breakpoint data in the superclass)\n * needed by the Media component. The data is generated on initialization so no\n * further runtime work is necessary.\n */\n\n\nvar MediaQueries = /*#__PURE__*/function () {\n  _createClass(MediaQueries, null, [{\n    key: \"validKeys\",\n    value: function validKeys() {\n      return _toConsumableArray(_Breakpoints.Breakpoints.validKeys()).concat(_toConsumableArray(_Interactions.Interactions.validKeys()));\n    }\n  }]);\n\n  function MediaQueries(breakpoints, interactions) {\n    var _this = this;\n\n    _classCallCheck(this, MediaQueries);\n\n    _defineProperty(this, \"_breakpoints\", void 0);\n\n    _defineProperty(this, \"_interactions\", void 0);\n\n    _defineProperty(this, \"toStyle\", function (breakpointKeys) {\n      return [// Don’t add any size to the layout\n      \".fresnel-container{margin:0;padding:0;}\"].concat(_toConsumableArray(_this._breakpoints.toRuleSets(breakpointKeys)), _toConsumableArray(_this._interactions.toRuleSets())).join(\"\\n\");\n    });\n\n    this._breakpoints = new _Breakpoints.Breakpoints(breakpoints);\n    this._interactions = new _Interactions.Interactions(interactions || {});\n  }\n\n  _createClass(MediaQueries, [{\n    key: \"shouldRenderMediaQuery\",\n    value: function shouldRenderMediaQuery(mediaQueryProps, onlyMatch) {\n      var interaction = mediaQueryProps.interaction,\n          breakpointProps = _objectWithoutProperties(mediaQueryProps, [\"interaction\"]);\n\n      if (interaction) {\n        return this._interactions.shouldRenderMediaQuery(interaction, onlyMatch);\n      } // Remove any interaction possibilities from the list.\n\n\n      var onlyMatchBreakpoints = (0, _Utils.intersection)(onlyMatch, this._breakpoints.sortedBreakpoints);\n      return this._breakpoints.shouldRenderMediaQuery(breakpointProps, onlyMatchBreakpoints);\n    }\n  }, {\n    key: \"breakpoints\",\n    get: function get() {\n      return this._breakpoints;\n    }\n  }, {\n    key: \"mediaQueryTypes\",\n    get: function get() {\n      return _toConsumableArray(this._breakpoints.sortedBreakpoints).concat(_toConsumableArray(this._interactions.interactions));\n    }\n  }, {\n    key: \"dynamicResponsiveMediaQueries\",\n    get: function get() {\n      return _objectSpread({}, this._breakpoints.dynamicResponsiveMediaQueries, this._interactions.dynamicResponsiveMediaQueries);\n    }\n  }]);\n\n  return MediaQueries;\n}();\n\nexports.MediaQueries = MediaQueries;","map":{"version":3,"sources":["../src/MediaQueries.ts"],"names":["MediaQueries","Breakpoints","Interactions","interactions","mediaQueryProps","onlyMatch","interaction","breakpointProps","onlyMatchBreakpoints"],"mappings":";;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;;IAKaA,Y;;;gCACQ;AACjB,aAAA,kBAAA,CAAWC,YAAAA,CAAAA,WAAAA,CAAX,SAAWA,EAAX,CAAA,CAAA,MAAA,CAAA,kBAAA,CAAuCC,aAAAA,CAAAA,YAAAA,CAAvC,SAAuCA,EAAvC,CAAA,CAAA;AACD;;;AAKD,WAAA,YAAA,CAAA,WAAA,EAAA,YAAA,EAGE;AAAA,QAAA,KAAA,GAAA,IAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EASe,UAAA,cAAA,EAA6C;AAC5D,aAAO,CACL;AADK,+CAAA,EAAA,MAAA,CAAA,kBAAA,CAGF,KAAI,CAAJ,YAAA,CAAA,UAAA,CAHE,cAGF,CAHE,CAAA,EAAA,kBAAA,CAIF,KAAI,CAAJ,aAAA,CAJE,UAIF,EAJE,CAAA,EAAA,IAAA,CAAP,IAAO,CAAP;AAVA,KAAA,CAAA;;AACA,SAAA,YAAA,GAAoB,IAAID,YAAAA,CAAJ,WAAA,CAApB,WAAoB,CAApB;AACA,SAAA,aAAA,GAAqB,IAAIC,aAAAA,CAAJ,YAAA,CAAiBC,YAAY,IAAlD,EAAqB,CAArB;AACD;;;;2CA8BCC,e,EACAC,S,EACS;AAAA,UACDC,WADC,GACmCF,eADnC,CAAA,WAAA;AAAA,UACeG,eADf,GAAA,wBAAA,CAAA,eAAA,EAAA,CAAA,aAAA,CAAA,CAAA;;AAET,UAAA,WAAA,EAAiB;AACf,eAAO,KAAA,aAAA,CAAA,sBAAA,CAAA,WAAA,EAAP,SAAO,CAAP;AAHO,OAAA,CAKT;;;AACA,UAAMC,oBAAoB,GAAG,CAAA,GAAA,MAAA,CAAA,YAAA,EAAA,SAAA,EAE3B,KAAA,YAAA,CAFF,iBAA6B,CAA7B;AAIA,aAAO,KAAA,YAAA,CAAA,sBAAA,CAAA,eAAA,EAAP,oBAAO,CAAP;AAID;;;wBA5CwB;AACvB,aAAO,KAAP,YAAA;AACD;;;wBAW4B;AAC3B,aAAA,kBAAA,CACK,KAAA,YAAA,CADL,iBAAA,CAAA,CAAA,MAAA,CAAA,kBAAA,CAEK,KAAA,aAAA,CAFL,YAAA,CAAA,CAAA;AAID;;;wBAE0C;AACzC,aAAA,aAAA,CAAA,EAAA,EACK,KAAA,YAAA,CADL,6BAAA,EAEK,KAAA,aAAA,CAFL,6BAAA,CAAA;AAID","sourcesContent":["import { Breakpoints, BreakpointConstraint } from \"./Breakpoints\"\nimport { Interactions } from \"./Interactions\"\nimport { intersection } from \"./Utils\"\nimport { MediaBreakpointProps } from \"./Media\"\n\n/**\n * Encapsulates all interaction data (and breakpoint data in the superclass)\n * needed by the Media component. The data is generated on initialization so no\n * further runtime work is necessary.\n */\nexport class MediaQueries<B extends string> {\n  static validKeys() {\n    return [...Breakpoints.validKeys(), ...Interactions.validKeys()]\n  }\n\n  private _breakpoints: Breakpoints<B>\n  private _interactions: Interactions\n\n  constructor(\n    breakpoints: { [key: string]: number },\n    interactions: { [name: string]: string }\n  ) {\n    this._breakpoints = new Breakpoints(breakpoints)\n    this._interactions = new Interactions(interactions || {})\n  }\n\n  public get breakpoints() {\n    return this._breakpoints\n  }\n\n  public toStyle = (breakpointKeys?: BreakpointConstraint[]) => {\n    return [\n      // Don’t add any size to the layout\n      \".fresnel-container{margin:0;padding:0;}\",\n      ...this._breakpoints.toRuleSets(breakpointKeys),\n      ...this._interactions.toRuleSets(),\n    ].join(\"\\n\")\n  }\n\n  public get mediaQueryTypes() {\n    return [\n      ...this._breakpoints.sortedBreakpoints,\n      ...this._interactions.interactions,\n    ]\n  }\n\n  public get dynamicResponsiveMediaQueries() {\n    return {\n      ...this._breakpoints.dynamicResponsiveMediaQueries,\n      ...this._interactions.dynamicResponsiveMediaQueries,\n    }\n  }\n\n  public shouldRenderMediaQuery(\n    mediaQueryProps: { interaction?: string } & MediaBreakpointProps,\n    onlyMatch: string[]\n  ): boolean {\n    const { interaction, ...breakpointProps } = mediaQueryProps\n    if (interaction) {\n      return this._interactions.shouldRenderMediaQuery(interaction, onlyMatch)\n    }\n    // Remove any interaction possibilities from the list.\n    const onlyMatchBreakpoints = intersection(\n      onlyMatch,\n      this._breakpoints.sortedBreakpoints\n    )\n    return this._breakpoints.shouldRenderMediaQuery(\n      breakpointProps,\n      onlyMatchBreakpoints\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}