{"ast":null,"code":"import React, { useState } from 'react';\nimport { useFocusWithin, useFocusVisible } from '@react-aria/interactions';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { classNames } from '../../../../libs/class-names.js';\nimport { useStyles } from '../../../../hooks/use-styles.js';\nimport { FlexContainer } from '../../flexbox/flexbox.js';\nimport { useFade, useScaleIn } from '../../../../hooks/transitions.js';\nimport modules_df404821 from './tab-list.less.js';\n\nconst TabList = props => {\n  const {\n    label,\n    orientation,\n    indicatorAttributes,\n    useAnimation,\n    children\n  } = props;\n  const [isFocused, setFocus] = useState(false);\n  const {\n    focusWithinProps\n  } = useFocusWithin({\n    onFocusWithinChange: setFocus\n  });\n  const {\n    isFocusVisible\n  } = useFocusVisible();\n  const getFadeProps = useFade();\n  const getScaleProps = useScaleIn();\n  const focusRingAnimationProps = orientation === 'vertical' ? getScaleProps(1.1) : getFadeProps();\n  const horizontalTabStyle = useStyles({\n    width: `${indicatorAttributes.width}px`,\n    left: `${indicatorAttributes.offsetLeft}px`\n  });\n  const verticalTabStyle = useStyles({\n    height: `${indicatorAttributes.height}px`,\n    top: `${indicatorAttributes.offsetTop}px`\n  });\n  const verticalFocusRingStyle = useStyles({\n    height: `calc(${verticalTabStyle.height} + 4px)`,\n    top: `calc(${verticalTabStyle.top} - 4px)`\n  });\n  return React.createElement(FlexContainer, Object.assign({\n    inline: true,\n    className: classNames([modules_df404821.TabList, modules_df404821[orientation]]),\n    direction: orientation === 'vertical' ? 'column' : 'row',\n    alignItems: orientation === 'vertical' ? undefined : 'center',\n    justifyContent: orientation === 'vertical' ? 'center' : undefined,\n    role: \"tablist\",\n    \"aria-label\": label\n  }, focusWithinProps), React.createElement(AnimatePresence, null, isFocused && isFocusVisible && React.createElement(motion.span, Object.assign({\n    \"aria-hidden\": \"true\",\n    className: modules_df404821.focusRing\n  }, focusRingAnimationProps, {\n    transition: {\n      duration: 0.3\n    },\n    style: orientation === 'vertical' ? verticalFocusRingStyle : undefined\n  }))), React.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    className: classNames([modules_df404821.selectedTabIndicator, useAnimation && modules_df404821.withAnimation]),\n    style: orientation === 'vertical' ? verticalTabStyle : horizontalTabStyle\n  }), children);\n};\n\nexport { TabList };","map":{"version":3,"sources":["../../../../../../src/components/layout/tabs/tab-list/tab-list.tsx"],"names":["styles"],"mappings":";;;;;;;;;MAiBa,OAAO,GAA4B,KAAD,IAAM;AACnD,QAAM;AAAE,IAAA,KAAF;AAAS,IAAA,WAAT;AAAsB,IAAA,mBAAtB;AAA2C,IAAA,YAA3C;AAAyD,IAAA;AAAzD,MAAsE,KAA5E;AAEA,QAAM,CAAC,SAAD,EAAY,QAAZ,IAAwB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAE,IAAA;AAAF,MAAuB,cAAc,CAAC;AAAE,IAAA,mBAAmB,EAAE;AAAvB,GAAD,CAA3C;AACA,QAAM;AAAE,IAAA;AAAF,MAAqB,eAAe,EAA1C;AACA,QAAM,YAAY,GAAG,OAAO,EAA5B;AACA,QAAM,aAAa,GAAG,UAAU,EAAhC;AACA,QAAM,uBAAuB,GAAG,WAAW,KAAK,UAAhB,GAA6B,aAAa,CAAC,GAAD,CAA1C,GAAkD,YAAY,EAA9F;AAEA,QAAM,kBAAkB,GAAG,SAAS,CAAC;AACnC,IAAA,KAAK,EAAE,GAAG,mBAAmB,CAAC,KAAK,IADA;AAEnC,IAAA,IAAI,EAAE,GAAG,mBAAmB,CAAC,UAAU;AAFJ,GAAD,CAApC;AAKA,QAAM,gBAAgB,GAAG,SAAS,CAAC;AACjC,IAAA,MAAM,EAAE,GAAG,mBAAmB,CAAC,MAAM,IADJ;AAEjC,IAAA,GAAG,EAAE,GAAG,mBAAmB,CAAC,SAAS;AAFJ,GAAD,CAAlC;AAKA,QAAM,sBAAsB,GAAG,SAAS,CAAC;AACvC,IAAA,MAAM,EAAE,QAAQ,gBAAgB,CAAC,MAAM,SADA;AAEvC,IAAA,GAAG,EAAE,QAAQ,gBAAgB,CAAC,GAAG;AAFM,GAAD,CAAxC;AAKA,SACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,MAAA,CAAA,MAAA,CAAA;AACZ,IAAA,MAAM,EAAA,IADM;AAEZ,IAAA,SAAS,EAAE,UAAU,CAAC,CAACA,gBAAM,CAAC,OAAR,EAAiBA,gBAAM,CAAC,WAAD,CAAvB,CAAD,CAFT;AAGZ,IAAA,SAAS,EAAE,WAAW,KAAK,UAAhB,GAA6B,QAA7B,GAAwC,KAHvC;AAIZ,IAAA,UAAU,EAAE,WAAW,KAAK,UAAhB,GAA6B,SAA7B,GAAyC,QAJzC;AAKZ,IAAA,cAAc,EAAE,WAAW,KAAK,UAAhB,GAA6B,QAA7B,GAAwC,SAL5C;AAMZ,IAAA,IAAI,EAAC,SANO;AAME,kBACF;AAPA,GAAA,EAQR,gBARQ,CAAd,EAUE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EACG,SAAS,IAAI,cAAb,IACC,KAAA,CAAA,aAAA,CAAC,MAAM,CAAC,IAAR,EAAY,MAAA,CAAA,MAAA,CAAA;AAAA,mBACE,MADF;AAEV,IAAA,SAAS,EAAEA,gBAAM,CAAC;AAFR,GAAA,EAGN,uBAHM,EAGiB;AAC3B,IAAA,UAAU,EAAE;AAAE,MAAA,QAAQ,EAAE;AAAZ,KADe;AAE3B,IAAA,KAAK,EAAE,WAAW,KAAK,UAAhB,GAA6B,sBAA7B,GAAsD;AAFlC,GAHjB,CAAZ,CAFJ,CAVF,EAsBE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAA,mBACc,MADd;AAEE,IAAA,SAAS,EAAE,UAAU,CAAC,CAACA,gBAAM,CAAC,oBAAR,EAA8B,YAAY,IAAIA,gBAAM,CAAC,aAArD,CAAD,CAFvB;AAGE,IAAA,KAAK,EAAE,WAAW,KAAK,UAAhB,GAA6B,gBAA7B,GAAgD;AAHzD,GAAA,CAtBF,EA2BG,QA3BH,CADF;AA+BF,C","sourcesContent":["import { useFocusVisible, useFocusWithin } from '@react-aria/interactions';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useFade, useScaleIn } from '../../../../hooks/transitions';\nimport { useStyles } from '../../../../hooks/use-styles';\nimport { classNames } from '../../../../libs/class-names';\nimport { FlexContainer } from '../../flexbox/flexbox';\n\nimport styles from './tab-list.less';\n\ninterface TabListProps {\n  label: string;\n  orientation: 'horizontal' | 'vertical';\n  indicatorAttributes: { width: number; height: number; offsetLeft: number; offsetTop: number };\n  useAnimation: boolean;\n}\n\nexport const TabList: React.FC<TabListProps> = (props) => {\n  const { label, orientation, indicatorAttributes, useAnimation, children } = props;\n\n  const [isFocused, setFocus] = useState(false);\n  const { focusWithinProps } = useFocusWithin({ onFocusWithinChange: setFocus });\n  const { isFocusVisible } = useFocusVisible();\n  const getFadeProps = useFade();\n  const getScaleProps = useScaleIn();\n  const focusRingAnimationProps = orientation === 'vertical' ? getScaleProps(1.1) : getFadeProps();\n\n  const horizontalTabStyle = useStyles({\n    width: `${indicatorAttributes.width}px`,\n    left: `${indicatorAttributes.offsetLeft}px`,\n  });\n\n  const verticalTabStyle = useStyles({\n    height: `${indicatorAttributes.height}px`,\n    top: `${indicatorAttributes.offsetTop}px`,\n  });\n\n  const verticalFocusRingStyle = useStyles({\n    height: `calc(${verticalTabStyle.height} + 4px)`,\n    top: `calc(${verticalTabStyle.top} - 4px)`,\n  });\n\n  return (\n    <FlexContainer\n      inline\n      className={classNames([styles.TabList, styles[orientation]])}\n      direction={orientation === 'vertical' ? 'column' : 'row'}\n      alignItems={orientation === 'vertical' ? undefined : 'center'}\n      justifyContent={orientation === 'vertical' ? 'center' : undefined}\n      role=\"tablist\"\n      aria-label={label}\n      {...focusWithinProps}\n    >\n      <AnimatePresence>\n        {isFocused && isFocusVisible && (\n          <motion.span\n            aria-hidden=\"true\"\n            className={styles.focusRing}\n            {...focusRingAnimationProps}\n            transition={{ duration: 0.3 }}\n            style={orientation === 'vertical' ? verticalFocusRingStyle : undefined}\n          />\n        )}\n      </AnimatePresence>\n\n      <div\n        aria-hidden=\"true\"\n        className={classNames([styles.selectedTabIndicator, useAnimation && styles.withAnimation])}\n        style={orientation === 'vertical' ? verticalTabStyle : horizontalTabStyle}\n      />\n      {children}\n    </FlexContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}