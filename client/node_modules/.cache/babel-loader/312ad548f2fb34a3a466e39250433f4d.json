{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { MagicOutgoingWindowMessage, MagicIncomingWindowMessage } from '@magic-sdk/types';\nimport { createMalformedResponseError, MagicRPCError } from '../core/sdk-exceptions';\nimport { standardizeJsonRpcRequestPayload } from '../core/json-rpc';\nimport { createPromiEvent } from '../util/promise-tools';\n\nvar BaseModule =\n/** @class */\nfunction () {\n  function BaseModule(sdk) {\n    this.sdk = sdk;\n  }\n\n  Object.defineProperty(BaseModule.prototype, \"transport\", {\n    /**\n     * The `PayloadTransport` for the SDK instance registered to this module.\n     */\n    get: function () {\n      return this.sdk.transport;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseModule.prototype, \"overlay\", {\n    /**\n     * The `ViewController` for the SDK instance registered to this module.\n     */\n    get: function () {\n      return this.sdk.overlay;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Emits promisified requests to the Magic `<iframe>` context.\n   */\n\n  BaseModule.prototype.request = function (payload) {\n    var responsePromise = this.transport.post(this.overlay, MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, standardizeJsonRpcRequestPayload(payload)); // PromiEvent-ify the response.\n\n    var promiEvent = createPromiEvent(function (resolve, reject) {\n      responsePromise.then(function (res) {\n        cleanupEvents();\n        if (res.hasError) reject(new MagicRPCError(res.payload.error));else if (res.hasResult) resolve(res.payload.result);else throw createMalformedResponseError();\n      }).catch(function (err) {\n        cleanupEvents();\n        reject(err);\n      });\n    }); // Listen for events from the `<iframe>` associated with the current payload\n    // and emit those to `PromiEvent` subscribers.\n\n    var cleanupEvents = this.transport.on(MagicIncomingWindowMessage.MAGIC_HANDLE_EVENT, function (evt) {\n      var _a;\n\n      var response = evt.data.response;\n\n      if (response.id === payload.id && ((_a = response.result) === null || _a === void 0 ? void 0 : _a.event)) {\n        var _b = response.result,\n            event_1 = _b.event,\n            _c = _b.params,\n            params = _c === void 0 ? [] : _c;\n        promiEvent.emit.apply(promiEvent, __spread([event_1], params));\n      }\n    });\n    return promiEvent;\n  };\n\n  return BaseModule;\n}();\n\nexport { BaseModule };","map":{"version":3,"sources":["../../../src/modules/base-module.ts"],"names":[],"mappings":";AAAA,SAAgC,0BAAhC,EAA4D,0BAA5D,QAA8F,kBAA9F;AACA,SAAS,4BAAT,EAAuC,aAAvC,QAA4D,wBAA5D;AAGA,SAAS,gCAAT,QAAiD,kBAAjD;AACA,SAAS,gBAAT,QAAiC,uBAAjC;;AAIA,IAAA,UAAA;AAAA;AAAA,YAAA;AACE,WAAA,UAAA,CAAsB,GAAtB,EAAkC;AAAZ,SAAA,GAAA,GAAA,GAAA;AAAgB;;AAKtC,EAAA,MAAA,CAAA,cAAA,CAAc,UAAA,CAAA,SAAd,EAAc,WAAd,EAAuB;AAHvB;;AAEG;SACH,YAAA;AACE,aAAQ,KAAK,GAAL,CAAiB,SAAzB;AACD,KAFsB;oBAAA;;AAAA,GAAvB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAc,UAAA,CAAA,SAAd,EAAc,SAAd,EAAqB;AAHrB;;AAEG;SACH,YAAA;AACE,aAAQ,KAAK,GAAL,CAAiB,OAAzB;AACD,KAFoB;oBAAA;;AAAA,GAArB;AAIA;;AAEG;;AACO,EAAA,UAAA,CAAA,SAAA,CAAA,OAAA,GAAV,UAA4E,OAA5E,EAAmH;AACjH,QAAM,eAAe,GAAG,KAAK,SAAL,CAAe,IAAf,CACtB,KAAK,OADiB,EAEtB,0BAA0B,CAAC,oBAFL,EAGtB,gCAAgC,CAAC,OAAD,CAHV,CAAxB,CADiH,CAOjH;;AACA,QAAM,UAAU,GAAG,gBAAgB,CAAqB,UAAC,OAAD,EAAU,MAAV,EAAgB;AACtE,MAAA,eAAe,CACZ,IADH,CACQ,UAAC,GAAD,EAAI;AACR,QAAA,aAAa;AACb,YAAI,GAAG,CAAC,QAAR,EAAkB,MAAM,CAAC,IAAI,aAAJ,CAAkB,GAAG,CAAC,OAAJ,CAAY,KAA9B,CAAD,CAAN,CAAlB,KACK,IAAI,GAAG,CAAC,SAAR,EAAmB,OAAO,CAAC,GAAG,CAAC,OAAJ,CAAY,MAAb,CAAP,CAAnB,KACA,MAAM,4BAA4B,EAAlC;AACN,OANH,EAOG,KAPH,CAOS,UAAC,GAAD,EAAI;AACT,QAAA,aAAa;AACb,QAAA,MAAM,CAAC,GAAD,CAAN;AACD,OAVH;AAWD,KAZkC,CAAnC,CARiH,CAsBjH;AACA;;AACA,QAAM,aAAa,GAAG,KAAK,SAAL,CAAe,EAAf,CAAkB,0BAA0B,CAAC,kBAA7C,EAAiE,UAAC,GAAD,EAAI;;;AACjF,UAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,QAAA;;AACR,UAAI,QAAQ,CAAC,EAAT,KAAgB,OAAO,CAAC,EAAxB,KAA0B,CAAA,EAAA,GAAI,QAAQ,CAAC,MAAb,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAE,KAA/C,CAAJ,EAA0D;AAClD,YAAA,EAAA,GAAA,QAAA,CAAA,MAAA;AAAA,YAAE,OAAA,GAAA,EAAA,CAAA,KAAF;AAAA,YAAS,EAAA,GAAA,EAAA,CAAA,MAAT;AAAA,YAAS,MAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAT;AACN,QAAA,UAAU,CAAC,IAAX,CAAe,KAAf,CAAA,UAAA,EAAU,QAAA,CAAA,CAAM,OAAN,CAAA,EAAgB,MAAhB,CAAV;AACD;AACF,KANqB,CAAtB;AAQA,WAAO,UAAP;AACD,GAjCS;;AAkCZ,SAAA,UAAA;AAAC,CAtDD,EAAA","sourceRoot":"","sourcesContent":["import { __read, __spread } from \"tslib\";\nimport { MagicOutgoingWindowMessage, MagicIncomingWindowMessage } from '@magic-sdk/types';\nimport { createMalformedResponseError, MagicRPCError } from '../core/sdk-exceptions';\nimport { standardizeJsonRpcRequestPayload } from '../core/json-rpc';\nimport { createPromiEvent } from '../util/promise-tools';\nvar BaseModule = /** @class */ (function () {\n    function BaseModule(sdk) {\n        this.sdk = sdk;\n    }\n    Object.defineProperty(BaseModule.prototype, \"transport\", {\n        /**\n         * The `PayloadTransport` for the SDK instance registered to this module.\n         */\n        get: function () {\n            return this.sdk.transport;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseModule.prototype, \"overlay\", {\n        /**\n         * The `ViewController` for the SDK instance registered to this module.\n         */\n        get: function () {\n            return this.sdk.overlay;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Emits promisified requests to the Magic `<iframe>` context.\n     */\n    BaseModule.prototype.request = function (payload) {\n        var responsePromise = this.transport.post(this.overlay, MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, standardizeJsonRpcRequestPayload(payload));\n        // PromiEvent-ify the response.\n        var promiEvent = createPromiEvent(function (resolve, reject) {\n            responsePromise\n                .then(function (res) {\n                cleanupEvents();\n                if (res.hasError)\n                    reject(new MagicRPCError(res.payload.error));\n                else if (res.hasResult)\n                    resolve(res.payload.result);\n                else\n                    throw createMalformedResponseError();\n            })\n                .catch(function (err) {\n                cleanupEvents();\n                reject(err);\n            });\n        });\n        // Listen for events from the `<iframe>` associated with the current payload\n        // and emit those to `PromiEvent` subscribers.\n        var cleanupEvents = this.transport.on(MagicIncomingWindowMessage.MAGIC_HANDLE_EVENT, function (evt) {\n            var _a;\n            var response = evt.data.response;\n            if (response.id === payload.id && ((_a = response.result) === null || _a === void 0 ? void 0 : _a.event)) {\n                var _b = response.result, event_1 = _b.event, _c = _b.params, params = _c === void 0 ? [] : _c;\n                promiEvent.emit.apply(promiEvent, __spread([event_1], params));\n            }\n        });\n        return promiEvent;\n    };\n    return BaseModule;\n}());\nexport { BaseModule };\n//# sourceMappingURL=base-module.js.map"]},"metadata":{},"sourceType":"module"}