{"ast":null,"code":"import React, { useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect.js';\nimport ReactDOM from 'react-dom';\nlet portalID = 0;\n\nconst EphemeralPortal = ({\n  children\n}) => {\n  const [portalContext, setPortalContext] = useState(null); // Setup/teardown the tooltip context\n\n  useIsomorphicLayoutEffect(() => {\n    const container = document.createElement('div');\n    container.dataset.mgEphemeralPortal = String(++portalID);\n    document.body.appendChild(container);\n    setPortalContext(container);\n    return () => container.remove();\n  }, []);\n  return portalContext ? React.createElement(React.Fragment, null, ReactDOM.createPortal(children, portalContext)) : null;\n};\n\nexport { EphemeralPortal };","map":{"version":3,"sources":["../../../../src/components/layout/ephemeral-portal.tsx"],"names":[],"mappings":";;;AAIA,IAAI,QAAQ,GAAG,CAAf;;MAEa,eAAe,GAAa,CAAC;AAAE,EAAA;AAAF,CAAD,KAAa;AACpD,QAAM,CAAC,aAAD,EAAgB,gBAAhB,IAAoC,QAAQ,CAAwB,IAAxB,CAAlD,CADoD,C;;AAIpD,EAAA,yBAAyB,CAAC,MAAA;AACxB,UAAM,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAlB;AACA,IAAA,SAAS,CAAC,OAAV,CAAkB,iBAAlB,GAAsC,MAAM,CAAC,EAAE,QAAH,CAA5C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,SAA1B;AACA,IAAA,gBAAgB,CAAC,SAAD,CAAhB;AACA,WAAO,MAAM,SAAS,CAAC,MAAV,EAAb;AACD,GANwB,EAMtB,EANsB,CAAzB;AAQA,SAAO,aAAa,GAAG,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,QAAQ,CAAC,YAAT,CAAsB,QAAtB,EAAgC,aAAhC,CAAH,CAAH,GAA2D,IAA/E;AACF,C","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect';\n\nlet portalID = 0;\n\nexport const EphemeralPortal: React.FC = ({ children }) => {\n  const [portalContext, setPortalContext] = useState<HTMLDivElement | null>(null);\n\n  // Setup/teardown the tooltip context\n  useIsomorphicLayoutEffect(() => {\n    const container = document.createElement('div');\n    container.dataset.mgEphemeralPortal = String(++portalID);\n    document.body.appendChild(container);\n    setPortalContext(container);\n    return () => container.remove();\n  }, []);\n\n  return portalContext ? <>{ReactDOM.createPortal(children, portalContext)}</> : null;\n};\n"]},"metadata":{},"sourceType":"module"}