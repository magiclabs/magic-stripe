{"ast":null,"code":"import { __awaiter, __rest } from '../../_virtual/_tslib.js';\nimport React, { useRef, useState, useCallback, useEffect } from 'react';\nimport { forwardRefWrapper } from '../../libs/forward-ref-wrapper.js';\nimport composeRefs from '@seznam/compose-react-refs';\nimport { watchResize } from 'watch-resize';\nimport { cssTimeToMilliseconds } from '../../libs/css-time-to-milliseconds.js';\n/**\r\n * This component is a container which automatically updates its `height` style\r\n * property based on the total size of its child nodes. This enables dynamic\r\n * transitional height behavior.\r\n */\n\nconst FlexibleDiv = /* @__PURE__ */forwardRefWrapper('FlexibleDiv', {\n  initialDelay: 0,\n  transition: true,\n  applyCSSVariables: {},\n  onResize: () => {},\n  style: {},\n  observerOnly: false,\n  autoWidth: false,\n  autoHeight: false\n}, (props, externalRef) => {\n  // --- Data\n  var _a, _b, _c, _d;\n\n  const contentElement = useRef();\n  const [height, setHeight] = useState('auto');\n  const [width, setWidth] = useState('auto');\n  const isMounted = useRef(false);\n  const isTransitioning = useRef(false);\n  const raf = useRef(null); // --- Utilities for handling `watch-resize` observer\n\n  /**\r\n   * Set the `containerElement` ref height based on the given element\r\n   * or `contentElement` ref as a fallback.\r\n   */\n\n  const setContainerElementDimensions = useCallback(domRect => {\n    let rect = domRect;\n\n    if (!rect) {\n      if (contentElement.current) rect = contentElement.current.getBoundingClientRect();else return;\n    }\n\n    if (!props.autoHeight) {\n      const nextHeight = Math.ceil(rect.height);\n      if (nextHeight !== height) setHeight(`${nextHeight}px`);\n    }\n\n    if (!props.autoWidth) {\n      const nextWidth = Math.ceil(rect.width);\n      if (nextWidth !== width) setWidth(`${nextWidth}px`);\n    }\n  }, [height, width]);\n  /**\r\n   * Build styles to transition height.\r\n   */\n\n  const buildTransitionStyles = useCallback((heightOverride, widthOverride) => {\n    if (props.transition) {\n      let transition = 'height 0.2s ease, width 0.2s ease';\n\n      if (typeof props.transition !== 'boolean') {\n        const {\n          duration,\n          timingFunction,\n          delay\n        } = props.transition;\n        transition = `height${duration ? `${duration} ` : ' 0.2s'}${timingFunction ? `${timingFunction} ` : ' ease'}${delay ? `${delay} ` : ' 0s'}`;\n        transition += `, width${duration ? `${duration} ` : ' 0.2s'}${timingFunction ? `${timingFunction} ` : ' ease'}${delay ? `${delay} ` : ' 0s'}`;\n      }\n\n      const resolvedHeightOverride = heightOverride ? `${Math.ceil(heightOverride)}px` : null;\n      const resolvedHeight = typeof height === 'string' ? height : `${Math.ceil(height)}px`;\n      const resolvedWidthOverride = widthOverride ? `${Math.ceil(widthOverride)}px` : null;\n      const resolvedWidth = typeof width === 'string' ? width : `${Math.ceil(width)}px`;\n      return {\n        transition,\n        height: props.autoHeight ? 'auto' : resolvedHeightOverride || resolvedHeight,\n        width: props.autoWidth ? 'auto' : resolvedWidthOverride || resolvedWidth,\n        willChange: 'height, width'\n      };\n    }\n\n    return {\n      transition: 'none',\n      height: 'auto',\n      width: 'auto',\n      willChange: 'unset'\n    };\n  }, [props.transition, height, width]);\n  /**\r\n   * Set CSS variables for the generated `transition` and `height` properties.\r\n   */\n\n  const applyCSSVariables = useCallback((heightOverride, widthOverride) => {\n    const {\n      element,\n      heightVar,\n      widthVar,\n      transitionVar\n    } = props.applyCSSVariables;\n    const transitionStyles = buildTransitionStyles(heightOverride, widthOverride);\n    const elementResolved = element || document.documentElement;\n    if (heightVar) elementResolved.style.setProperty(heightVar, props.autoHeight ? 'auto' : transitionStyles.height);\n    if (widthVar) elementResolved.style.setProperty(widthVar, props.autoWidth ? 'auto' : transitionStyles.width);\n    if (transitionVar) elementResolved.style.setProperty(transitionVar, transitionStyles.transition);\n  }, [(_a = props.applyCSSVariables) === null || _a === void 0 ? void 0 : _a.element, (_b = props.applyCSSVariables) === null || _b === void 0 ? void 0 : _b.heightVar, (_c = props.applyCSSVariables) === null || _c === void 0 ? void 0 : _c.widthVar, (_d = props.applyCSSVariables) === null || _d === void 0 ? void 0 : _d.transitionVar]);\n  /**\r\n   * Create the resize stream and start observing.\r\n   */\n\n  const setupResizeObservable = useCallback(() => __awaiter(void 0, void 0, void 0, function* () {\n    /*\r\n      Under the hood, `watchResize` is creating a nested browsing\r\n      context inside a DOM `<object>`. This nested context has a\r\n      `window` object that provides the stream of \"resize\" events.\r\n     */\n    const destroy = yield watchResize(contentElement.current, payload => {\n      var _a, _b;\n\n      isTransitioning.current = true;\n      setTimeout(() => {\n        if (isMounted.current) isTransitioning.current = false;\n      }, cssTimeToMilliseconds((_a = props.transition) === null || _a === void 0 ? void 0 : _a.duration) + 100);\n      const rect = payload.element.getBoundingClientRect();\n      (_b = props.onResize) === null || _b === void 0 ? void 0 : _b.call(props, Object.assign(Object.assign({}, payload), {\n        transitionStyles: buildTransitionStyles(rect.height, rect.width)\n      }));\n      applyCSSVariables(rect.height, rect.width);\n      if (!props.observerOnly) setContainerElementDimensions(rect);\n    });\n    return destroy;\n  }), [setContainerElementDimensions, props.observerOnly, buildTransitionStyles, applyCSSVariables, props.transition]);\n  /**\r\n   * Stop observing the resize stream and destroy the subscription (the stream\r\n   * itself will be garbage collected).\r\n   */\n\n  const teardownResizeObservable = useCallback(destroy => {\n    if (destroy) destroy();\n  }, []); // --- React lifecycle\n  // Setup/teardown the resize observable on component mount/unmount\n\n  useEffect(() => {\n    let destroyResizeListener;\n    let timeout;\n    isMounted.current = true;\n\n    (() => __awaiter(void 0, void 0, void 0, function* () {\n      if (props.initialDelay) {\n        timeout = setTimeout(() => __awaiter(void 0, void 0, void 0, function* () {\n          if (!props.observerOnly) setContainerElementDimensions();\n          destroyResizeListener = yield setupResizeObservable();\n        }), props.initialDelay);\n      } else {\n        setContainerElementDimensions();\n        destroyResizeListener = yield setupResizeObservable();\n      }\n    }))();\n\n    return () => {\n      isMounted.current = false;\n      if (timeout) clearTimeout(timeout);\n      teardownResizeObservable(destroyResizeListener);\n    };\n  }, []);\n  useEffect(() => {\n    if (isTransitioning.current && props.onAnimationFrame) {\n      const tick = () => {\n        raf.current = requestAnimationFrame((...args) => {\n          props.onAnimationFrame(...args);\n          if (isTransitioning.current) tick();\n        });\n      };\n\n      tick();\n    } else {\n      return () => {\n        if (raf.current) cancelAnimationFrame(raf.current);\n      };\n    }\n\n    return undefined;\n  }); // --- Rendering\n\n  const otherProps = __rest(props, [\"children\", \"style\", \"initialDelay\", \"transition\", \"onResize\", \"observerOnly\", \"applyCSSVariables\", \"onAnimationFrame\", \"autoWidth\", \"autoHeight\"]);\n\n  return props.observerOnly ? React.createElement(\"div\", Object.assign({\n    style: props.style\n  }, otherProps, {\n    ref: composeRefs(contentElement, externalRef)\n  }), props.children) : React.createElement(\"div\", Object.assign({\n    style: Object.assign(Object.assign({\n      position: 'relative'\n    }, props.style), buildTransitionStyles())\n  }, otherProps), React.createElement(\"div\", {\n    ref: composeRefs(contentElement, externalRef),\n    style: {\n      position: width === 'auto' ? undefined : 'absolute'\n    }\n  }, props.children));\n});\nexport { FlexibleDiv };","map":{"version":3,"sources":["../../../../src/components/layout/flexible-div.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\nimport { ResizePayload, watchResize } from 'watch-resize';\nimport composeRefs from '@seznam/compose-react-refs';\nimport { cssTimeToMilliseconds } from '../../libs/css-time-to-milliseconds';\nimport { forwardRefWrapper } from '../../libs/forward-ref-wrapper';\n\ninterface TransitionStyles {\n  transition: string;\n  height: string;\n  width: string;\n  willChange: string;\n}\n\ninterface TransitionConfig {\n  duration?: string;\n  timingFunction?: string;\n  delay?: string;\n}\n\ninterface FlexibleDivProps extends React.HTMLAttributes<HTMLDivElement> {\n  initialDelay?: number;\n  transition?: boolean | TransitionConfig;\n  applyCSSVariables?: {\n    element?: HTMLElement;\n    transitionVar?: string;\n    heightVar?: string;\n    widthVar?: string;\n  };\n  onResize?: (\n    payload: Omit<ResizePayload<HTMLElement>, 'destroy'> & {\n      transitionStyles: TransitionStyles;\n    },\n  ) => void;\n  onAnimationFrame?: FrameRequestCallback;\n  observerOnly?: boolean;\n  autoWidth?: boolean;\n  autoHeight?: boolean;\n}\n\n/**\n * This component is a container which automatically updates its `height` style\n * property based on the total size of its child nodes. This enables dynamic\n * transitional height behavior.\n */\nexport const FlexibleDiv = /* @__PURE__ */ forwardRefWrapper<HTMLDivElement, FlexibleDivProps>(\n  'FlexibleDiv',\n\n  {\n    initialDelay: 0,\n    transition: true,\n    applyCSSVariables: {},\n    onResize: () => {},\n    style: {},\n    observerOnly: false,\n    autoWidth: false,\n    autoHeight: false,\n  },\n\n  (props, externalRef) => {\n    // --- Data\n\n    const contentElement = useRef<HTMLElement>();\n    const [height, setHeight] = useState<string | number>('auto');\n    const [width, setWidth] = useState<string | number>('auto');\n\n    const isMounted = useRef(false);\n    const isTransitioning = useRef(false);\n    const raf = useRef<number | null>(null);\n\n    // --- Utilities for handling `watch-resize` observer\n\n    /**\n     * Set the `containerElement` ref height based on the given element\n     * or `contentElement` ref as a fallback.\n     */\n    const setContainerElementDimensions = useCallback(\n      (domRect?: DOMRect) => {\n        let rect = domRect;\n        if (!rect) {\n          if (contentElement.current) rect = contentElement.current.getBoundingClientRect();\n          else return;\n        }\n\n        if (!props.autoHeight) {\n          const nextHeight = Math.ceil(rect.height);\n          if (nextHeight !== height) setHeight(`${nextHeight}px`);\n        }\n\n        if (!props.autoWidth) {\n          const nextWidth = Math.ceil(rect.width);\n          if (nextWidth !== width) setWidth(`${nextWidth}px`);\n        }\n      },\n      [height, width],\n    );\n\n    /**\n     * Build styles to transition height.\n     */\n    const buildTransitionStyles = useCallback(\n      (heightOverride?: number, widthOverride?: number): TransitionStyles => {\n        if (props.transition) {\n          let transition = 'height 0.2s ease, width 0.2s ease';\n\n          if (typeof props.transition !== 'boolean') {\n            const { duration, timingFunction, delay } = props.transition;\n\n            transition = `height${duration ? `${duration} ` : ' 0.2s'}${\n              timingFunction ? `${timingFunction} ` : ' ease'\n            }${delay ? `${delay} ` : ' 0s'}`;\n\n            transition += `, width${duration ? `${duration} ` : ' 0.2s'}${\n              timingFunction ? `${timingFunction} ` : ' ease'\n            }${delay ? `${delay} ` : ' 0s'}`;\n          }\n\n          const resolvedHeightOverride = heightOverride ? `${Math.ceil(heightOverride)}px` : null;\n          const resolvedHeight = typeof height === 'string' ? height : `${Math.ceil(height)}px`;\n\n          const resolvedWidthOverride = widthOverride ? `${Math.ceil(widthOverride)}px` : null;\n          const resolvedWidth = typeof width === 'string' ? width : `${Math.ceil(width)}px`;\n\n          return {\n            transition,\n            height: props.autoHeight ? 'auto' : resolvedHeightOverride || resolvedHeight,\n            width: props.autoWidth ? 'auto' : resolvedWidthOverride || resolvedWidth,\n            willChange: 'height, width',\n          };\n        }\n\n        return {\n          transition: 'none',\n          height: 'auto',\n          width: 'auto',\n          willChange: 'unset',\n        };\n      },\n      [props.transition, height, width],\n    );\n\n    /**\n     * Set CSS variables for the generated `transition` and `height` properties.\n     */\n    const applyCSSVariables = useCallback(\n      (heightOverride?: number, widthOverride?: number) => {\n        const { element, heightVar, widthVar, transitionVar } = props.applyCSSVariables!;\n        const transitionStyles = buildTransitionStyles(heightOverride, widthOverride);\n        const elementResolved = element || document.documentElement;\n\n        if (heightVar)\n          elementResolved.style.setProperty(heightVar, props.autoHeight ? 'auto' : transitionStyles.height);\n        if (widthVar) elementResolved.style.setProperty(widthVar, props.autoWidth ? 'auto' : transitionStyles.width);\n        if (transitionVar) elementResolved.style.setProperty(transitionVar, transitionStyles.transition);\n      },\n      [\n        props.applyCSSVariables?.element,\n        props.applyCSSVariables?.heightVar,\n        props.applyCSSVariables?.widthVar,\n        props.applyCSSVariables?.transitionVar,\n      ],\n    );\n\n    /**\n     * Create the resize stream and start observing.\n     */\n    const setupResizeObservable = useCallback(async (): Promise<() => void> => {\n      /*\n        Under the hood, `watchResize` is creating a nested browsing\n        context inside a DOM `<object>`. This nested context has a\n        `window` object that provides the stream of \"resize\" events.\n       */\n      const destroy = await watchResize(contentElement.current!, (payload) => {\n        isTransitioning.current = true;\n        setTimeout(() => {\n          if (isMounted.current) isTransitioning.current = false;\n        }, cssTimeToMilliseconds((props.transition as TransitionConfig)?.duration) + 100);\n\n        const rect = payload.element.getBoundingClientRect();\n        props.onResize?.({ ...payload, transitionStyles: buildTransitionStyles(rect.height, rect.width) });\n        applyCSSVariables(rect.height, rect.width);\n        if (!props.observerOnly) setContainerElementDimensions(rect);\n      });\n\n      return destroy;\n    }, [setContainerElementDimensions, props.observerOnly, buildTransitionStyles, applyCSSVariables, props.transition]);\n\n    /**\n     * Stop observing the resize stream and destroy the subscription (the stream\n     * itself will be garbage collected).\n     */\n    const teardownResizeObservable = useCallback((destroy?: () => void) => {\n      if (destroy) destroy();\n    }, []);\n\n    // --- React lifecycle\n\n    // Setup/teardown the resize observable on component mount/unmount\n    useEffect(() => {\n      let destroyResizeListener: () => void;\n      let timeout: any;\n      isMounted.current = true;\n\n      (async () => {\n        if (props.initialDelay) {\n          timeout = setTimeout(async () => {\n            if (!props.observerOnly) setContainerElementDimensions();\n            destroyResizeListener = await setupResizeObservable();\n          }, props.initialDelay);\n        } else {\n          setContainerElementDimensions();\n          destroyResizeListener = await setupResizeObservable();\n        }\n      })();\n\n      return () => {\n        isMounted.current = false;\n        if (timeout) clearTimeout(timeout);\n        teardownResizeObservable(destroyResizeListener);\n      };\n    }, []);\n\n    useEffect(() => {\n      if (isTransitioning.current && props.onAnimationFrame) {\n        const tick = () => {\n          raf.current = requestAnimationFrame((...args) => {\n            props.onAnimationFrame!(...args);\n            if (isTransitioning.current) tick();\n          });\n        };\n\n        tick();\n      } else {\n        return () => {\n          if (raf.current) cancelAnimationFrame(raf.current);\n        };\n      }\n\n      return undefined;\n    });\n\n    // --- Rendering\n\n    const {\n      children: _1, // unused\n      style: _2, // unused\n      initialDelay: _3, // unused\n      transition: _4, // unused\n      onResize: _5, // unused\n      observerOnly: _6, // unused\n      applyCSSVariables: _7, // unused\n      onAnimationFrame: _8, // unused\n      autoWidth: _9, // unused\n      autoHeight: _10, // unused\n      ...otherProps\n    } = props;\n\n    return props.observerOnly ? (\n      <div style={props.style} {...otherProps} ref={composeRefs<any>(contentElement, externalRef)}>\n        {props.children}\n      </div>\n    ) : (\n      <div\n        style={{\n          position: 'relative',\n          ...props.style,\n          ...buildTransitionStyles(),\n        }}\n        {...otherProps}\n      >\n        <div\n          ref={composeRefs<any>(contentElement, externalRef)}\n          style={{ position: width === 'auto' ? undefined : 'absolute' }}\n        >\n          {props.children}\n        </div>\n      </div>\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}