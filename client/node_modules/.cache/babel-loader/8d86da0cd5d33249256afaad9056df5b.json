{"ast":null,"code":"import { __rest } from '../../../_virtual/_tslib.js';\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useFocus } from '@react-aria/interactions';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { classNames } from '../../../libs/class-names.js';\nimport { mergeProps } from '../../../libs/merge-props.js';\nimport 'color';\nimport 'blueimp-md5';\nimport '@artsy/fresnel';\nimport { useTheme } from '../../theme/use-theme.js';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper.js';\nimport { Icon } from '../../icons/icon-base.js';\nimport { AsteriskBold } from '../../icons/monochrome/asterisk-bold.js';\nimport { Exclaim } from '../../icons/monochrome/exclaim.js';\nimport { FlexColumn, FlexRow } from '../../layout/flexbox/flexbox.js';\nimport { Outset } from '../../layout/outset/outset.js';\nimport 'usable-react';\nimport composeRefs from '@seznam/compose-react-refs';\nimport '../../theme/inverse-theme-semantics.js';\nimport '@react-aria/ssr';\nimport '../../theme/theme-provider.js';\nimport { useScale, useFade } from '../../../hooks/transitions.js';\nimport 'react-dom';\nimport 'watch-resize';\nimport modules_57a1d797 from './input.less.js';\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\nconst Input = /* @__PURE__ */forwardRefWrapper('Input', {\n  size: 'md'\n}, (props, externalRef) => {\n  const {\n    id,\n    required,\n    disabled,\n    label,\n    errorMessage,\n    validateOnBlur,\n    size,\n    prefix,\n    suffix\n  } = props,\n        otherProps = __rest(props, [\"id\", \"required\", \"disabled\", \"label\", \"errorMessage\", \"validateOnBlur\", \"size\", \"prefix\", \"suffix\"]);\n\n  const [hasError, setHasError] = useState(!!errorMessage);\n  useEffect(() => {\n    setHasError(!!errorMessage);\n  }, [errorMessage]);\n  const onBlur = useCallback(e => {\n    if (validateOnBlur) {\n      const valid = e.target.checkValidity();\n      setHasError(!valid || !!errorMessage);\n    }\n  }, [errorMessage]);\n  const [isFocused, onFocusChange] = useState(false);\n  const {\n    focusProps\n  } = useFocus({\n    isDisabled: disabled,\n    onBlur,\n    onFocusChange\n  });\n  const inputRef = useRef(null);\n  const focusOnInput = useCallback(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, []);\n  const getScaleProps = useScale();\n  const getFadeProps = useFade();\n  const theme = useTheme();\n  return React.createElement(FlexColumn, null, label && React.createElement(Outset, {\n    bottom: 8\n  }, React.createElement(\"label\", {\n    htmlFor: id,\n    className: classNames([modules_57a1d797.InputLabel, modules_57a1d797[`size_${size}`]])\n  }, React.createElement(FlexRow, {\n    alignItems: \"flex-end\"\n  }, React.createElement(Outset, {\n    right: 3,\n    trim: \"horizontal\"\n  }, React.createElement(\"span\", null, label), required && React.createElement(Icon, {\n    size: 10,\n    color: theme.hex.primary.base,\n    type: AsteriskBold\n  }))))), React.createElement(FlexRow, {\n    alignItems: \"center\",\n    onClick: focusOnInput,\n    className: classNames([modules_57a1d797.Input, modules_57a1d797[`size_${size}`], disabled && modules_57a1d797.disabled, isFocused && modules_57a1d797.focus, hasError && modules_57a1d797.hasError])\n  }, React.createElement(AnimatePresence, null, isFocused && React.createElement(motion.span, Object.assign({\n    \"aria-hidden\": \"true\",\n    className: modules_57a1d797.focusRing\n  }, getFadeProps(), {\n    transition: {\n      duration: 0.3\n    }\n  }))), React.createElement(AnimatePresence, {\n    initial: false,\n    exitBeforeEnter: true\n  }, prefix && React.createElement(motion.div, Object.assign({\n    className: modules_57a1d797.prefix\n  }, getScaleProps(0.7), {\n    key: 0\n  }), prefix)), React.createElement(\"input\", Object.assign({\n    id: id\n  }, mergeProps(focusProps, otherProps), {\n    ref: composeRefs(inputRef, externalRef)\n  })), React.createElement(AnimatePresence, {\n    initial: false,\n    exitBeforeEnter: true\n  }, suffix && !hasError && React.createElement(motion.div, Object.assign({\n    className: modules_57a1d797.suffix\n  }, getScaleProps(0.7), {\n    key: 0\n  }), suffix), hasError && React.createElement(motion.div, Object.assign({\n    className: modules_57a1d797.suffix\n  }, getScaleProps(0.7), {\n    key: 1\n  }), React.createElement(Icon, {\n    type: Exclaim,\n    color: theme.hex.error.base\n  })))), errorMessage && React.createElement(Outset, {\n    top: 8,\n    left: 7\n  }, React.createElement(\"span\", {\n    className: classNames([modules_57a1d797.InputErrorMessage, modules_57a1d797[`size_${size}`]])\n  }, errorMessage)));\n});\nexport { Input };","map":{"version":3,"sources":["../../../../../src/components/primitives/input/input.tsx"],"names":["styles","MonochromeIcons.AsteriskBold","MonochromeIcons.Exclaim"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { useFocus } from '@react-aria/interactions';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport composeRefs from '@seznam/compose-react-refs';\nimport { classNames } from '../../../libs/class-names';\nimport { mergeProps } from '../../../libs/merge-props';\nimport { FlexColumn, Outset, FlexRow } from '../../layout';\nimport { Icon, MonochromeIcons } from '../../icons';\nimport { useFade, useScale } from '../../../hooks/transitions';\nimport { useTheme } from '../../theme/use-theme';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper';\n\nimport styles from './input.less';\n\ninterface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'prefix'> {\n  disabled?: boolean;\n  label?: string;\n  errorMessage?: string;\n  validateOnBlur?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n  prefix?: JSX.Element;\n  suffix?: JSX.Element;\n}\n\nexport const Input = /* @__PURE__ */ forwardRefWrapper<HTMLInputElement, InputProps>(\n  'Input',\n\n  { size: 'md' },\n\n  (props, externalRef) => {\n    const { id, required, disabled, label, errorMessage, validateOnBlur, size, prefix, suffix, ...otherProps } = props;\n\n    const [hasError, setHasError] = useState(!!errorMessage);\n\n    useEffect(() => {\n      setHasError(!!errorMessage);\n    }, [errorMessage]);\n\n    const onBlur = useCallback<React.FocusEventHandler<HTMLInputElement>>(\n      (e) => {\n        if (validateOnBlur) {\n          const valid = e.target.checkValidity();\n          setHasError(!valid || !!errorMessage);\n        }\n      },\n      [errorMessage],\n    );\n\n    const [isFocused, onFocusChange] = useState(false);\n    const { focusProps } = useFocus({ isDisabled: disabled, onBlur, onFocusChange });\n    const inputRef = useRef<HTMLInputElement | null>(null);\n    const focusOnInput = useCallback(() => {\n      if (inputRef.current) inputRef.current.focus();\n    }, []);\n\n    const getScaleProps = useScale();\n    const getFadeProps = useFade();\n    const theme = useTheme();\n\n    return (\n      <FlexColumn>\n        {label && (\n          <Outset bottom={8}>\n            <label htmlFor={id} className={classNames([styles.InputLabel, styles[`size_${size}`]])}>\n              <FlexRow alignItems=\"flex-end\">\n                <Outset right={3} trim=\"horizontal\">\n                  <span>{label}</span>\n                  {required && <Icon size={10} color={theme.hex.primary.base} type={MonochromeIcons.AsteriskBold} />}\n                </Outset>\n              </FlexRow>\n            </label>\n          </Outset>\n        )}\n\n        <FlexRow\n          alignItems=\"center\"\n          onClick={focusOnInput}\n          className={classNames([\n            styles.Input,\n            styles[`size_${size}`],\n            disabled && styles.disabled,\n            isFocused && styles.focus,\n            hasError && styles.hasError,\n          ])}\n        >\n          <AnimatePresence>\n            {isFocused && (\n              <motion.span\n                aria-hidden=\"true\"\n                className={styles.focusRing}\n                {...getFadeProps()}\n                transition={{ duration: 0.3 }}\n              />\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence initial={false} exitBeforeEnter>\n            {prefix && (\n              <motion.div className={styles.prefix} {...getScaleProps(0.7)} key={0}>\n                {prefix}\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <input id={id} {...mergeProps(focusProps, otherProps)} ref={composeRefs(inputRef, externalRef)} />\n\n          <AnimatePresence initial={false} exitBeforeEnter>\n            {suffix && !hasError && (\n              <motion.div className={styles.suffix} {...getScaleProps(0.7)} key={0}>\n                {suffix}\n              </motion.div>\n            )}\n\n            {hasError && (\n              <motion.div className={styles.suffix} {...getScaleProps(0.7)} key={1}>\n                <Icon type={MonochromeIcons.Exclaim} color={theme.hex.error.base} />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </FlexRow>\n\n        {errorMessage && (\n          <Outset top={8} left={7}>\n            <span className={classNames([styles.InputErrorMessage, styles[`size_${size}`]])}>{errorMessage}</span>\n          </Outset>\n        )}\n      </FlexColumn>\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}