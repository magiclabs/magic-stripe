{"ast":null,"code":"import { __rest } from '../../../_virtual/_tslib.js';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { classNames } from '../../../libs/class-names.js';\nimport 'color';\nimport 'blueimp-md5';\nimport '@artsy/fresnel';\nimport { useTheme } from '../../theme/use-theme.js';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper.js';\nimport composeRefs from '@seznam/compose-react-refs';\nimport '../../theme/inverse-theme-semantics.js';\nimport { useIsomorphicLayoutEffect } from '../../../hooks/use-isomorphic-layout-effect.js';\nimport { ThemeProvider } from '../../theme/theme-provider.js';\nimport { useSlide } from '../../../hooks/transitions.js';\nimport { EphemeralPortal } from '../../layout/ephemeral-portal.js';\nimport { FlexibleDiv } from '../../layout/flexible-div.js';\nimport { Popper, Manager, Reference } from 'react-popper-2';\nimport modules_cfa5ac34 from './tooltip.less.js';\n/* eslint-disable no-nested-ternary */\n\n/**\r\n * A low-level tooltip component. Tooltip visibility state should be managed by\r\n * the consuming component (or you can use `<AnchoredTooltip />`).\r\n */\n\nconst Tooltip = /* @__PURE__ */forwardRefWrapper('Tooltip', {\n  in: false,\n  delay: {\n    show: 0,\n    hide: 1000\n  },\n  placement: 'top',\n  waitForPointerExit: true,\n  arrow: true,\n  overflow: false\n}, (props, externalRef) => {\n  const {\n    children,\n    anchor,\n    in: inProp,\n    delay,\n    placement,\n    waitForPointerExit,\n    arrow,\n    overflow\n  } = props,\n        otherProps = __rest(props, [\"children\", \"anchor\", \"in\", \"delay\", \"placement\", \"waitForPointerExit\", \"arrow\", \"overflow\"]);\n\n  const [shouldShow, setShouldShow] = useState(inProp);\n  const [isMouseOverTooltip, setIsMouseOverTooltip] = useState(false);\n  const popperUpdate = useRef(null);\n  const getSlideProps = useSlide();\n  const showDelay = typeof delay === 'number' ? delay : (delay === null || delay === void 0 ? void 0 : delay.show) || 0;\n  const hideDelay = typeof delay === 'number' ? delay : (delay === null || delay === void 0 ? void 0 : delay.hide) || 1000; // --- Effects\n  // Show/hide the tooltip while\n  // accounting for the configured delay.\n\n  useEffect(() => {\n    let showTimeout;\n    let hideTimeout;\n\n    if (inProp && !shouldShow) {\n      if (showDelay) showTimeout = window.setTimeout(() => setShouldShow(true), showDelay);else setShouldShow(true);\n    } else if (!inProp && (!waitForPointerExit ? true : !isMouseOverTooltip) && shouldShow) {\n      if (hideDelay) hideTimeout = window.setTimeout(() => setShouldShow(false), hideDelay);else setShouldShow(false);\n    }\n\n    return () => {\n      if (showTimeout) clearTimeout(showTimeout);\n      if (hideTimeout) clearTimeout(hideTimeout);\n    };\n  }, [inProp, shouldShow, isMouseOverTooltip, showDelay, hideDelay]); // Force-update the underlying Popper.js\n  // instance if `shouldShow` changes.\n\n  useIsomorphicLayoutEffect(() => {\n    if (popperUpdate.current) popperUpdate.current();\n  }, [shouldShow]); // --- Callbacks\n\n  /**\r\n   * Keep showing the tooltip if mouse enters the content area, if there\r\n   * is a `hideDelay` value set, we also start the timeout. The timeout\r\n   * itself does not hide the tooltip, for that we wait until the mouse\r\n   * leaves the content area (see `handleTooltipContentMouseLeave` below).\r\n   */\n\n  const handleTooltipContentMouseEnter = useCallback(() => {\n    setShouldShow(true);\n    setIsMouseOverTooltip(true);\n  }, []);\n  /**\r\n   * Stops showing the tooltip when mouse leaves the content area, while\r\n   * respecting the current `hideDelay` prop value.\r\n   */\n\n  const handleTooltipContentMouseLeave = useCallback(() => {\n    setIsMouseOverTooltip(false);\n  }, []); // --- Rendering\n\n  const tooltip = React.createElement(Popper, {\n    placement: placement,\n    modifiers: [{\n      name: 'offset',\n      enabled: true,\n      options: {\n        offset: [0, 10]\n      }\n    }, {\n      name: 'preventOverflow',\n      enabled: !overflow\n    }, {\n      name: 'arrow',\n      options: {\n        padding: 5\n      }\n    }]\n  }, ({\n    placement: popperPlacement,\n    ref,\n    style,\n    arrowProps,\n    update\n  }) => {\n    popperUpdate.current = update; // Save a reference to `scheduleUpdate`\n\n    return React.createElement(\"div\", Object.assign({\n      className: modules_cfa5ac34.Tooltip\n    }, otherProps, {\n      style: style,\n      ref: composeRefs(ref, externalRef)\n    }), React.createElement(AnimatePresence, null, shouldShow && React.createElement(motion.div, Object.assign({}, getSlideProps({\n      x: popperPlacement.startsWith('right') ? 5 : popperPlacement.startsWith('left') ? -5 : 0,\n      y: popperPlacement.startsWith('bottom') ? 5 : popperPlacement.startsWith('top') ? -5 : 0\n    }), {\n      transition: {\n        duration: 0.2\n      },\n      className: classNames([modules_cfa5ac34.content, arrow && modules_cfa5ac34.hasArrow]),\n      \"x-placement\": popperPlacement,\n      onMouseEnter: handleTooltipContentMouseEnter,\n      onMouseLeave: handleTooltipContentMouseLeave\n    }), arrow && React.createElement(\"div\", {\n      className: modules_cfa5ac34.arrow,\n      ref: arrowProps.ref,\n      style: arrowProps.style\n    }), React.createElement(FlexibleDiv, {\n      initialDelay: 0.2,\n      onAnimationFrame: update\n    }, children))));\n  });\n  const anchorWithRef = useCallback(({\n    ref\n  }) => React.createElement(\"div\", {\n    ref: ref\n  }, anchor), [anchor]);\n  return React.createElement(\"div\", {\n    className: modules_cfa5ac34.Tooltip\n  }, React.createElement(Manager, null, React.createElement(Reference, null, anchorWithRef), React.createElement(EphemeralPortal, null, React.createElement(ThemeProvider, {\n    theme: useTheme()\n  }, tooltip))));\n});\nexport { Tooltip };","map":{"version":3,"sources":["../../../../../src/components/feedback/tooltip/tooltip.tsx"],"names":["styles"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\n\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport composeRefs from '@seznam/compose-react-refs';\nimport { useSlide } from '../../../hooks/transitions';\nimport { FlexibleDiv } from '../../layout/flexible-div';\nimport { EphemeralPortal } from '../../layout/ephemeral-portal';\nimport { classNames } from '../../../libs/class-names';\nimport { useTheme } from '../../theme/use-theme';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper';\nimport { ThemeProvider } from '../../theme';\nimport { useIsomorphicLayoutEffect } from '../../../hooks/use-isomorphic-layout-effect';\n\n/**\n * There is a known bug in StorybookJS related to incompatible versions of\n * `react-popper`. We workaround this issue by using `yarn` aliases to support\n * multiple versions of the same NPM package. This means projects that consume\n * Magic Storybook _must_ use `yarn` until the issue reference below is\n * resolved.\n *\n * @see https://github.com/storybookjs/storybook/issues/10982\n */\n/* eslint-disable-next-line import/order */\nimport { Manager, Popper, Reference } from 'react-popper-2';\n\nimport styles from './tooltip.less';\n\nexport interface TooltipProps extends React.HTMLAttributes<HTMLDivElement> {\n  anchor: React.ReactNode;\n  in?: boolean;\n  delay?: number | { show: number; hide: number };\n  placement?:\n    | 'auto'\n    | 'auto-start'\n    | 'auto-end'\n    | 'top'\n    | 'bottom'\n    | 'right'\n    | 'left'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right-start'\n    | 'right-end'\n    | 'left-start'\n    | 'left-end';\n  arrow?: boolean;\n  overflow?: boolean;\n  waitForPointerExit?: boolean;\n}\n\n/**\n * A low-level tooltip component. Tooltip visibility state should be managed by\n * the consuming component (or you can use `<AnchoredTooltip />`).\n */\nexport const Tooltip = /* @__PURE__ */ forwardRefWrapper<HTMLDivElement, TooltipProps>(\n  'Tooltip',\n\n  {\n    in: false,\n    delay: { show: 0, hide: 1000 },\n    placement: 'top',\n    waitForPointerExit: true,\n    arrow: true,\n    overflow: false,\n  },\n\n  (props, externalRef) => {\n    const {\n      children,\n      anchor,\n      in: inProp,\n      delay,\n      placement,\n      waitForPointerExit,\n      arrow,\n      overflow,\n      ...otherProps\n    } = props;\n\n    const [shouldShow, setShouldShow] = useState(inProp);\n    const [isMouseOverTooltip, setIsMouseOverTooltip] = useState(false);\n    const popperUpdate = useRef<(() => void) | null>(null);\n    const getSlideProps = useSlide();\n    const showDelay = typeof delay === 'number' ? delay : delay?.show || 0;\n    const hideDelay = typeof delay === 'number' ? delay : delay?.hide || 1000;\n\n    // --- Effects\n\n    // Show/hide the tooltip while\n    // accounting for the configured delay.\n    useEffect(() => {\n      let showTimeout: number;\n      let hideTimeout: number;\n\n      if (inProp && !shouldShow) {\n        if (showDelay) showTimeout = window.setTimeout(() => setShouldShow(true), showDelay);\n        else setShouldShow(true);\n      } else if (!inProp && (!waitForPointerExit ? true : !isMouseOverTooltip) && shouldShow) {\n        if (hideDelay) hideTimeout = window.setTimeout(() => setShouldShow(false), hideDelay);\n        else setShouldShow(false);\n      }\n\n      return () => {\n        if (showTimeout) clearTimeout(showTimeout);\n        if (hideTimeout) clearTimeout(hideTimeout);\n      };\n    }, [inProp, shouldShow, isMouseOverTooltip, showDelay, hideDelay]);\n\n    // Force-update the underlying Popper.js\n    // instance if `shouldShow` changes.\n    useIsomorphicLayoutEffect(() => {\n      if (popperUpdate.current) popperUpdate.current();\n    }, [shouldShow]);\n\n    // --- Callbacks\n\n    /**\n     * Keep showing the tooltip if mouse enters the content area, if there\n     * is a `hideDelay` value set, we also start the timeout. The timeout\n     * itself does not hide the tooltip, for that we wait until the mouse\n     * leaves the content area (see `handleTooltipContentMouseLeave` below).\n     */\n    const handleTooltipContentMouseEnter = useCallback(() => {\n      setShouldShow(true);\n      setIsMouseOverTooltip(true);\n    }, []);\n\n    /**\n     * Stops showing the tooltip when mouse leaves the content area, while\n     * respecting the current `hideDelay` prop value.\n     */\n    const handleTooltipContentMouseLeave = useCallback(() => {\n      setIsMouseOverTooltip(false);\n    }, []);\n\n    // --- Rendering\n\n    const tooltip = (\n      <Popper\n        placement={placement}\n        modifiers={[\n          { name: 'offset', enabled: true, options: { offset: [0, 10] } },\n          { name: 'preventOverflow', enabled: !overflow },\n          { name: 'arrow', options: { padding: 5 } },\n        ]}\n      >\n        {({ placement: popperPlacement, ref, style, arrowProps, update }) => {\n          popperUpdate.current = update; // Save a reference to `scheduleUpdate`\n          return (\n            <div className={styles.Tooltip} {...otherProps} style={style} ref={composeRefs(ref, externalRef)}>\n              <AnimatePresence>\n                {shouldShow && (\n                  <motion.div\n                    {...getSlideProps({\n                      x: popperPlacement.startsWith('right') ? 5 : popperPlacement.startsWith('left') ? -5 : 0,\n                      y: popperPlacement.startsWith('bottom') ? 5 : popperPlacement.startsWith('top') ? -5 : 0,\n                    })}\n                    transition={{ duration: 0.2 }}\n                    className={classNames([styles.content, arrow && styles.hasArrow])}\n                    x-placement={popperPlacement}\n                    onMouseEnter={handleTooltipContentMouseEnter}\n                    onMouseLeave={handleTooltipContentMouseLeave}\n                  >\n                    {arrow && <div className={styles.arrow} ref={arrowProps.ref} style={arrowProps.style} />}\n                    <FlexibleDiv initialDelay={0.2} onAnimationFrame={update}>\n                      {children}\n                    </FlexibleDiv>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          );\n        }}\n      </Popper>\n    );\n\n    const anchorWithRef = useCallback(({ ref }) => <div ref={ref}>{anchor}</div>, [anchor]);\n\n    return (\n      <div className={styles.Tooltip}>\n        <Manager>\n          <Reference>{anchorWithRef}</Reference>\n          <EphemeralPortal>\n            <ThemeProvider theme={useTheme()}>{tooltip}</ThemeProvider>\n          </EphemeralPortal>\n        </Manager>\n      </div>\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}