{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport { __extends, __read, __spread } from \"tslib\";\nimport { createJsonRpcRequestPayload, standardizeJsonRpcRequestPayload } from '../core/json-rpc';\nimport { BaseModule } from './base-module';\nimport { createExtensionNotInitializedError, MagicExtensionError, MagicExtensionWarning } from '../core/sdk-exceptions';\nimport { createPromiEvent, encodeJSON, decodeJSON, storage, isPromiEvent } from '../util';\nvar sdkAccessFields = ['request', 'transport', 'overlay', 'sdk'];\n/**\n * From the `BaseExtension`-derived instance, get the prototype\n * chain up to and including the `BaseModule` class.\n */\n\nfunction getPrototypeChain(instance) {\n  var currentProto = Object.getPrototypeOf(instance);\n  var protos = [currentProto];\n\n  while (currentProto !== BaseModule.prototype) {\n    currentProto = Object.getPrototypeOf(currentProto);\n    protos.push(currentProto);\n  }\n\n  return protos;\n}\n\nvar BaseExtension =\n/** @class */\nfunction (_super) {\n  __extends(BaseExtension, _super);\n\n  function BaseExtension() {\n    var _this = _super.call(this, undefined) || this;\n\n    _this.__sdk_access_field_descriptors__ = new Map();\n    _this.__is_initialized__ = false;\n    _this.utils = {\n      createPromiEvent: createPromiEvent,\n      isPromiEvent: isPromiEvent,\n      encodeJSON: encodeJSON,\n      decodeJSON: decodeJSON,\n      createJsonRpcRequestPayload: createJsonRpcRequestPayload,\n      standardizeJsonRpcRequestPayload: standardizeJsonRpcRequestPayload,\n      storage: storage\n    }; // Disallow SDK access before initialization...\n\n    var allSources = __spread([_this], getPrototypeChain(_this));\n\n    sdkAccessFields.forEach(function (prop) {\n      var allDescriptors = allSources.map(function (source) {\n        return Object.getOwnPropertyDescriptor(source, prop);\n      });\n      var sourceIndex = allDescriptors.findIndex(function (x) {\n        return !!x;\n      });\n      var isPrototypeField = sourceIndex > 0;\n      var descriptor = allDescriptors[sourceIndex];\n      /* istanbul ignore else */\n\n      if (descriptor) {\n        _this.__sdk_access_field_descriptors__.set(prop, {\n          descriptor: descriptor,\n          isPrototypeField: isPrototypeField\n        });\n\n        Object.defineProperty(_this, prop, {\n          configurable: true,\n          get: function () {\n            throw createExtensionNotInitializedError(prop);\n          }\n        });\n      }\n    });\n    return _this;\n  }\n  /**\n   * Registers a Magic SDK instance with this Extension.\n   *\n   * @internal\n   */\n\n\n  BaseExtension.prototype.init = function (sdk) {\n    var _this = this;\n\n    if (this.__is_initialized__) return; // Replace original property descriptors\n    // for SDK access fields post-initialization.\n\n    sdkAccessFields.forEach(function (prop) {\n      /* istanbul ignore else */\n      if (_this.__sdk_access_field_descriptors__.has(prop)) {\n        var _a = _this.__sdk_access_field_descriptors__.get(prop),\n            descriptor = _a.descriptor,\n            isPrototypeField = _a.isPrototypeField;\n\n        if (isPrototypeField) {\n          // For prototype fields, we just need the `delete` operator so that\n          // the instance will fallback to the prototype chain itself.\n          delete _this[prop];\n        } else {\n          Object.defineProperty(_this, prop, descriptor);\n        }\n      }\n    });\n    this.sdk = sdk;\n    this.__is_initialized__ = true;\n  };\n  /**\n   * Creates a deprecation warning wrapped with a native Magic SDK warning type.\n   * Best practice is to warn users of upcoming deprecations at least one major\n   * version before the change is implemented. You can use this method to\n   * communicate deprecations in a manner consistent with Magic SDK core code.\n   */\n\n\n  BaseExtension.prototype.createDeprecationWarning = function (options) {\n    var method = options.method,\n        removalVersion = options.removalVersion,\n        useInstead = options.useInstead;\n    var useInsteadSuffix = useInstead ? \" Use `\" + useInstead + \"` instead.\" : '';\n    var message = \"`\" + method + \"` will be removed from this Extension in version `\" + removalVersion + \"`.\" + useInsteadSuffix;\n    return new MagicExtensionWarning(this, 'DEPRECATION_NOTICE', message);\n  };\n  /**\n   * Creates a warning wrapped with a native Magic SDK warning type. This\n   * maintains consistency in warning messaging for consumers of Magic SDK and\n   * this Extension.\n   */\n\n\n  BaseExtension.prototype.createWarning = function (code, message) {\n    return new MagicExtensionWarning(this, code, message);\n  };\n  /**\n   * Creates an error wrapped with a native Magic SDK error type. This maintains\n   * consistency in error handling for consumers of Magic SDK and this\n   * Extension.\n   */\n\n\n  BaseExtension.prototype.createError = function (code, message, data) {\n    return new MagicExtensionError(this, code, message, data);\n  };\n\n  return BaseExtension;\n}(BaseModule);\n\nvar InternalExtension =\n/** @class */\nfunction (_super) {\n  __extends(InternalExtension, _super);\n\n  function InternalExtension() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return InternalExtension;\n}(BaseExtension);\n/**\n * A base class representing \"extensions\" to the core Magic JS APIs. Extensions\n * enable new functionality by composing Magic endpoints methods together.\n */\n\n\nvar Extension =\n/** @class */\nfunction (_super) {\n  __extends(Extension, _super);\n\n  function Extension() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * This is a special constructor used to mark \"official\" extensions. These\n   * extensions are designed for special interaction with the Magic iframe using\n   * custom JSON RPC methods, business logic, and global configurations. This is\n   * intended for internal-use only (and provides no useful advantage to\n   * open-source extension developers over the regular `Extension` class).\n   *\n   * @internal\n   */\n\n\n  Extension.Internal = InternalExtension;\n  return Extension;\n}(BaseExtension);\n\nexport { Extension };","map":{"version":3,"sources":["../../../src/modules/base-extension.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { __extends, __read, __spread } from \"tslib\";\nimport { createJsonRpcRequestPayload, standardizeJsonRpcRequestPayload } from '../core/json-rpc';\nimport { BaseModule } from './base-module';\nimport { createExtensionNotInitializedError, MagicExtensionError, MagicExtensionWarning } from '../core/sdk-exceptions';\nimport { createPromiEvent, encodeJSON, decodeJSON, storage, isPromiEvent } from '../util';\nvar sdkAccessFields = ['request', 'transport', 'overlay', 'sdk'];\n/**\n * From the `BaseExtension`-derived instance, get the prototype\n * chain up to and including the `BaseModule` class.\n */\nfunction getPrototypeChain(instance) {\n    var currentProto = Object.getPrototypeOf(instance);\n    var protos = [currentProto];\n    while (currentProto !== BaseModule.prototype) {\n        currentProto = Object.getPrototypeOf(currentProto);\n        protos.push(currentProto);\n    }\n    return protos;\n}\nvar BaseExtension = /** @class */ (function (_super) {\n    __extends(BaseExtension, _super);\n    function BaseExtension() {\n        var _this = _super.call(this, undefined) || this;\n        _this.__sdk_access_field_descriptors__ = new Map();\n        _this.__is_initialized__ = false;\n        _this.utils = {\n            createPromiEvent: createPromiEvent,\n            isPromiEvent: isPromiEvent,\n            encodeJSON: encodeJSON,\n            decodeJSON: decodeJSON,\n            createJsonRpcRequestPayload: createJsonRpcRequestPayload,\n            standardizeJsonRpcRequestPayload: standardizeJsonRpcRequestPayload,\n            storage: storage,\n        };\n        // Disallow SDK access before initialization...\n        var allSources = __spread([_this], getPrototypeChain(_this));\n        sdkAccessFields.forEach(function (prop) {\n            var allDescriptors = allSources.map(function (source) { return Object.getOwnPropertyDescriptor(source, prop); });\n            var sourceIndex = allDescriptors.findIndex(function (x) { return !!x; });\n            var isPrototypeField = sourceIndex > 0;\n            var descriptor = allDescriptors[sourceIndex];\n            /* istanbul ignore else */\n            if (descriptor) {\n                _this.__sdk_access_field_descriptors__.set(prop, { descriptor: descriptor, isPrototypeField: isPrototypeField });\n                Object.defineProperty(_this, prop, {\n                    configurable: true,\n                    get: function () {\n                        throw createExtensionNotInitializedError(prop);\n                    },\n                });\n            }\n        });\n        return _this;\n    }\n    /**\n     * Registers a Magic SDK instance with this Extension.\n     *\n     * @internal\n     */\n    BaseExtension.prototype.init = function (sdk) {\n        var _this = this;\n        if (this.__is_initialized__)\n            return;\n        // Replace original property descriptors\n        // for SDK access fields post-initialization.\n        sdkAccessFields.forEach(function (prop) {\n            /* istanbul ignore else */\n            if (_this.__sdk_access_field_descriptors__.has(prop)) {\n                var _a = _this.__sdk_access_field_descriptors__.get(prop), descriptor = _a.descriptor, isPrototypeField = _a.isPrototypeField;\n                if (isPrototypeField) {\n                    // For prototype fields, we just need the `delete` operator so that\n                    // the instance will fallback to the prototype chain itself.\n                    delete _this[prop];\n                }\n                else {\n                    Object.defineProperty(_this, prop, descriptor);\n                }\n            }\n        });\n        this.sdk = sdk;\n        this.__is_initialized__ = true;\n    };\n    /**\n     * Creates a deprecation warning wrapped with a native Magic SDK warning type.\n     * Best practice is to warn users of upcoming deprecations at least one major\n     * version before the change is implemented. You can use this method to\n     * communicate deprecations in a manner consistent with Magic SDK core code.\n     */\n    BaseExtension.prototype.createDeprecationWarning = function (options) {\n        var method = options.method, removalVersion = options.removalVersion, useInstead = options.useInstead;\n        var useInsteadSuffix = useInstead ? \" Use `\" + useInstead + \"` instead.\" : '';\n        var message = \"`\" + method + \"` will be removed from this Extension in version `\" + removalVersion + \"`.\" + useInsteadSuffix;\n        return new MagicExtensionWarning(this, 'DEPRECATION_NOTICE', message);\n    };\n    /**\n     * Creates a warning wrapped with a native Magic SDK warning type. This\n     * maintains consistency in warning messaging for consumers of Magic SDK and\n     * this Extension.\n     */\n    BaseExtension.prototype.createWarning = function (code, message) {\n        return new MagicExtensionWarning(this, code, message);\n    };\n    /**\n     * Creates an error wrapped with a native Magic SDK error type. This maintains\n     * consistency in error handling for consumers of Magic SDK and this\n     * Extension.\n     */\n    BaseExtension.prototype.createError = function (code, message, data) {\n        return new MagicExtensionError(this, code, message, data);\n    };\n    return BaseExtension;\n}(BaseModule));\nvar InternalExtension = /** @class */ (function (_super) {\n    __extends(InternalExtension, _super);\n    function InternalExtension() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return InternalExtension;\n}(BaseExtension));\n/**\n * A base class representing \"extensions\" to the core Magic JS APIs. Extensions\n * enable new functionality by composing Magic endpoints methods together.\n */\nvar Extension = /** @class */ (function (_super) {\n    __extends(Extension, _super);\n    function Extension() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This is a special constructor used to mark \"official\" extensions. These\n     * extensions are designed for special interaction with the Magic iframe using\n     * custom JSON RPC methods, business logic, and global configurations. This is\n     * intended for internal-use only (and provides no useful advantage to\n     * open-source extension developers over the regular `Extension` class).\n     *\n     * @internal\n     */\n    Extension.Internal = InternalExtension;\n    return Extension;\n}(BaseExtension));\nexport { Extension };\n//# sourceMappingURL=base-extension.js.map"]},"metadata":{},"sourceType":"module"}