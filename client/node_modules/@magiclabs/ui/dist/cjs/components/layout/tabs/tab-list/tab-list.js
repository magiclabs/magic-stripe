'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var interactions = require('@react-aria/interactions');
var framerMotion = require('framer-motion');
var classNames = require('../../../../libs/class-names.js');
var useStyles = require('../../../../hooks/use-styles.js');
var flexbox = require('../../flexbox/flexbox.js');
var transitions = require('../../../../hooks/transitions.js');
var tabList = require('./tab-list.less.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const TabList = (props) => {
    const { label, orientation, indicatorAttributes, useAnimation, children } = props;
    const [isFocused, setFocus] = React.useState(false);
    const { focusWithinProps } = interactions.useFocusWithin({ onFocusWithinChange: setFocus });
    const { isFocusVisible } = interactions.useFocusVisible();
    const getFadeProps = transitions.useFade();
    const getScaleProps = transitions.useScaleIn();
    const focusRingAnimationProps = orientation === 'vertical' ? getScaleProps(1.1) : getFadeProps();
    const horizontalTabStyle = useStyles.useStyles({
        width: `${indicatorAttributes.width}px`,
        left: `${indicatorAttributes.offsetLeft}px`,
    });
    const verticalTabStyle = useStyles.useStyles({
        height: `${indicatorAttributes.height}px`,
        top: `${indicatorAttributes.offsetTop}px`,
    });
    const verticalFocusRingStyle = useStyles.useStyles({
        height: `calc(${verticalTabStyle.height} + 4px)`,
        top: `calc(${verticalTabStyle.top} - 4px)`,
    });
    return (React__default['default'].createElement(flexbox.FlexContainer, Object.assign({ inline: true, className: classNames.classNames([tabList.default.TabList, tabList.default[orientation]]), direction: orientation === 'vertical' ? 'column' : 'row', alignItems: orientation === 'vertical' ? undefined : 'center', justifyContent: orientation === 'vertical' ? 'center' : undefined, role: "tablist", "aria-label": label }, focusWithinProps),
        React__default['default'].createElement(framerMotion.AnimatePresence, null, isFocused && isFocusVisible && (React__default['default'].createElement(framerMotion.motion.span, Object.assign({ "aria-hidden": "true", className: tabList.default.focusRing }, focusRingAnimationProps, { transition: { duration: 0.3 }, style: orientation === 'vertical' ? verticalFocusRingStyle : undefined })))),
        React__default['default'].createElement("div", { "aria-hidden": "true", className: classNames.classNames([tabList.default.selectedTabIndicator, useAnimation && tabList.default.withAnimation]), style: orientation === 'vertical' ? verticalTabStyle : horizontalTabStyle }),
        children));
};

exports.TabList = TabList;
//# sourceMappingURL=tab-list.js.map
