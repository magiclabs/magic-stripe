'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../_virtual/_tslib.js');
var React = require('react');
var interactions = require('@react-aria/interactions');
var framerMotion = require('framer-motion');
var classNames = require('../../../libs/class-names.js');
var mergeProps = require('../../../libs/merge-props.js');
require('color');
require('blueimp-md5');
require('@artsy/fresnel');
var useTheme = require('../../theme/use-theme.js');
var forwardRefWrapper = require('../../../libs/forward-ref-wrapper.js');
var iconBase = require('../../icons/icon-base.js');
var asteriskBold = require('../../icons/monochrome/asterisk-bold.js');
var exclaim = require('../../icons/monochrome/exclaim.js');
var flexbox = require('../../layout/flexbox/flexbox.js');
var outset = require('../../layout/outset/outset.js');
require('usable-react');
var composeRefs = require('@seznam/compose-react-refs');
require('../../theme/inverse-theme-semantics.js');
require('@react-aria/ssr');
require('../../theme/theme-provider.js');
var transitions = require('../../../hooks/transitions.js');
require('react-dom');
require('watch-resize');
var input = require('./input.less.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var composeRefs__default = /*#__PURE__*/_interopDefaultLegacy(composeRefs);

/* eslint-disable jsx-a11y/label-has-associated-control */
const Input = /* @__PURE__ */ forwardRefWrapper.forwardRefWrapper('Input', { size: 'md' }, (props, externalRef) => {
    const { id, required, disabled, label, errorMessage, validateOnBlur, size, prefix, suffix } = props, otherProps = _tslib.__rest(props, ["id", "required", "disabled", "label", "errorMessage", "validateOnBlur", "size", "prefix", "suffix"]);
    const [hasError, setHasError] = React.useState(!!errorMessage);
    React.useEffect(() => {
        setHasError(!!errorMessage);
    }, [errorMessage]);
    const onBlur = React.useCallback((e) => {
        if (validateOnBlur) {
            const valid = e.target.checkValidity();
            setHasError(!valid || !!errorMessage);
        }
    }, [errorMessage]);
    const [isFocused, onFocusChange] = React.useState(false);
    const { focusProps } = interactions.useFocus({ isDisabled: disabled, onBlur, onFocusChange });
    const inputRef = React.useRef(null);
    const focusOnInput = React.useCallback(() => {
        if (inputRef.current)
            inputRef.current.focus();
    }, []);
    const getScaleProps = transitions.useScale();
    const getFadeProps = transitions.useFade();
    const theme = useTheme.useTheme();
    return (React__default['default'].createElement(flexbox.FlexColumn, null,
        label && (React__default['default'].createElement(outset.Outset, { bottom: 8 },
            React__default['default'].createElement("label", { htmlFor: id, className: classNames.classNames([input.default.InputLabel, input.default[`size_${size}`]]) },
                React__default['default'].createElement(flexbox.FlexRow, { alignItems: "flex-end" },
                    React__default['default'].createElement(outset.Outset, { right: 3, trim: "horizontal" },
                        React__default['default'].createElement("span", null, label),
                        required && React__default['default'].createElement(iconBase.Icon, { size: 10, color: theme.hex.primary.base, type: asteriskBold.AsteriskBold })))))),
        React__default['default'].createElement(flexbox.FlexRow, { alignItems: "center", onClick: focusOnInput, className: classNames.classNames([
                input.default.Input,
                input.default[`size_${size}`],
                disabled && input.default.disabled,
                isFocused && input.default.focus,
                hasError && input.default.hasError,
            ]) },
            React__default['default'].createElement(framerMotion.AnimatePresence, null, isFocused && (React__default['default'].createElement(framerMotion.motion.span, Object.assign({ "aria-hidden": "true", className: input.default.focusRing }, getFadeProps(), { transition: { duration: 0.3 } })))),
            React__default['default'].createElement(framerMotion.AnimatePresence, { initial: false, exitBeforeEnter: true }, prefix && (React__default['default'].createElement(framerMotion.motion.div, Object.assign({ className: input.default.prefix }, getScaleProps(0.7), { key: 0 }), prefix))),
            React__default['default'].createElement("input", Object.assign({ id: id }, mergeProps.mergeProps(focusProps, otherProps), { ref: composeRefs__default['default'](inputRef, externalRef) })),
            React__default['default'].createElement(framerMotion.AnimatePresence, { initial: false, exitBeforeEnter: true },
                suffix && !hasError && (React__default['default'].createElement(framerMotion.motion.div, Object.assign({ className: input.default.suffix }, getScaleProps(0.7), { key: 0 }), suffix)),
                hasError && (React__default['default'].createElement(framerMotion.motion.div, Object.assign({ className: input.default.suffix }, getScaleProps(0.7), { key: 1 }),
                    React__default['default'].createElement(iconBase.Icon, { type: exclaim.Exclaim, color: theme.hex.error.base }))))),
        errorMessage && (React__default['default'].createElement(outset.Outset, { top: 8, left: 7 },
            React__default['default'].createElement("span", { className: classNames.classNames([input.default.InputErrorMessage, input.default[`size_${size}`]]) }, errorMessage)))));
});

exports.Input = Input;
//# sourceMappingURL=input.js.map
