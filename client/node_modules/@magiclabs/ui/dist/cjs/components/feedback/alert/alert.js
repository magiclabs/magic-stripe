'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
require('@react-aria/interactions');
require('framer-motion');
var classNames = require('../../../libs/class-names.js');
require('color');
require('blueimp-md5');
require('@artsy/fresnel');
var iconBase = require('../../icons/icon-base.js');
var exclaim = require('../../icons/monochrome/exclaim.js');
var info = require('../../icons/monochrome/info.js');
var successFilled = require('../../icons/monochrome/success-filled.js');
var warning = require('../../icons/monochrome/warning.js');
var flexbox = require('../../layout/flexbox/flexbox.js');
var inset = require('../../layout/inset/inset.js');
require('usable-react');
require('@seznam/compose-react-refs');
require('../../theme/inverse-theme-semantics.js');
require('@react-aria/ssr');
require('../../theme/theme-provider.js');
require('react-dom');
require('watch-resize');
var alert = require('./alert.less.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const Alert = (props) => {
    const { label, type, children } = props;
    let iconType;
    switch (type) {
        case 'success':
            iconType = successFilled.SuccessFilled;
            break;
        case 'warning':
            iconType = warning.Warning;
            break;
        case 'error':
            iconType = exclaim.Exclaim;
            break;
        case 'info':
        default:
            iconType = info.Info;
            break;
    }
    return (React__default['default'].createElement("div", { className: classNames.classNames([alert.default.Alert, alert.default[type]]) },
        React__default['default'].createElement(flexbox.FlexRow, { vertical: "flex-start" },
            React__default['default'].createElement(inset.Inset, { top: 2 },
                React__default['default'].createElement(iconBase.Icon, { size: 20, type: iconType })),
            React__default['default'].createElement("div", { role: "status", className: alert.default.message },
                label && React__default['default'].createElement("div", { className: alert.default.label }, label),
                children))));
};
Alert.defaultProps = {
    type: 'info',
};

exports.Alert = Alert;
//# sourceMappingURL=alert.js.map
