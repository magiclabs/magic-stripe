{"version":3,"file":"forward-ref-wrapper.js","sources":["../../../src/libs/forward-ref-wrapper.ts"],"sourcesContent":["import { forwardRef, ForwardRefExoticComponent, ForwardRefRenderFunction, PropsWithoutRef, RefAttributes } from 'react';\n\n/**\n * Wraps `React.forwardRef` and applies a semantic `displayName` and\n * `defaultProps` without side effects.\n *\n * This wrapper is required to properly tree-shake `React.forwardRef`\n * components, otherwise the minifier can't understand that `defaultProps` and\n * `displayName` are pure.\n */\nexport function forwardRefWrapper<T, P = {}>(\n  name: string,\n  render: ForwardRefRenderFunction<T, P>,\n): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;\n\nexport function forwardRefWrapper<T, P = {}>(\n  name: string,\n  defaultProps: Partial<PropsWithoutRef<P> & RefAttributes<T>> | undefined,\n  render: ForwardRefRenderFunction<T, P>,\n): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;\n\nexport function forwardRefWrapper<T, P = {}>(\n  name: string,\n  defaultPropsOrRender: Partial<PropsWithoutRef<P> & RefAttributes<T>> | undefined | ForwardRefRenderFunction<T, P>,\n  definitelyRender?: ForwardRefRenderFunction<T, P>,\n): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\n  const render = typeof defaultPropsOrRender === 'object' ? definitelyRender : defaultPropsOrRender;\n  const defaultProps = typeof defaultPropsOrRender === 'function' ? {} : defaultPropsOrRender;\n\n  const comp = forwardRef(render!);\n  comp.displayName = name;\n  comp.defaultProps = defaultProps;\n  return comp;\n}\n"],"names":["forwardRef"],"mappings":";;;;;;SAqBgB,iBAAiB,CAC/B,IAAY,EACZ,oBAAiH,EACjH,gBAAiD;IAEjD,MAAM,MAAM,GAAG,OAAO,oBAAoB,KAAK,QAAQ,GAAG,gBAAgB,GAAG,oBAAoB,CAAC;IAClG,MAAM,YAAY,GAAG,OAAO,oBAAoB,KAAK,UAAU,GAAG,EAAE,GAAG,oBAAoB,CAAC;IAE5F,MAAM,IAAI,GAAGA,gBAAU,CAAC,MAAO,CAAC,CAAC;IACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IACxB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACjC,OAAO,IAAI,CAAC;AACd;;;;"}