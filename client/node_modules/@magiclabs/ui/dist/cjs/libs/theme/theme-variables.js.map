{"version":3,"file":"theme-variables.js","sources":["../../../../src/libs/theme/theme-variables.ts"],"sourcesContent":["import { createMedia } from './create-media';\nimport { Theme } from './theme-types';\n\ntype ThemeVariable =\n  | '--mg__primary'\n  | '--mg__primary_lighter'\n  | '--mg__primary_lightest'\n  | '--mg__primary_darker'\n  | '--mg__primary_darkest'\n  | '--mg__secondary'\n  | '--mg__secondary_lighter'\n  | '--mg__secondary_lightest'\n  | '--mg__secondary_darker'\n  | '--mg__secondary_darkest'\n  | '--mg__tertiary'\n  | '--mg__tertiary_lighter'\n  | '--mg__tertiary_lightest'\n  | '--mg__tertiary_darker'\n  | '--mg__tertiary_darkest'\n  | '--mg__success'\n  | '--mg__success_lighter'\n  | '--mg__success_lightest'\n  | '--mg__success_darker'\n  | '--mg__success_darkest'\n  | '--mg__warning'\n  | '--mg__warning_lighter'\n  | '--mg__warning_lightest'\n  | '--mg__warning_darker'\n  | '--mg__warning_darkest'\n  | '--mg__error'\n  | '--mg__error_lighter'\n  | '--mg__error_lightest'\n  | '--mg__error_darker'\n  | '--mg__error_darkest'\n  | '--mg__light'\n  | '--mg__light_lighter'\n  | '--mg__light_lightest'\n  | '--mg__light_darker'\n  | '--mg__light_darkest'\n  | '--mg__dark'\n  | '--mg__dark_lighter'\n  | '--mg__dark_lightest'\n  | '--mg__dark_darker'\n  | '--mg__dark_darkest'\n  | '--mg__mid'\n  | '--mg__mid_lighter'\n  | '--mg__mid_lightest'\n  | '--mg__mid_darker'\n  | '--mg__mid_darkest'\n  | '--mg__font_sansSerif'\n  | '--mg__font_monospace';\n\nexport function getThemeVariables(theme: Theme) {\n  const createCSSVariableGroup = <T extends keyof typeof theme['rgba']>(name: T, rgba: typeof theme['rgba'][T]) =>\n    ({\n      [`--mg__${name}`]: rgba.base.array().slice(0, 3).join(', '),\n      [`--mg__${name}_lighter`]: rgba.lighter.array().slice(0, 3).join(', '),\n      [`--mg__${name}_lightest`]: rgba.lightest.array().slice(0, 3).join(', '),\n      [`--mg__${name}_darker`]: rgba.darker.array().slice(0, 3).join(', '),\n      [`--mg__${name}_darkest`]: rgba.darkest.array().slice(0, 3).join(', '),\n    } as any);\n\n  const variables: Record<ThemeVariable, string> = {\n    ...createCSSVariableGroup('primary', theme.rgba.primary),\n    ...createCSSVariableGroup('secondary', theme.rgba.secondary),\n    ...createCSSVariableGroup('tertiary', theme.rgba.tertiary),\n    ...createCSSVariableGroup('success', theme.rgba.success),\n    ...createCSSVariableGroup('warning', theme.rgba.warning),\n    ...createCSSVariableGroup('error', theme.rgba.error),\n    ...createCSSVariableGroup('light', theme.rgba.light),\n    ...createCSSVariableGroup('dark', theme.rgba.dark),\n    ...createCSSVariableGroup('mid', theme.rgba.mid),\n    '--mg__font_sansSerif': theme.font.sansSerif,\n    '--mg__font_monospace': theme.font.monospace,\n  };\n\n  return {\n    variables,\n\n    toCSS() {\n      /* eslint-disable prettier/prettier */\n\n      // Map theme variables to `:root` CSS block\n      const cssVars = Object.keys(variables).map((property) => `  ${property}:${variables[property]};`).join('\\n');\n      const cssVarsFormatted = ['/* [@magiclabs/ui] Root CSS Variables */', ':root {', cssVars, '}'].join('\\n');\n\n      // Convert media queries to CSS (via `@artsy/fresnel`)\n      const mediaStyles = createMedia(theme.breakpoints).createMediaStyle();\n      const mediaStylesFormatted = ['/* [@artsy/fresnel] Media Queries */', mediaStyles].join('\\n');\n\n      /* eslint-enable prettier/prettier */\n\n      // Put it all together with nice formatting!\n      return [cssVarsFormatted, mediaStylesFormatted].join('\\n\\n');\n    },\n\n    applyToDocument() {\n      // For each CSS variable, we'll map it to the current `Document`.\n      for (const property of Object.keys(variables)) {\n        document.documentElement.style.setProperty(property, variables[property]);\n      }\n\n      // FYI: We don't need to do anything with media queries from `@artsy/fresnel`\n      // here, those are handled client-side by that package internally.\n    },\n  };\n}\n"],"names":["createMedia"],"mappings":"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"}