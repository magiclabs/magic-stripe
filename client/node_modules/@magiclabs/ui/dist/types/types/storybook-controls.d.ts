interface Row {
    detail?: string;
    summary?: string;
}
interface Disable {
    disable?: boolean;
}
export interface Table extends Disable {
    defaultValue?: Row;
    type?: Row;
}
export interface ControlBare extends Disable {
    type: 'boolean' | 'object' | 'text' | 'date' | null;
}
export interface ControlArray extends Disable {
    type: 'array';
    separator?: string;
}
export interface ControlColor extends Disable {
    type: 'color';
    presetColors?: string[];
}
export interface ControlEnum<Option> extends Disable {
    type: 'radio' | 'inline-radio' | 'check' | 'inline-check' | 'select' | 'multi-select';
    options: readonly Option[];
}
export interface ControlNumber extends Disable {
    type: 'number' | 'range';
    min?: number;
    max?: number;
    step?: number;
}
export declare type Control<T> = ControlArray | ControlBare | ControlColor | ControlEnum<T> | ControlNumber;
export {};
