import { __rest } from '../../../_virtual/_tslib.js';
import React from 'react';
import { usePress } from '@react-aria/interactions';
import { classNames } from '../../../libs/class-names.js';
import { mergeProps } from '../../../libs/merge-props.js';
import { forwardRefWrapper } from '../../../libs/forward-ref-wrapper.js';
import modules_f608f1d4 from './linkable.less.js';

/* eslint-disable jsx-a11y/no-noninteractive-tabindex */
const Linkable = /* @__PURE__ */ forwardRefWrapper('Linkable', (props, externalRef) => {
    const { children, onPress, ambientUnderline, className } = props, otherProps = __rest(props, ["children", "onPress", "ambientUnderline", "className"]);
    const isTextChild = typeof children === 'string' || typeof children === 'number';
    const { pressProps } = usePress({ onPress });
    return (React.createElement("span", Object.assign({ className: classNames([
            className,
            modules_f608f1d4.Linkable,
            ambientUnderline && modules_f608f1d4.ambientUnderline,
            isTextChild && modules_f608f1d4.isTextChild,
        ]), role: isTextChild ? 'link' : undefined, tabIndex: isTextChild ? 0 : -1 }, mergeProps(onPress ? pressProps : {}, otherProps), { ref: externalRef }), children));
});

export { Linkable };
//# sourceMappingURL=linkable.js.map
