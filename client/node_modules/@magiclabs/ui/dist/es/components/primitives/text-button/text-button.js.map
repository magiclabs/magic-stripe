{"version":3,"file":"text-button.js","sources":["../../../../../src/components/primitives/text-button/text-button.tsx"],"sourcesContent":["import React from 'react';\nimport { PressEvent } from '@react-types/shared';\nimport { useHover, usePress } from '@react-aria/interactions';\nimport { useFocusRing } from '@react-aria/focus';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { mergeProps } from '../../../libs/merge-props';\nimport { classNames } from '../../../libs/class-names';\nimport { Icon, MonochromeIconDefinition, IconColorProvider } from '../../icons';\nimport { Spacer } from '../../layout';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper';\nimport { useScaleIn } from '../../../hooks/transitions';\nimport { InverseThemeSemantics, useTheme } from '../../theme';\nimport { BaseColorName, ColorTone } from '../../../libs/theme';\n\nimport styles from './text-button.less';\n\ninterface TextButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  disabled?: boolean;\n  onPress?: (event: PressEvent) => void;\n  size?: 'sm' | 'md';\n  color?: 'primary' | 'secondary' | 'tertiary' | 'success' | 'warning' | 'error';\n  leadingIcon?: MonochromeIconDefinition;\n  trailingIcon?: MonochromeIconDefinition;\n}\n\n/**\n * Determines a _default_ color for icons nested in a `<TextButton>`.\n */\nfunction useIconColor(baseColor?: BaseColorName, inverseSemantics?: boolean, isHovered?: boolean, isPressed?: boolean) {\n  const theme = useTheme({ inverseSemantics });\n\n  let tone: ColorTone = 'base';\n\n  // \":hover\" state\n  if (isHovered) {\n    tone = theme.isLightTheme ? 'lighter' : 'darker';\n  }\n\n  // \":active\" state\n  if (isPressed) {\n    tone = theme.isLightTheme ? 'darkest' : 'lightest';\n  }\n\n  return baseColor ? theme.hex[baseColor][tone] : undefined;\n}\n\nexport const TextButton = /* @__PURE__ */ forwardRefWrapper<HTMLButtonElement, TextButtonProps>(\n  'TextButton',\n\n  { size: 'md', color: 'primary' },\n\n  (props, externalRef) => {\n    const { onPress, className, disabled, size, color, leadingIcon, trailingIcon, children, ...otherProps } = props;\n\n    const { isFocusVisible, focusProps } = useFocusRing();\n    const { isHovered, hoverProps } = useHover({ isDisabled: disabled });\n    const { isPressed, pressProps } = usePress({ onPress, isDisabled: disabled });\n    const getScaleProps = useScaleIn();\n\n    const inverseSemantics = color === 'secondary';\n    const iconColor = useIconColor(color, inverseSemantics, isHovered, isPressed);\n\n    return (\n      <IconColorProvider colorA={iconColor}>\n        <InverseThemeSemantics active={inverseSemantics}>\n          <button\n            className={classNames([\n              className,\n              styles.TextButton,\n              styles[size!],\n              styles[`size_${size}`],\n              styles[`color_${color}`],\n              disabled && styles.disabled,\n              isPressed && styles.active,\n            ])}\n            type=\"button\"\n            disabled={disabled}\n            aria-disabled={disabled}\n            {...mergeProps(pressProps, focusProps, hoverProps, otherProps)}\n            ref={externalRef}\n          >\n            <AnimatePresence>\n              {isFocusVisible && (\n                <motion.span aria-hidden=\"true\" className={styles.focusRing} {...getScaleProps(1.05)} />\n              )}\n            </AnimatePresence>\n\n            {leadingIcon && (\n              <>\n                <Icon size={size === 'sm' ? 20 : 24} type={leadingIcon} />\n                <Spacer size={8} />\n              </>\n            )}\n\n            <span className={styles.buttonLabel}>{children}</span>\n\n            {trailingIcon && (\n              <>\n                <Spacer size={8} />\n                <Icon size={size === 'sm' ? 20 : 24} type={trailingIcon} />\n              </>\n            )}\n          </button>\n        </InverseThemeSemantics>\n      </IconColorProvider>\n    );\n  },\n);\n"],"names":["styles"],"mappings":"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"}