import { __rest } from '../../_virtual/_tslib.js';
import React, { useState, useRef, useCallback, useEffect } from 'react';
import { useFocusVisible, useFocusWithin, useHover } from '@react-aria/interactions';
import { mergeProps } from '../../libs/merge-props.js';
import { useClickOutside } from 'usable-react';
import { useSSR } from '../ssr-provider.js';
import { Tooltip } from './tooltip/tooltip.js';

/**
 * A high-level tooltip component. Under the hood, this component wires up the
 * supplied `anchor` with mouse/touch events to show or hide the tooltip.
 */
const AnchoredTooltip = (props) => {
    const { toggle, initialToggleValue, anchor: tooltipAnchor, delay } = props, otherProps = __rest(props, ["toggle", "initialToggleValue", "anchor", "delay"]);
    const [focusWithin, setFocusWithinState] = useState(false);
    const [hover, setHoverState] = useState(false);
    const [showTooltip, setShowTooltip] = useState(toggle ? initialToggleValue : false);
    const anchorRef = useRef(null);
    const tooltipRef = useRef(null);
    const { isServer } = useSSR();
    if (!isServer) {
        useClickOutside([tooltipRef.current, anchorRef.current], () => setShowTooltip(false), []);
    }
    const { isFocusVisible } = useFocusVisible();
    const { focusWithinProps } = useFocusWithin({
        onFocusWithinChange: useCallback((isFocused) => setFocusWithinState(isFocused && isFocusVisible), [isFocusVisible]),
    });
    const { hoverProps } = useHover({
        onHoverChange: useCallback((isHovered) => setHoverState(isHovered), []),
    });
    useEffect(() => {
        setShowTooltip(focusWithin || hover);
    }, [focusWithin, hover]);
    const anchor = (React.createElement("div", Object.assign({}, mergeProps(hoverProps, focusWithinProps), { ref: anchorRef }), tooltipAnchor));
    return React.createElement(Tooltip, Object.assign({ in: showTooltip, anchor: anchor, delay: toggle ? 0 : delay }, otherProps, { ref: tooltipRef }));
};

export { AnchoredTooltip };
//# sourceMappingURL=anchored-tooltip.js.map
