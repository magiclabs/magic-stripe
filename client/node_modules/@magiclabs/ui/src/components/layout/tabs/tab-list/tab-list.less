@import (reference) '../../../../styles/index.less';

.TabList {
  position: relative;
  display: inline-block;
  padding: 4px;
  border-radius: #mg.variables()[maxInt] * 1px;

  &.horizontal {
    background: #mg.getThemeColor(secondary)[];
    #mg.themeProperty(box-shadow, 4px 8px 20px #mg.getThemeColor(tertiary, 0.15)[], 4px 8px 20px #mg.getThemeColor(tertiary, 0.25)[]);

    .selectedTabIndicator {
      // `width` and `left` are set programatically.
      position: absolute;
      height: calc(100% - 8px);
      background-color: #mg.getThemeColor(primary)[];
      border-radius: #mg.variables()[maxInt] * 1px;
      &.withAnimation {
        transition: width 0.2s ease, left 0.2s ease;
      }
    }

    .focusRing {
      position: absolute;
      top: -5px;
      left: -5px;
      width: calc(100% + 6px);
      height: calc(100% + 6px);
      border: solid 2px #mg.getThemeColor(primary)[];
      border-radius: #mg.variables()[maxInt] * 1px;
    }
  }

  &.vertical {
    .selectedTabIndicator {
      // `height` and `top` are set programatically.
      position: absolute;
      width: 6px;
      background-color: #mg.getThemeColor(tertiary)[];
      border-radius: #mg.variables()[maxInt] * 1px;
      &.withAnimation {
        transition: height 0.2s ease, top 0.2s ease;
      }
    }

    &:before {
      content: '';
      position: absolute;
      height: calc(100% - 8px);
      width: 6px;
      #mg.themeProperty(background-color, #mg.getThemeColor(mid)[lightest], #mg.getThemeColor(mid)[darkest]);
      border-radius: #mg.variables()[maxInt] * 1px;
    }

    .focusRing {
      // `height` and `top` are set programatically.
      position: absolute;
      left: 0;
      width: 10px;
      border: solid 2px #mg.getThemeColor(primary)[];
      border-radius: 10px;
      transition: height 0.2s ease, top 0.2s ease;
    }
  }

  :not(.selectedTabIndicator) {
    z-index: 1;
  }
}
