@import (reference) '../../../styles/index.less';

@size: 20px;

.createCheckmarkStyles(@color) {
  @themedColor: #mg.getThemeColor(@color);

  // Positioning / Alignment
  position: absolute;
  pointer-events: none;
  top: 0;
  left: 0;
  height: @size;
  width: @size;

  // Border / Background
  border-radius: 4px;
  border-style: solid;
  border-width: 2px;
  border-color: #mg.getThemeColor(tertiary)[];
  background-color: transparent;
  box-sizing: border-box;

  // Transition
  transition: all 0.2s ease;
  * { will-change: left; }

  // Focus Styles
  outline: none;
  cursor: pointer;
  .focusRing {
    position: absolute;
    top: -6px;
    left: -6px;
    width: calc(100% + 8px);
    height: calc(100% + 8px);
    border: solid 2px @themedColor[];
    border-radius: 7px;
  }

  &.disabled {
    opacity: 0.4;
  }

  &.hover, &.active {
    border-color: @themedColor[];
  }

  // Checked styles
  &.checked {
    border-color: @themedColor[];
    background-color: @themedColor[];
  }

  // Determinate checked state
  .checkmarkIcon {
    position: absolute;
    display: block;
    line-height: 0;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    > * {
      position: absolute;
      display: block;
      line-height: 0;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  // Indeterminate checked state
  .indeterminancyIcon {
    position: absolute;
    display: block;
    line-height: 0;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    > * {
      position: absolute;
      display: block;
      line-height: 0;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) !important;
      background-color: #mg.getThemeColor(secondary)[];
      width: @size * 0.6;
      height: 2px;
      border-radius: #mg.variables()[maxInt] * 1px;
    }
  }
}

.Checkbox {
  position: relative;
  display: flex;
  align-items: center;

  input[type="checkbox"] {
    // Override default <input type="checkbox"> styles
    outline: none;
    height: @size;
    width: @size;
    padding: 0;
    margin: 0;
    opacity: 0;
    box-sizing: border-box;
    cursor: pointer;
  }

  .checkmark {
    &.color_primary { .createCheckmarkStyles('primary'); }
    &.color_error { .createCheckmarkStyles('error'); }
    &.color_warning { .createCheckmarkStyles('warning'); }
    &.color_success { .createCheckmarkStyles('success'); }
  }
}
