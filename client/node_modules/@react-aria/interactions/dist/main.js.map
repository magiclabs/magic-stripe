{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/interactions/src/textSelection.ts","./packages/@react-aria/interactions/src/utils.ts","./packages/@react-aria/interactions/src/context.ts","./packages/@react-aria/interactions/src/usePress.ts","./packages/@react-aria/interactions/src/Pressable.tsx","./packages/@react-aria/interactions/src/PressResponder.tsx","./packages/@react-aria/interactions/src/useFocus.ts","./packages/@react-aria/interactions/src/useFocusVisible.ts","./packages/@react-aria/interactions/src/useFocusWithin.ts","./packages/@react-aria/interactions/src/useHover.ts","./packages/@react-aria/interactions/src/useInteractOutside.ts","./packages/@react-aria/interactions/src/createEventHandler.ts","./packages/@react-aria/interactions/src/useKeyboard.ts","./packages/@react-aria/interactions/src/useMove.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\ntype State = 'default' | 'disabled' | 'restoring';\n\nlet state: State = 'default';\nlet savedUserSelect = '';\n\nexport function disableTextSelection() {\n  if (state === 'default') {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = 'none';\n  }\n\n  state = 'disabled';\n}\n\nexport function restoreTextSelection() {\n  // If the state is already default, there's nothing to do.\n  // If it is restoring, then there's no need to queue a second restore.\n  if (state !== 'disabled') {\n    return;\n  }\n\n  state = 'restoring';\n\n  // There appears to be a delay on iOS where selection still might occur\n  // after pointer up, so wait a bit before removing user-select.\n  setTimeout(() => {\n    // Wait for any CSS transitions to complete so we don't recompute style\n    // for the whole page in the middle of the animation and cause jank.\n    runAfterTransition(() => {\n      // Avoid race conditions\n      if (state === 'restoring') {\n        if (document.documentElement.style.webkitUserSelect === 'none') {\n          document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n        }\n\n        savedUserSelect = '';\n        state = 'default';\n      }\n    });\n  }, 300);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<HTMLElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {focusWithoutScrolling, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport {isVirtualClick} from './utils';\nimport {PointerType, PressEvents} from '@react-types/shared';\nimport {PressResponderContext} from './context';\nimport {useGlobalListeners} from '@react-aria/utils';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<HTMLElement>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  activePointerId: any,\n  target: HTMLElement | null,\n  isOverTarget: boolean,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: HTMLAttributes<HTMLElement>\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n\n  // Sync ref from <PressResponder> with ref passed to usePress.\n  useEffect(() => {\n    if (context && context.ref) {\n      context.ref.current = props.ref.current;\n      return () => {\n        context.ref.current = null;\n      };\n    }\n  }, [context, props.ref]);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb,\n    ...domProps\n  } = usePressResponderContext(props);\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false\n  });\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      if (isDisabled) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n\n    let pressProps: HTMLAttributes<HTMLElement> = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent)) {\n          e.preventDefault();\n          e.stopPropagation();\n\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget as HTMLElement;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && !e.repeat) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && isVirtualClick(e.nativeEvent)) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e)) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        state.isPressed = false;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', e.target === state.target);\n        removeGlobalListener(document, 'keyup', onKeyUp, false);\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (e.target === state.target && isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        e.preventDefault();\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          disableTextSelection();\n          triggerPressStart(e, e.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          e.preventDefault();\n        }\n      };\n\n      let unbindEvents = () => {\n        removeGlobalListener(document, 'pointermove', onPointerMove, false);\n        removeGlobalListener(document, 'pointerup', onPointerUp, false);\n        removeGlobalListener(document, 'pointercancel', onPointerCancel, false);\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, e.pointerType as PointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), e.pointerType as PointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          unbindEvents();\n          restoreTextSelection();\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        if (state.isPressed) {\n          if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n          }\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          unbindEvents();\n          restoreTextSelection();\n        }\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        e.preventDefault();\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse');\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, 'mouse');\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, 'mouse', false);\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse');\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeGlobalListener(document, 'mouseup', onMouseUp, false);\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        let pointerType: PointerType = isVirtualClick(e) ? 'virtual' : 'mouse';\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        disableTextSelection();\n        triggerPressStart(e, 'touch');\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, 'touch');\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, 'touch', false);\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, 'touch');\n          triggerPressEnd(e, 'touch');\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, 'touch', false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        restoreTextSelection();\n        removeGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancelTouchEvent(e, 'touch');\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as HTMLElement).contains(state.target)) {\n          cancelTouchEvent({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n          }, 'touch');\n        }\n      };\n\n      let cancelTouchEvent = (e: EventBase, pointerType: PointerType) => {\n        if (state.isOverTarget) {\n          triggerPressEnd(e, pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        restoreTextSelection();\n        window.removeEventListener('scroll', onScroll, true);\n      };\n    }\n\n    return pressProps;\n  }, [isDisabled, onPressStart, onPressChange, onPressEnd, onPress, onPressUp, addGlobalListener, preventFocusOnPress, removeGlobalListener]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => restoreTextSelection();\n  }, []);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: HTMLElement): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent): boolean {\n  const {key, target} = event;\n  const element = target as HTMLElement;\n  const {tagName, isContentEditable} = element;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar') &&\n    (tagName !== 'INPUT' &&\n      tagName !== 'TEXTAREA' &&\n      isContentEditable !== true) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: HTMLElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey\n  };\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number\n}\n\nfunction isOverTarget(point: EventPoint, target: HTMLElement) {\n  let rect = target.getBoundingClientRect();\n  return (point.clientX || 0) >= (rect.left || 0) &&\n    (point.clientX || 0) <= (rect.right || 0) &&\n    (point.clientY || 0) >= (rect.top || 0) &&\n    (point.clientY || 0) <= (rect.bottom || 0);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {HTMLAttributes, ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<HTMLAttributes<HTMLElement>, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<HTMLElement>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<HTMLElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes} from 'react';\nimport {FocusEvents} from '@react-types/shared';\n\ninterface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  if (props.isDisabled) {\n    return {focusProps: {}};\n  }\n\n  let onFocus, onBlur;\n  if (props.onFocus || props.onFocusChange) {\n    onFocus = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(true);\n        }\n      }\n    };\n  }\n\n  if (props.onBlur || props.onFocusChange) {\n    onBlur = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(false);\n        }\n      }\n    };\n  }\n\n  return {\n    focusProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac} from '@react-aria/utils';\nimport {isVirtualClick} from './utils';\nimport {useEffect, useState} from 'react';\n\ntype Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\ninterface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey);\n}\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n\n  hasEventBeforeFocus = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  setupGlobalFocusEvents();\n\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      // If this is a text input component, don't update the focus visible style when\n      // typing except for when the Tab and Escape keys are pressed.\n      if (isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]) {\n        return;\n      }\n\n      setFocusVisible(isFocusVisible());\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, [isTextInput]);\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes, useRef} from 'react';\n\ninterface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\ninterface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let state = useRef({\n    isFocusWithin: false\n  }).current;\n\n  if (props.isDisabled) {\n    return {focusWithinProps: {}};\n  }\n\n  let onFocus = (e: FocusEvent) => {\n    if (!state.isFocusWithin) {\n      if (props.onFocusWithin) {\n        props.onFocusWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(true);\n      }\n\n      state.isFocusWithin = true;\n    }\n  };\n\n  let onBlur = (e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.isFocusWithin && !e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      if (props.onBlurWithin) {\n        props.onBlurWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(false);\n      }\n\n      state.isFocusWithin = false;\n    }\n  };\n\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {HoverEvents} from '@react-types/shared';\nimport {HTMLAttributes, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: HTMLAttributes<HTMLElement>,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let hoverProps = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      if (isDisabled || pointerType === 'touch' || state.isHovered) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      if (isDisabled || pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.target;\n\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: HTMLAttributes<HTMLElement> = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        triggerHoverEnd(e, e.pointerType);\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        triggerHoverEnd(e, 'mouse');\n      };\n    }\n    return hoverProps;\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\ninterface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  let state = stateRef.current;\n\n  useEffect(() => {\n    let onPointerDown = (e) => {\n      if (isDisabled) {\n        return;\n      }\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n    /*\n    // FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=1675846 prevents us from using this pointerevent\n    // once it's fixed we can uncomment\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {*/\n    let onMouseUp = (e) => {\n      if (isDisabled) {\n        return;\n      }\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n      } else if (state.isPointerDown && onInteractOutside && isValidEvent(e, ref)) {\n        state.isPointerDown = false;\n        onInteractOutside(e);\n      }\n    };\n\n    let onTouchEnd = (e) => {\n      if (isDisabled) {\n        return;\n      }\n      state.ignoreEmulatedMouseEvents = true;\n      if (onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n        state.isPointerDown = false;\n        onInteractOutside(e);\n      }\n    };\n\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('mouseup', onMouseUp, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('touchend', onTouchEnd, true);\n\n    return () => {\n      document.removeEventListener('mousedown', onPointerDown, true);\n      document.removeEventListener('mouseup', onMouseUp, true);\n      document.removeEventListener('touchstart', onPointerDown, true);\n      document.removeEventListener('touchend', onTouchEnd, true);\n    };\n  }, [onInteractOutside, ref, state.ignoreEmulatedMouseEvents, state.isPointerDown, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {HTMLAttributes} from 'react';\nimport {KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {MoveEvents, PointerType} from '@react-types/shared';\nimport React, {HTMLAttributes, useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\ninterface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: HTMLAttributes<HTMLElement> = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY\n      });\n    };\n    let end = (pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move('mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move('touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          // @ts-ignore\n          let pointerType: PointerType = e.pointerType || 'mouse';\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n            // @ts-ignore\n          let pointerType: PointerType = e.pointerType || 'mouse';\n          end(pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (deltaX: number, deltaY: number) => {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","state","savedUserSelect","disableTextSelection","document","documentElement","style","webkitUserSelect","restoreTextSelection","setTimeout","runAfterTransition","isVirtualClick","event","mozInputSource","isTrusted","detail","pointerType","PressResponderContext","React","createContext","displayName","usePressResponderContext","props","context","useContext","register","contextProps","mergeProps","useEffect","ref","current","usePress","onPress","onPressChange","onPressStart","onPressEnd","onPressUp","isDisabled","isPressed","isPressedProp","preventFocusOnPress","domProps","setPressed","useState","useRef","ignoreEmulatedMouseEvents","ignoreClickAfterPress","activePointerId","target","isOverTarget","addGlobalListener","removeGlobalListener","useGlobalListeners","pressProps","useMemo","triggerPressStart","originalEvent","type","currentTarget","shiftKey","metaKey","ctrlKey","triggerPressEnd","wasPressed","triggerPressUp","onKeyDown","e","isValidKeyboardEvent","nativeEvent","preventDefault","stopPropagation","repeat","onKeyUp","createEvent","onClick","button","focusWithoutScrolling","isHTMLAnchorLink","getAttribute","click","PointerEvent","onPointerDown","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","unbindEvents","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","getTouchFromEvent","identifier","window","onScroll","onTouchMove","getTouchById","onTouchEnd","onTouchCancel","cancelTouchEvent","contains","removeEventListener","tagName","hasAttribute","key","element","isContentEditable","role","targetTouches","length","changedTouches","i","point","rect","getBoundingClientRect","clientX","left","right","clientY","top","bottom","Pressable","forwardRef","children","newRef","child","Children","only","cloneElement","PressResponder","isRegistered","prevContext","console","warn","useFocus","focusProps","onFocus","onBlur","onFocusChange","currentModality","changeHandlers","Set","hasSetupGlobalListeners","hasEventBeforeFocus","FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","triggerChangeHandlers","modality","handler","isValidKey","isMac","altKey","handleKeyboardEvent","handlePointerEvent","handleClickEvent","handleFocusEvent","handleWindowBlur","setupGlobalFocusEvents","focus","HTMLElement","prototype","apply","arguments","addEventListener","isFocusVisible","getInteractionModality","setInteractionModality","useInteractionModality","setModality","add","delete","useFocusVisible","isTextInput","autoFocus","isFocusVisibleState","setFocusVisible","KeyboardEvent","useFocusWithin","isFocusWithin","focusWithinProps","onFocusWithin","onFocusWithinChange","relatedTarget","onBlurWithin","globalIgnoreEmulatedMouseEvents","hoverCount","setGlobalIgnoreEmulatedMouseEvents","handleGlobalPointerEvent","setupGlobalTouchEvents","useHover","onHoverStart","onHoverChange","onHoverEnd","isHovered","setHovered","hoverProps","triggerHoverStart","triggerHoverEnd","onPointerEnter","onPointerLeave","useInteractOutside","onInteractOutside","stateRef","isPointerDown","isValidEvent","ownerDocument","createEventHandler","shouldStopPropagation","isDefaultPrevented","error","continuePropagation","useKeyboard","keyboardProps","useMove","onMoveStart","onMove","onMoveEnd","didMove","lastPosition","id","moveProps","start","move","deltaX","deltaY","end","onMouseMove","pageX","pageY","findIndex","triggerKeyboardMove"],"version":3,"file":"main.js.map"}