{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/focus/src/focusSafely.ts","./packages/@react-aria/focus/src/FocusScope.tsx","./packages/@react-aria/focus/src/useFocusRing.ts","./packages/@react-aria/focus/src/FocusRing.tsx","./packages/@react-aria/focus/src/useFocusable.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: HTMLElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely} from './focusSafely';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n// import {FocusScope, useFocusScope} from 'react-events/focus-scope';\n// export {FocusScope};\n\ninterface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\ninterface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: HTMLElement,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean\n}\n\ninterface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): HTMLElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): HTMLElement\n}\n\nconst FocusContext = React.createContext<FocusManager>(null);\n\nlet activeScope: RefObject<HTMLElement[]> = null;\nlet scopes: Set<RefObject<HTMLElement[]>> = new Set();\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n// For now, it relies on the DOM tree order rather than the React tree order, and is probably\n// less optimized for performance.\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<HTMLElement[]>([]);\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n    scopes.add(scopeRef);\n    return () => {\n      scopes.delete(scopeRef);\n    };\n  }, [children]);\n\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  let focusManager = createFocusManager(scopeRef);\n\n  return (\n    <FocusContext.Provider value={focusManager}>\n      <span hidden ref={startRef} />\n      {children}\n      <span hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext);\n}\n\nfunction createFocusManager(scopeRef: React.RefObject<HTMLElement[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let node = opts.from || document.activeElement;\n      let focusable = getFocusableElementsInScope(scopeRef.current, opts);\n      let nextNode = focusable.find(n =>\n        !!(node.compareDocumentPosition(n) & (Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_CONTAINED_BY))\n      );\n      if (!nextNode && opts.wrap) {\n        nextNode = focusable[0];\n      }\n      if (nextNode) {\n        nextNode.focus();\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let node = opts.from || document.activeElement;\n      let focusable = getFocusableElementsInScope(scopeRef.current, opts).reverse();\n      let previousNode = focusable.find(n =>\n        !!(node.compareDocumentPosition(n) & (Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINED_BY))\n      );\n      if (!previousNode && opts.wrap) {\n        previousNode = focusable[0];\n      }\n      if (previousNode) {\n        previousNode.focus();\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(',') + ',[tabindex]';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([tabindex=\"-1\"]),');\n\nfunction getFocusableElementsInScope(scope: HTMLElement[], opts: FocusManagerOptions): HTMLElement[] {\n  let res = [];\n  let selector = opts.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  for (let node of scope) {\n    if (node.matches(selector)) {\n      res.push(node);\n    }\n    res.push(...Array.from(node.querySelectorAll(selector)));\n  }\n  return res;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<HTMLElement[]>, contain: boolean) {\n  let focusedNode = useRef<HTMLElement>();\n\n  let raf = useRef(null);\n  useEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let elements = getFocusableElementsInScope(scope, {tabbable: true});\n      let position = elements.indexOf(focusedElement);\n      let lastPosition = elements.length - 1;\n      let nextElement = null;\n\n      if (e.shiftKey) {\n        if (position <= 0) {\n          nextElement = elements[lastPosition];\n        } else {\n          nextElement = elements[position - 1];\n        }\n      } else {\n        if (position === lastPosition) {\n          nextElement = elements[0];\n        } else {\n          nextElement = elements[position + 1];\n        }\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n      // restore focus to the previously focused node or the first tabbable element in the active scope.\n      let isInAnyScope = isElementInAnyScope(e.target, scopes);\n      if (!isInAnyScope) {\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        let isInAnyScope = isElementInAnyScope(document.activeElement, scopes);\n\n        if (!isInAnyScope) {\n          activeScope = scopeRef;\n          focusedNode.current = e.target;\n          focusedNode.current.focus();\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => cancelAnimationFrame(raf.current);\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element, scopes: Set<RefObject<HTMLElement[]>>) {\n  for (let scope of scopes.values()) {\n    if (isElementInScope(element, scope.current)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isElementInScope(element: Element, scope: HTMLElement[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction focusElement(element: HTMLElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: HTMLElement[]) {\n  let elements = getFocusableElementsInScope(scope, {tabbable: true});\n  focusElement(elements[0]);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<HTMLElement[]>, autoFocus: boolean) {\n  useEffect(() => {\n    if (autoFocus) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n  }, [scopeRef, autoFocus]);\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<HTMLElement[]>, restoreFocus: boolean, contain: boolean) {\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    let nodeToRestore = document.activeElement as HTMLElement;\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scope)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n        } while (isElementInScope(nextElement, scope));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          nextElement.focus();\n        } else {\n          // If there is no next element, blur the focused element to move focus to the body.\n          focusedElement.blur();\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n\n      if (restoreFocus && nodeToRestore && isElementInScope(document.activeElement, scope)) {\n        requestAnimationFrame(() => {\n          if (document.body.contains(nodeToRestore)) {\n            focusElement(nodeToRestore);\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: HTMLElement, opts?: FocusManagerOptions) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as HTMLElement).matches(selector)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    },\n    false\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n","import {HTMLAttributes, useState} from 'react';\nimport {useFocus, useFocusVisible, useFocusWithin} from '@react-aria/interactions';\n\ninterface FocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: FocusRingProps = {}): FocusRingAria {\n  let {within} = props;\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusWithin, setFocusWithin] = useState(false);\n  let {isFocusVisible} = useFocusVisible(props);\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange: setFocused\n  });\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: setFocusWithin\n  });\n\n  return {\n    isFocused: within ? isFocusWithin : isFocused,\n    isFocusVisible: (within ? isFocusWithin : isFocused) && isFocusVisible,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\ninterface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableDOMProps, FocusableProps} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {HTMLAttributes, MutableRefObject, ReactNode, RefObject, useContext, useEffect} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\ninterface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusableProviderProps extends HTMLAttributes<HTMLElement> {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<HTMLElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<HTMLElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n\n  useEffect(() => {\n    if (context && context.ref) {\n      context.ref.current = ref.current;\n      return () => {\n        context.ref.current = null;\n      };\n    }\n  }, [context, ref]);\n\n  return context;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<HTMLElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<HTMLElement>) {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n\n  useEffect(() => {\n    if (props.autoFocus && domRef.current) {\n      domRef.current.focus();\n    }\n  }, [props.autoFocus, domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","focusSafely","element","getInteractionModality","lastFocusedElement","document","activeElement","runAfterTransition","contains","focusWithoutScrolling","FocusContext","React","createContext","activeScope","scopes","Set","FocusScope","props","children","contain","restoreFocus","autoFocus","startRef","useRef","endRef","scopeRef","useLayoutEffect","node","current","nextSibling","nodes","push","add","delete","useFocusContainment","useRestoreFocus","useAutoFocus","focusManager","createFocusManager","useFocusManager","useContext","focusNext","opts","from","focusable","getFocusableElementsInScope","nextNode","find","n","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","wrap","focus","focusPrevious","reverse","previousNode","DOCUMENT_POSITION_PRECEDING","focusableElements","FOCUSABLE_ELEMENT_SELECTOR","join","TABBABLE_ELEMENT_SELECTOR","scope","res","selector","tabbable","matches","Array","querySelectorAll","focusedNode","raf","useEffect","onKeyDown","e","key","altKey","ctrlKey","metaKey","focusedElement","isElementInScope","elements","position","indexOf","lastPosition","length","nextElement","shiftKey","preventDefault","focusElement","onFocus","isInAnyScope","isElementInAnyScope","target","focusFirstInScope","onBlur","requestAnimationFrame","addEventListener","forEach","removeEventListener","cancelAnimationFrame","values","some","scroll","err","nodeToRestore","walker","getFocusableTreeWalker","body","currentNode","stopPropagation","blur","root","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","FILTER_SKIP","useFocusRing","within","isFocused","setFocused","useState","isFocusWithin","setFocusWithin","isFocusVisible","useFocusVisible","focusProps","useFocus","isDisabled","onFocusChange","focusWithinProps","useFocusWithin","onFocusWithinChange","FocusRing","focusClass","focusRingClass","child","Children","only","cloneElement","mergeProps","className","clsx","FocusableContext","useFocusableContext","ref","context","FocusableProvider","otherProps","_FocusableProvider","forwardRef","useFocusable","domRef","keyboardProps","useKeyboard","interactions","domProps","interactionProps","focusableProps","tabIndex","excludeFromTabOrder","undefined"],"version":3,"file":"main.js.map"}