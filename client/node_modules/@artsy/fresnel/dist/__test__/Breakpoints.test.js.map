{"version":3,"sources":["../../src/__test__/Breakpoints.test.tsx"],"names":["config","small","medium","large","breakpoint","Breakpoints","describe","it","breakpoints","toVisibleAtBreakpointSet","greaterThan","expect","toEqual","greaterThanOrEqual","lessThan","at","between"],"mappings":";;AAAA;;AAEA,IAAMA,MAAM,GAAG;AACb,iBAAe,CADF;AAEbC,EAAAA,KAAK,EAAE,GAFM;AAGbC,EAAAA,MAAM,EAAE,IAHK;AAIbC,EAAAA,KAAK,EAAE;AAJM,CAAf;AAOA,IAAMC,UAAU,GAAG,IAAIC,wBAAJ,CAAgBL,MAAhB,CAAnB;AAEAM,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5BA,EAAAA,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACzCC,IAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAM;AACjD,UAAMC,WAAW,GAAGJ,UAAU,CAACK,wBAAX,CAAoC;AACtDC,QAAAA,WAAW,EAAE;AADyC,OAApC,CAApB;AAGAC,MAAAA,MAAM,CAACH,WAAD,CAAN,CAAoBI,OAApB,CAA4B,CAAC,QAAD,EAAW,OAAX,CAA5B;AACD,KALC,CAAF;AAMAL,IAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACxD,UAAMC,WAAW,GAAGJ,UAAU,CAACK,wBAAX,CAAoC;AACtDI,QAAAA,kBAAkB,EAAE;AADkC,OAApC,CAApB;AAGAF,MAAAA,MAAM,CAACH,WAAD,CAAN,CAAoBI,OAApB,CAA4B,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAA5B;AACD,KALC,CAAF;AAMAL,IAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC9C,UAAMC,WAAW,GAAGJ,UAAU,CAACK,wBAAX,CAAoC;AACtDK,QAAAA,QAAQ,EAAE;AAD4C,OAApC,CAApB;AAGAH,MAAAA,MAAM,CAACH,WAAD,CAAN,CAAoBI,OAApB,CAA4B,CAAC,aAAD,CAA5B;AACD,KALC,CAAF;AAMAL,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACxC,UAAMC,WAAW,GAAGJ,UAAU,CAACK,wBAAX,CAAoC;AAAEM,QAAAA,EAAE,EAAE;AAAN,OAApC,CAApB;AACAJ,MAAAA,MAAM,CAACH,WAAD,CAAN,CAAoBI,OAApB,CAA4B,CAAC,OAAD,CAA5B;AACD,KAHC,CAAF;AAIAL,IAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7C,UAAMC,WAAW,GAAGJ,UAAU,CAACK,wBAAX,CAAoC;AACtDO,QAAAA,OAAO,EAAE,CAAC,aAAD,EAAgB,QAAhB;AAD6C,OAApC,CAApB;AAGAL,MAAAA,MAAM,CAACH,WAAD,CAAN,CAAoBI,OAApB,CAA4B,CAAC,aAAD,EAAgB,OAAhB,CAA5B;AACD,KALC,CAAF;AAMD,GA7BO,CAAR;AA8BD,CA/BO,CAAR","sourcesContent":["import { Breakpoints } from \"../Breakpoints\"\n\nconst config = {\n  \"extra-small\": 0,\n  small: 768,\n  medium: 1024,\n  large: 1120,\n}\n\nconst breakpoint = new Breakpoints(config)\n\ndescribe(\"Breakpoints\", () => {\n  describe(\"toVisibleAtBreakpointSet\", () => {\n    it(\"returns correct values for greaterThan\", () => {\n      const breakpoints = breakpoint.toVisibleAtBreakpointSet({\n        greaterThan: \"small\",\n      })\n      expect(breakpoints).toEqual([\"medium\", \"large\"])\n    })\n    it(\"returns correct values for greaterThanOrEqual\", () => {\n      const breakpoints = breakpoint.toVisibleAtBreakpointSet({\n        greaterThanOrEqual: \"small\",\n      })\n      expect(breakpoints).toEqual([\"small\", \"medium\", \"large\"])\n    })\n    it(\"returns correct values for lessThan\", () => {\n      const breakpoints = breakpoint.toVisibleAtBreakpointSet({\n        lessThan: \"small\",\n      })\n      expect(breakpoints).toEqual([\"extra-small\"])\n    })\n    it(\"returns correct values for at\", () => {\n      const breakpoints = breakpoint.toVisibleAtBreakpointSet({ at: \"small\" })\n      expect(breakpoints).toEqual([\"small\"])\n    })\n    it(\"returns correct values for between\", () => {\n      const breakpoints = breakpoint.toVisibleAtBreakpointSet({\n        between: [\"extra-small\", \"medium\"],\n      })\n      expect(breakpoints).toEqual([\"extra-small\", \"small\"])\n    })\n  })\n})\n"],"file":"Breakpoints.test.js"}