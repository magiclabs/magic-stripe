import { getCallback } from './getCallback';
import { getKeyPrefix } from './getKeyPrefix';
//tslint:disable-next-line:no-ignored-initial-value
export function dropInstanceCommon(options, callback) {
    var _this = this;
    callback = getCallback.apply(this, arguments);
    options = (typeof options !== 'function' && options) || {};
    if (!options.name) {
        var currentConfig = this.config();
        options.name = options.name || currentConfig.name;
        options.storeName = options.storeName || currentConfig.storeName;
    }
    var promise;
    if (!options.name) {
        promise = Promise.reject('Invalid arguments');
    }
    else {
        promise = new Promise(function (resolve) {
            if (!options.storeName) {
                resolve(options.name + "/");
            }
            else {
                resolve(getKeyPrefix(options, _this._defaultConfig));
            }
        });
    }
    return { promise: promise, callback: callback };
}
//# sourceMappingURL=dropInstanceCommon.js.map