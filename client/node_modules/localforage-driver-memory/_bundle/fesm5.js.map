{"version":3,"file":"fesm5.js","sources":["../../src/_driver.ts","../../src/Store.ts","../../src/_initStorage.ts","../../src/clear.ts","../../src/dropInstance.ts","../../src/getItem.ts","../../src/iterate.ts","../../src/key.ts","../../src/keys.ts","../../src/length.ts","../../src/removeItem.ts","../../src/setItem.ts","../../src/index.ts"],"sourcesContent":["export const _driver = 'localforage-driver-memory';\n","const stores: { [store: string]: Store } = {};\n\n/** @internal */\nexport class Store {\n\n  private data: { [k: string]: any } = {};\n\n  private constructor(private readonly kp: string) {\n  }\n\n  public static resolve(kp: string): Store {\n    if (!stores[kp]) {\n      stores[kp] = new Store(kp);\n    }\n\n    return stores[kp];\n  }\n\n  public clear(): void {\n    this.data = {};\n  }\n\n  public drop(): void {\n    this.clear();\n    delete stores[this.kp];\n  }\n\n  public get(key: string): any {\n    return this.data[key];\n  }\n\n  public key(idx: number): string {\n    return this.keys()[idx];\n  }\n\n  public keys(): string[] {\n    return Object.keys(this.data);\n  }\n\n  public rm(k: string): void {\n    delete this.data[k];\n  }\n\n  public set(k: string, v: any): void {\n    this.data[k] = v;\n  }\n}\n","import {clone, getKeyPrefix, LocalForageOptions, serialiser} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function _initStorage(this: any, options?: LocalForageOptions): any {\n  const opts = options ? clone(options) : {};\n  const kp = getKeyPrefix(opts, this._defaultConfig);\n  const store = Store.resolve(kp);\n\n  this._dbInfo = opts;\n  this._dbInfo.serializer = serialiser;\n  this._dbInfo.keyPrefix = kp;\n  this._dbInfo.mStore = store;\n\n  return Promise.resolve();\n}\n","import {executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function clear(this: any, callback?: (err: any) => void): Promise<void> {\n  const promise = this.ready().then(() => {\n    (<Store>this._dbInfo.mStore).clear();\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {dropInstanceCommon, executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function dropInstance(this: any, _options: any, _cb?: any) {\n  const {promise, callback} = dropInstanceCommon.apply(this, <any>arguments);\n\n  const outPromise = (<Promise<string>>promise).then<void>(keyPrefix => {\n    Store.resolve(keyPrefix).drop();\n  });\n\n  executeCallback(outPromise, callback);\n\n  return promise;\n}\n","import {executeCallback, normaliseKey} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function getItem(this: any, key$: string, callback?: any) {\n  key$ = normaliseKey(key$);\n\n  const promise = this.ready().then(() => {\n    const result = (<Store>this._dbInfo.mStore).get(key$);\n\n    // Deserialise if the result is not null or undefined\n    return result == null ? null : this._dbInfo.serializer.deserialize(result); //tslint:disable-line:triple-equals\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function iterate(this: any, iterator: any, callback?: any) {\n  const promise = this.ready().then(() => {\n    const store = (<Store>this._dbInfo.mStore);\n    const keys = store.keys();\n\n    for (let i = 0; i < keys.length; i++) {\n      let value = store.get(keys[i]);\n\n      // If a result was found, parse it from the serialized\n      // string into a JS object. If result isn't truthy, the\n      // key is likely undefined and we'll pass it straight\n      // to the iterator.\n      if (value) {\n        value = this._dbInfo.serializer.deserialize(value);\n      }\n\n      value = iterator(value, keys[i], i + 1);\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function key(this: any, idx: number, callback?: any) {\n  const promise = this.ready().then(() => {\n    let result: any;\n    try {\n      result = (<Store>this._dbInfo.mStore).key(idx);\n\n      if (result === undefined) {\n        result = null;\n      }\n    } catch {\n      result = null;\n    }\n\n    return result;\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function keys(this: any, callback?: any) {\n  const promise = this.ready().then(() => {\n    return (<Store>this._dbInfo.mStore).keys();\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback} from 'localforage-driver-commons';\n\nexport function length(this: any, callback?: any) {\n  const promise = this.keys().then((keys$: any[]) => keys$.length);\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback, normaliseKey} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function removeItem(this: any, key$: string, callback?: any) {\n  key$ = normaliseKey(key$);\n\n  const promise = this.ready().then(() => {\n    (<Store>this._dbInfo.mStore).rm(key$);\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback, normaliseKey} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function setItem(this: any, key$: string, value: any, callback?: any) {\n  key$ = normaliseKey(key$);\n\n  const promise = this.ready().then(() => {\n    if (value === undefined) {\n      value = null;\n    }\n\n    // Save the original value to pass to the callback.\n    const originalValue = value;\n\n    return new Promise<any>((resolve, reject) => {\n      this._dbInfo.serializer.serialize(value, (value$: string, error: Error) => {\n        if (error) {\n          reject(error);\n        } else {\n          try {\n            (<Store>this._dbInfo.mStore).set(key$, value$);\n            resolve(originalValue);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n    });\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","export const _support = true;\nexport {_driver} from './_driver';\nexport {_initStorage} from './_initStorage';\nexport {clear} from './clear';\nexport {dropInstance} from './dropInstance';\nexport {getItem} from './getItem';\nexport {iterate} from './iterate';\nexport {key} from './key';\nexport {keys} from './keys';\nexport {length} from './length';\nexport {removeItem} from './removeItem';\nexport {setItem} from './setItem';\n"],"names":[],"mappings":"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"}